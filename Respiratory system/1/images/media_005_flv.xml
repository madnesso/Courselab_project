<?xml version="1.0" encoding="utf-8" ?>
<!--
'*	media_005_fvp.xml
'*	Copyright (c) Websoft, 2006.  All rights reserved.
-->
<params>
	<object>
		<label>Flash-video</label>
		<width>320</width>
		<height>240</height>
		<description>Flash-video</description>
	</object>
    <page name=" Parameters " w="240" h="130">

		<param type="line" x="8" y="12" w="224" h="44"/>

		<param type="label" text="  Flash video source " x="20" y="8" w="70" h="13"/>
		<param type="radio" id="ffile" text="File:" def="yes" x="20" y="20" w="30" h="13">
			<events>
				<event name="check" target="flash_uri" action="enable" />
				<event name="uncheck" target="flash_uri" action="disable" />
			</events>
		</param>
		<param type="radio" id="fURL" text="URL:" def="no" x="20" y="36" w="30" h="13">
			<events>
				<event name="check" target="flash_url" action="enable" />
				<event name="uncheck" target="flash_url" action="disable" />
			</events>
		</param>
		<param type="file" id="flash_uri" text="" def="" x="50" y="20" w="140" h="13"/>
		<param type="edit" id="flash_url" text="" def="" x="50" y="36" w="140" h="13"/>

		<param type="label" text="Display mode:" x="10" y="64" w="110" h="13"/>
		<param type="select" id="flash_wmode" text="" def="transparent" x="120" y="63" w="110" h="13">
			<items>
				<item id="window" label="Opaque, on top of all layers"/>
				<item id="transparent" label="Transparent layer"/>
				<item id="opaque" label="Opaque layer"/>
			</items>
		</param>
		<param type="label" text="Background color:" x="10" y="80" w="110" h="13"/>
		<param type="color" id="flash_bgcolor" text="#FFFFFF" def="#FFFFFF" x="120" y="79" w="45" h="13"/>
		<param type="label" text="Player controls:" x="10" y="96" w="100" h="13"/>
		<param type="select" id="video_controls" text="no" def="no" x="120" y="95" w="110" h="13">
			<items>
				<item id="no" label="Hide"/>
				<item id="full" label="Show"/>
			</items>
		</param>
		<param type="check" id="video_autostart" text="Movie autostart" def="yes" x="10" y="112" w="136" h="13"/>
	</page>
	<methods>
		<method name="Constructor" label="Constructor" access="private">
            <params>
            </params>
            <body>
                <![CDATA[
                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.setAttribute("destructor","Destructor");
					var oFVPContainer = document.getElementById(argobj.pid+"_fvpcontainer");
					if(oFVPContainer==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;

					var sPlayer = "images/media_005_flv/player0.swf";
					if(oParams.selectSingleNode("video_controls").text=="full") sPlayer = "images/media_005_flv/player1.swf";

					var sBGColor = oParams.selectSingleNode("flash_bgcolor").text;
					var sFile = "";
					if(oParams.selectSingleNode("fURL").text=="yes")
					{
						sFile = oParams.selectSingleNode("flash_url").text;
					}
					else
					{
						sFile = oParams.selectSingleNode("flash_uri").text;
						var reImages = new RegExp(/images/);
						sFile = sFile.replace(reImages,"..");
					}

					var oObject = GetObjectById(argobj.pid);
					var sWidth = oObject.getAttribute("w");
					var sHeight = oObject.getAttribute("h");

					var sWMode = oParams.selectSingleNode("flash_wmode").text;
					var sFlashVars = "lcId=agent_lc";
					sFlashVars += "&objtype=media_005_flv";
					sFlashVars += "&objID="+argobj.pid;
					sFlashVars += "&file="+sFile;
					sFlashVars += "&objwidth="+sWidth;
					sFlashVars += "&objheight="+sHeight;
					sFlashVars += "&fit=false";
					sFlashVars += "&autostart="+(oParams.selectSingleNode("video_autostart").text=="yes" ? "true" : "false");
					sFlashVars += "&autorewind=true";

					var sFlashObjectTag = "";
					if(g_isMSIE)
					{
						sFlashObjectTag += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" ';
						sFlashObjectTag += 'id="' + argobj.pid + '_fvpobj" ';
						sFlashObjectTag += 'codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" ';
						sFlashObjectTag += 'width="' + sWidth + '" ';
						sFlashObjectTag += 'height="' + sHeight + '">';
						sFlashObjectTag += '<param name="movie" value="'+sPlayer+'"/>';
						sFlashObjectTag += '<param name="quality" value="high"/>';
						sFlashObjectTag += '<param name="wmode" value="'+sWMode+'"/>';
						sFlashObjectTag += '<param name="AllowScriptAccess" value="sameDomain"/>';
						sFlashObjectTag += '<param name="swliveconnect" value="true"/>';
						sFlashObjectTag += '<param name="bgcolor" value="' + sBGColor + '"/>';
						sFlashObjectTag += '<param name="flashvars" value="'+sFlashVars+'"/>';
						sFlashObjectTag += '</object>';
						oFVPContainer.innerHTML = sFlashObjectTag;
					}
					else
					{
						sFlashObjectTag += '<embed quality="high" type="application/x-shockwave-flash" pluginspace="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" ';
						sFlashObjectTag += 'id="' + argobj.pid + '_fvpobj" ';
						sFlashObjectTag += 'name="' + argobj.pid + '_fvpobj" ';
						sFlashObjectTag += 'width="' + sWidth + '" ';
						sFlashObjectTag += 'height="' + sHeight + '" ';
						sFlashObjectTag += 'src="' + sPlayer + '" ';
						sFlashObjectTag += 'wmode="' + sWMode + '" ';
						sFlashObjectTag += 'bgcolor="' + sBGColor + '" ';
						sFlashObjectTag += 'AllowScriptAccess="sameDomain" ';
						sFlashObjectTag += 'swliveconnect="true" ';
						sFlashObjectTag += 'flashvars="'+sFlashVars+'">';
						sFlashObjectTag += '</embed>';
						oFVPContainer.innerHTML = sFlashObjectTag;
					}
					oCurObj.setAttribute("state","0");
					oCurObj.setAttribute("totaltime","0");
					oCurObj.setAttribute("position","0");
					oCurObj.setAttribute("mute","0");
					oCurObj.setAttribute("volume","100");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Listener" label="Listener" access="private">
            <params>
            </params>
            <body>
                <![CDATA[
                function Listener(argobj)
                {
                    if(argobj.pid==null || argobj.ev==null || argobj.action==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var iTmp = argobj.action.indexOf("{")+1;
					var sAction = argobj.action.substring(iTmp,argobj.action.length-1);
					var aPairs = sAction.split("*");
					var aPair = new Array();
					for(var i=0; i<aPairs.length;i++)
					{
						aPair = aPairs[i].split("~");
						if(aPair[1]==null) aPair[1]="";
						switch(aPair[0])
						{
							case "position":
								oCurObj.setAttribute("position", aPair[1]);
								break;
							case "volume":
								oCurObj.setAttribute("volume", aPair[1]);
								break;
							case "totaltime":
								oCurObj.setAttribute("totaltime", aPair[1]);
								break;
							case "playing":
								oCurObj.setAttribute("state", aPair[1]);
								break;
							case "mute":
								oCurObj.setAttribute("mute", aPair[1]);
								break;
							default: break;
						}
					}
					switch(argobj.ev)
					{
						case "tick":
							FireEvent(argobj.pid,"onPlayTick");
							break;
						case "stop":
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							FireEvent(argobj.pid,"onPlayStop");
							break;
						case "play":
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							FireEvent(argobj.pid,"onPlayStart");
							break;
						case "drag":
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							FireEvent(argobj.pid,"onPositionChange");
							break;
						case "eom":
							FireEvent(argobj.pid,"onMediaEnded");
							break;
						default:
							break;
					}
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Play" label="PLAY" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Play(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "play");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Stop" label="STOP" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Stop(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "stop");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Rewind" label="REWIND" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Rewind(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "rewind");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Pause" label="PAUSE" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Pause(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "pause");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Continue" label="CONTINUE" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Continue(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "resume");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Mute" label="MUTE" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Mute(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					if(oCurObj.getAttribute("mute")=="1") return false;
					oCurObj.setAttribute("mute", "1");
					oPlayer.SetVariable("sMute", "1");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Unmute" label="UNMUTE" access="public">
			<params>
			</params>
			<body>
				<![CDATA[
				function Unmute(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					if(oCurObj.getAttribute("mute")=="0") return false;
					oCurObj.setAttribute("mute", "0");
					oPlayer.SetVariable("sMute", "0");
					return true;
				}
				]]>
			</body>
		</method>
		<method name="SetVolume" label="SET VOLUME" access="public">
			<params>
				<param name="volume" label="Volume (0-100)"/>
			</params>
			<body>
				<![CDATA[
				function SetVolume(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					if(argobj.volume==null) return false;
					var iVolume = parseInt(argobj.volume,10);
					if(isNaN(iVolume)) return false;
					if(iVolume>100) iVolume = 100;
					if(iVolume<0) iVolume = 0;
					oCurObj.setAttribute("volume", iVolume.toString());
					oPlayer.SetVariable("sVolume", iVolume.toString());
					return true;
				}
				]]>
			</body>
		</method>
		<method name="SetPosition" label="SET POSITION" access="public">
			<params>
				<param name="position" label="Position (sec)"/>
			</params>
			<body>
				<![CDATA[
				function SetPosition(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					if(argobj.position==null) return false;
					var iPosition = parseFloat(argobj.position);
					if(isNaN(iPosition)) return false;
					if(iPosition<0) iPosition = 0;
					oPlayer.SetVariable("sPosition", iPosition.toString());
					return true;
				}
				]]>
			</body>
		</method>
		<method name="GetProperty" label="GetProperty" access="private">
            <params>
            </params>
            <body>
                <![CDATA[
                function GetProperty(argobj)
                {
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "mute":
							g_vPropertyValue = parseInt(oCurObj.getAttribute("mute"),10);
							break;
						case "volume":
							g_vPropertyValue = parseInt(oCurObj.getAttribute("volume"),10);
							break;
						case "duration":
							g_vPropertyValue = parseInt(oCurObj.getAttribute("totaltime"),10);
							break;
						case "currentposition":
							g_vPropertyValue = parseInt(oCurObj.getAttribute("position"),10);
							break;
						case "currentstate":
							var sState = oCurObj.getAttribute("state");
							if(sState!=null) {
								g_vPropertyValue = sState;
								return true;
							}
							break;
						default: return true;
					}
					return true;
				}
				]]>
			</body>
		</method>
		<method name="Destructor" label="DESTRUCTOR" access="private">
			<params>
			</params>
			<body>
				<![CDATA[
				function Destructor(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oPlayer = document.getElementById(argobj.pid+"_fvpobj");
					if(oPlayer==null) return false;
					oPlayer.SetVariable("sPlayState", "stop");
					return true;
				}
				]]>
			</body>
		</method>
	</methods>
</params>
