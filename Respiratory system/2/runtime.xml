<?xml version="1.0" encoding="utf-8"?>
<!-- Presentation file, saved 6/14/2021 3:32:08 PM by AbdallahMohamedSaadM using CourseLab 090219 -->
<module>
<runtime showsplash="yes" seqslides="no" preloadimages="yes" normalize="no"/>
<groups>
</groups>
<slides>
<slide id="SLIDE_13" sid="i" masterid="SLIDE_12" name="Immune System" indent="0">
<frames>
<frame id="FRAME_14" dur="0" infinite="0">
<object id="OBJ_15" x="31" y="69" w="709" h="422" z="30" display="frame" begin="0" type="002_textbox">
<data>
<![CDATA[<div style="width:709px;height:422px;"><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_15_tbl"  ><tr height="13"><td align="right" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tl.gif" width="13" height="13" /></td><td width="100%" background="images/002_textbox/violet/textbox_bg_t.gif" /><td align="left" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tr.gif" width="13" height="13" /></td></tr><tr><td background="images/002_textbox/violet/textbox_bg_l.gif" /><td bgcolor="#FFFFFF"><div id="OBJ_15_div" style="&#xA;					cursor:default;&#xA;					height: 100%;&#xA;					width: 100%;&#xA;					padding: 5px;&#xA;					overflow-x: hidden; overflow-y: auto;"><SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000"><FONT color=#ffffff size=7><FONT color=#ffffff size=7><SPAN style="COLOR: #000000"><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman>
<P align=left><B><SPAN style="FONT-SIZE: 24px">The immune system in a broad sense is a mechanism that allows a living organism to discriminate between</SPAN></B><B><SPAN style="FONT-SIZE: 24px">“self” and “non-self.”</SPAN></B></P>
<P align=left><B><SPAN style="FONT-SIZE: 24px"></SPAN></B>&nbsp;</P>
<P align=left><B><SPAN style="FONT-SIZE: 24px">&nbsp;Examples of immune systems occur in multicellular organisms as simple and ancient as sea sponges. </SPAN></B></P>
<P align=left><B><SPAN style="FONT-SIZE: 24px">&nbsp;</P>
<P align=left>In fact, complex multicellular life would be impossible without the ability to exclude external life from the internal environment.</SPAN></B></FONT></FONT></FONT></FONT></FONT></FONT><FONT color=#ffffff size=7><FONT color=#ffffff size=7></SPAN></P></FONT></FONT></SPAN></div></td><td background="images/002_textbox/violet/textbox_bg_r.gif" /></tr><tr height="13"><td align="right" valign="top"><img src="images/002_textbox/violet/textbox_bl.gif" width="13" height="13" /></td><td background="images/002_textbox/violet/textbox_bg_b.gif" /><td><img src="images/002_textbox/violet/textbox_br.gif" width="13" height="13" /></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_4" sid="j" masterid="SLIDE_12" name="Innate and adaptive immunity" indent="0">
<frames>
<frame id="FRAME_4" dur="0" infinite="0">
<object id="OBJ_16" x="31" y="120" w="382" h="143" z="30" display="frame" begin="0" type="002_textbox">
<data>
<![CDATA[<div style="width:382px;height:143px;"><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_16_tbl"  ><tr height="13"><td align="right" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tl.gif" width="13" height="13" /></td><td width="100%" background="images/002_textbox/violet/textbox_bg_t.gif" /><td align="left" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tr.gif" width="13" height="13" /></td></tr><tr><td background="images/002_textbox/violet/textbox_bg_l.gif" /><td bgcolor="#FFFFFF"><div id="OBJ_16_div" style="&#xA;					cursor:default;&#xA;					height: 100%;&#xA;					width: 100%;&#xA;					padding: 5px;&#xA;					overflow-x: hidden; overflow-y: auto;"><SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000">
<P align=left></P><B><I><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6>
<P><SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 20px">Innate immunity:</SPAN></FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">always present (ready to attack); many pathogenic microbes have evolved to resist innate immunity</SPAN></SPAN></P></B></I></FONT></FONT></SPAN></div></td><td background="images/002_textbox/violet/textbox_bg_r.gif" /></tr><tr height="13"><td align="right" valign="top"><img src="images/002_textbox/violet/textbox_bl.gif" width="13" height="13" /></td><td background="images/002_textbox/violet/textbox_bg_b.gif" /><td><img src="images/002_textbox/violet/textbox_br.gif" width="13" height="13" /></td></tr></table></div>]]>
</data>
</object>
<object id="OBJ_17" x="27" y="330" w="374" h="108" z="31" display="frame" begin="0" type="002_textbox">
<data>
<![CDATA[<div style="width:374px;height:108px;"><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_tbl"  ><tr height="13"><td align="right" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tl.gif" width="13" height="13" /></td><td width="100%" background="images/002_textbox/violet/textbox_bg_t.gif" /><td align="left" valign="bottom" width="13"><img src="images/002_textbox/violet/textbox_tr.gif" width="13" height="13" /></td></tr><tr><td background="images/002_textbox/violet/textbox_bg_l.gif" /><td bgcolor="#FFFFFF"><div id="OBJ_17_div" style="&#xA;					cursor:default;&#xA;					height: 100%;&#xA;					width: 100%;&#xA;					padding: 5px;&#xA;					overflow-x: hidden; overflow-y: auto;"><SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000">
<P align=left></P><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6><SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 24px">
<P align=left></P><B><I><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6>
<P><SPAN style="FONT-SIZE: 20px">Adaptive immunity:</FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">stimulated by exposure </FONT></FONT><FONT color=#2c2c89 size=6><FONT color=#2c2c89 size=6><SPAN style="FONT-SIZE: 20px">to </FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">microbe; more potent</SPAN></SPAN></SPAN></SPAN></P></B></I></FONT></FONT></SPAN></FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6></SPAN></FONT></FONT></SPAN></div></td><td background="images/002_textbox/violet/textbox_bg_r.gif" /></tr><tr height="13"><td align="right" valign="top"><img src="images/002_textbox/violet/textbox_bl.gif" width="13" height="13" /></td><td background="images/002_textbox/violet/textbox_bg_b.gif" /><td><img src="images/002_textbox/violet/textbox_br.gif" width="13" height="13" /></td></tr></table></div>]]>
</data>
</object>
<object id="IMG_4" x="465" y="77" w="256" h="218" z="32" display="frame" begin="0" preload="images/St.Petersburg-1.jpg">
<data>
<![CDATA[<img src="images/St.Petersburg-1.jpg" style="width:256px;height:218px;border-width:0;"/>]]>
</data>
</object>
<object id="IMG_5" x="425" y="307" w="322" h="181" z="33" display="frame" begin="0" preload="images/St.Petersburg-Adap.jpg">
<data>
<![CDATA[<img src="images/St.Petersburg-Adap.jpg" style="width:322px;height:181px;border-width:0;"/>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_6" sid="l" masterid="SLIDE_12" name="Classes of lymphocytes" indent="0">
<frames>
<frame id="FRAME_6" dur="0" infinite="0">
<object id="IMG_6" x="31" y="65" w="712" h="430" z="30" display="frame" begin="0" preload="images/clip20210614.bmp">
<data>
<![CDATA[<img src="images/clip20210614.bmp" style="width:712px;height:430px;border-width:0;"/>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_7" sid="m" masterid="SLIDE_12" name="Clonal Selection Antibody-Producing Cells" indent="0">
<frames>
<frame id="FRAME_7" dur="0" infinite="0">
<object id="OBJ_18" x="32" y="68" w="716" h="430" z="30" display="frame" begin="0" type="media_003_video">
<data>
<![CDATA[<div style="width:716px;height:430px;"><div id="OBJ_18_activex" style="display: none;"  ><object id="OBJ_18_wmpie" name="OBJ_18_wmpie" classid="clsid:6BF52A52-394A-11D3-B153-00C04F79FAA6" codebase="http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701" type="application/x-oleobject" standby="Loading... Please wait..." width="100%" height="100%"><param name="AllowChangeDisplaySize" value="false" /><param name="AutoSize" value="true" /><param name="DisplaySize" value="false" /><param name="ShowStatusBar" value="false" /><param name="AutoRewind" value="false" /><param name="SendPlayStateChangeEvents" value="true" /><param name="URL" value="images/Clonal Selection Antibody-Producing Cells.mp4" /><param name="ShowControls" value="true" /><param name="uiMode" value="mini" /><param name="AutoStart" value="true" /><param name="windowlessVideo" value="false" /><embed id="OBJ_18_wmpembed" name="OBJ_18_wmpembed" SendPlayStateChangeEvents="1" pluginspage="http://www.microsoft.com/Windows/Downloads/Contents/Products/MediaPlayer/" type="application/x-mplayer2" standby="Loading... Please wait..." width="100%" height="100%" ShowControls="1" ShowStatusBar="0" AutoSize="0" EnableControls="0" DisplaySize="0" Loop="0" AutoStart="1" src="images/Clonal Selection Antibody-Producing Cells.mp4" /></object></div><div id="OBJ_18_ffactivex" style="display: none;"  ><object id="OBJ_18_wmpff" name="OBJ_18_wmpff" type="application/x-ms-wmp" standby="Loading... Please wait..." width="100%" height="100%" data="images/Clonal Selection Antibody-Producing Cells.mp4"><param name="AllowChangeDisplaySize" value="true" /><param name="AutoSize" value="true" /><param name="DisplaySize" value="false" /><param name="showstatusbar" value="false" /><param name="AutoRewind" value="true" /><param name="SendPlayStateChangeEvents" value="true" /><param name="URL" value="images/Clonal Selection Antibody-Producing Cells.mp4" /><param name="ShowControls" value="true" /><param name="uiMode" value="mini" /><param name="AutoStart" value="true" /><param name="windowlessVideo" value="false" /></object></div></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_5" sid="k" masterid="SLIDE_12" name="Quiz" indent="0">
<frames>
<frame id="FRAME_5" dur="0" infinite="0">
<object id="OBJ_19" x="38" y="101" w="400" h="400" z="30" display="frame" begin="0" type="q_001_choice">
<data>
<![CDATA[<div style="width:400px;height:400px;"><div style="display:none"  ><img border="0" id="OBJ_19_q_choicespot_0" src="images/q_001_choice/curve/violet/choice_spot_1_0.gif" /><img border="0" id="OBJ_19_q_choicespot_2" src="images/q_001_choice/curve/violet/choice_spot_1_2.gif" /><img width="150" height="25" border="0" id="OBJ_19_q_b_check_0" src="images/q_001_choice/curve/violet/button_check_0.gif" /><img width="150" height="25" border="0" id="OBJ_19_q_b_check_1" src="images/q_001_choice/curve/violet/button_check_1.gif" /><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_19_q_choiceitem" style="margin-top: 2px; border: #DFBEF7 solid 2px; background-color: #FFFFFF;"><tr><td valign="top" style="padding: 6px"><img border="0" src="images/q_001_choice/curve/violet/choice_spot_1_0.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_19'; oArgs.oid = this.getAttribute('id'); CallMethod('q_001_choice','HandleClick',oArgs); return false;" /><img border="0" style="display: none" src="images/q_001_choice/curve/violet/choice_spot_1_2.gif" /></td><td width="100%" style="padding: 6px">%%var%%</td></tr></table></div><table border="0" cellpadding="0" cellspacing="0"  ><tr><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_001_choice/curve/violet/top_left_corner.gif" /></td><td style="height: 10px; background-image:url(images/q_001_choice/curve/violet/top_line.gif); background-repeat: repeat-x; background-position: top;" /><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_001_choice/curve/violet/top_right_corner.gif" /></td></tr><tr><td style="width: 10px; background-image:url(images/q_001_choice/curve/violet/left_line.gif); background-repeat: repeat-y;  background-position: left;" /><td width="100%"><div style="background-color: #FFFFFF;" id="OBJ_19_q_container"><table width="100%" border="0" cellpadding="4" cellspacing="0" style="background-color: #FFFFFF;"><tr><td width="100%" style="width:100%; padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#8C46C2;" id="OBJ_19_q_creditcontainer">Credited question</td></tr><tr><td width="100%" style="padding:4px; border: #DFBEF7 solid 2px; background-color: #EDDCFA" id="OBJ_19_q_text"><SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 20px">Innate immunity is</SPAN></SPAN></td></tr><tr><td width="100%" style="padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#8C46C2;" id="OBJ_19_q_objective">Select correct variant</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" style="background-color: #FFFFFF;"><tr><td id="OBJ_19_q_workarea" /></tr></table><table width="100%" cellpadding="0" cellspacing="0" border="0" id="OBJ_19_q_button_area" style="margin-top: 2px; border: #DFBEF7 solid 2px; background-color: #EDDCFA"><tr><td style="width:50%; text-align:left; padding: 4px; height: 33px;"><span style="display:none;" id="OBJ_19_q_b_check_container"><img style="cursor:hand; cursor:pointer;" border="0" alt="Submit answer" id="OBJ_19_q_b_check_button" src="images/q_001_choice/curve/violet/button_check_0.gif" onmouseover="this.src = document.getElementById('OBJ_19_q_b_check_1').src; return false;" onmouseout="this.src = document.getElementById('OBJ_19_q_b_check_0').src; return false;" onclick="var oArgs=new Object; oArgs.pid='OBJ_19'; CallMethod('q_001_choice','EvalAnswer',oArgs);return false;" /></span></td><td align="center" style="text-align:center; height: 33px;"><div style="display:inline;" id="OBJ_19_q_attempts_container"><table cellspacing="0" cellpadding="2" border="0"><tr><td align="right" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; ">Attempts:</td><td align="left" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; " id="OBJ_19_q_attempts_count">1</td></tr></table></div></td><td align="right" width="50%" style="width:50%; text-align:right; padding: 4px; height: 33px;" /></tr></table></div></td><td style="width:10px; background-image:url(images/q_001_choice/curve/violet/right_line.gif); background-repeat: repeat-y;  background-position: right;" /></tr><tr><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_001_choice/curve/violet/bottom_left_corner.gif" /></td><td style="background-image:url(images/q_001_choice/curve/violet/bottom_line.gif); background-repeat: repeat-x; background-position: bottom;" /><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_001_choice/curve/violet/bottom_right_corner.gif" /></td></tr></table></div>]]>
</data>
</object>
<object id="OBJ_20" x="438" y="104" w="306" h="261" z="31" display="frame" begin="0" type="q_005_text">
<data>
<![CDATA[<div style="width:306px;height:261px;"><div style="display:none"  ><img width="150" height="25" border="0" id="OBJ_20_q_b_check_0" src="images/q_005_text/curve/violet/button_check_0.gif" /><img width="150" height="25" border="0" id="OBJ_20_q_b_check_1" src="images/q_005_text/curve/violet/button_check_1.gif" /><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_20_q_textitem" style="margin-top: 2px; border: #DFBEF7 solid 2px; background-color: #FFFFFF;"><tr><td width="50%" valign="middle" align="right" style="padding: 6px">%%exp%%</td><td width="50%" valign="middle" align="left" style="padding: 6px"><input type="text" style="width: NaNpx; height: 22px; font-family: Arial; color: #000000; background-color: #FFFFFF; font-size:12px; border-width: 2px; border-color: #DFBEF7; border-style: solid;" onkeyup="var oArgs=new Object; oArgs.pid='OBJ_20'; oArgs.iid=this.getAttribute('id'); oArgs.returnvalue = true; CallMethod('q_005_text','IfValue',oArgs);" /></td></tr></table></div><table border="0" cellpadding="0" cellspacing="0"  ><tr><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_005_text/curve/violet/top_left_corner.gif" /></td><td style="height: 10px; background-image:url(images/q_005_text/curve/violet/top_line.gif); background-repeat: repeat-x; background-position: top;" /><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_005_text/curve/violet/top_right_corner.gif" /></td></tr><tr><td style="width: 10px; background-image:url(images/q_005_text/curve/violet/left_line.gif); background-repeat: repeat-y;  background-position: left;" /><td width="100%"><div style="background-color: #FFFFFF;" id="OBJ_20_q_container"><table width="100%" border="0" cellpadding="4" cellspacing="0" style="background-color: #FFFFFF;"><tr><td width="100%" style="width:100%; padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#8C46C2;" id="OBJ_20_q_creditcontainer">Credited question</td></tr><tr><td width="100%" style="padding:4px; border: #DFBEF7 solid 2px; background-color: #EDDCFA" id="OBJ_20_q_text"><SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000"><SPAN style="FONT-SIZE: 16px; FONT-FAMILY: hurme_no2-webfont, -apple-system, BlinkMacSystemFont, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: 400; COLOR: rgb(48,53,69); FONT-STYLE: normal; TEXT-ALIGN: center; ORPHANS: 2; WIDOWS: 2; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">A macromolecule that elicits an immune response by lymphocytes.</SPAN></SPAN></td></tr><tr><td width="100%" style="padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#8C46C2;" id="OBJ_20_q_objective">Enter text string</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" style="background-color: #FFFFFF;"><tr><td id="OBJ_20_q_workarea" /></tr></table><table width="100%" cellpadding="0" cellspacing="0" border="0" id="OBJ_20_q_button_area" style="margin-top: 2px; border: #DFBEF7 solid 2px; background-color: #EDDCFA"><tr><td style="width:50%; text-align:left; padding: 4px; height: 33px;"><span style="display:none;" id="OBJ_20_q_b_check_container"><img style="cursor:hand; cursor:pointer;" border="0" alt="Submit answer" id="OBJ_20_q_b_check_button" src="images/q_005_text/curve/violet/button_check_0.gif" onmouseover="this.src = document.getElementById('OBJ_20_q_b_check_1').src; return false;" onmouseout="this.src = document.getElementById('OBJ_20_q_b_check_0').src; return false;" onclick="var oArgs=new Object; oArgs.pid='OBJ_20'; CallMethod('q_005_text','EvalAnswer',oArgs);return false;" /></span></td><td align="center" style="text-align:center; height: 33px;"><div style="display:inline;" id="OBJ_20_q_attempts_container"><table cellspacing="0" cellpadding="2" border="0"><tr><td align="right" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; ">Attempts:</td><td align="left" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; " id="OBJ_20_q_attempts_count">1</td></tr></table></div></td><td align="right" width="50%" style="width:50%; text-align:right; padding: 4px; height: 33px;" /></tr></table></div></td><td style="width:10px; background-image:url(images/q_005_text/curve/violet/right_line.gif); background-repeat: repeat-y;  background-position: right;" /></tr><tr><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_005_text/curve/violet/bottom_left_corner.gif" /></td><td style="background-image:url(images/q_005_text/curve/violet/bottom_line.gif); background-repeat: repeat-x; background-position: bottom;" /><td style="width: 10px; height:10px"><img width="10" height="10" border="0" src="images/q_005_text/curve/violet/bottom_right_corner.gif" /></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
</slides>
<masters>
<slide id="SLIDE_12" sid="f">
<frames>
<frame id="FRAME_13" dur="0" infinite="0">
<object id="IMG_11" x="0" y="497" w="750" h="33" z="0" display="slide" begin="0" preload="images/clip20210614_4.gif">
<data>
<![CDATA[<img src="images/clip20210614_4.gif" style="width:750px;height:33px;border-width:0;"/>]]>
</data>
</object>
<object id="IMG_12" x="0" y="0" w="750" h="35" z="1" display="slide" begin="0" preload="images/clip20210614_5.gif">
<data>
<![CDATA[<img src="images/clip20210614_5.gif" style="width:750px;height:35px;border-width:0;"/>]]>
</data>
</object>
<object id="TXT_11" x="68" y="3" w="628" h="25" z="2" display="slide" begin="0">
<data>
<![CDATA[<div style="width:628px;height:25px;"><TABLE height="100%" cellSpacing=0 cellPadding=0 width="100%" border=0>
<TBODY>
<TR>
<TD style="VERTICAL-ALIGN: middle; TEXT-ALIGN: center"><SPAN style="FONT-SIZE: 18px; FONT-FAMILY: 'Tahoma'; FONT-WEIGHT: bold; COLOR: #89defa"><SPAN style="COLOR: #c4dafb"><SPAN style="COLOR: #c7e9ef">Biology-Immune System</SPAN></SPAN></SPAN></TD></TR></TBODY></TABLE></div>]]>
</data>
</object>
<object id="TXT_12" x="1" y="2" w="85" h="27" z="3" display="slide" begin="0">
<data>
<![CDATA[<div style="width:85px;height:27px;"><P align=center><SPAN style="FONT-FAMILY: Arial"><SPAN style="FONT-SIZE: 10px"><SPAN style="COLOR: #ffffff"><SPAN style="COLOR: #fffffe">I<SPAN style="FONT-FAMILY: Arial"><SPAN style="FONT-SIZE: 10px"><SPAN style="COLOR: #ffffff"><SPAN style="COLOR: #fffffe"><IMG style="HEIGHT: 38px; WIDTH: 37px" border=0 src="images/asunews_103_img.png" width=263 height=259></SPAN></SPAN></SPAN></SPAN></SPAN></SPAN></SPAN></SPAN></P></div>]]>
</data>
</object>
<object id="OBJ_66" x="218" y="508" w="270" h="20" z="4" display="slide" begin="0" type="nav_001_selector">
<data>
<![CDATA[<div style="width:270px;height:20px;"><select onchange="var oArgs = new Object; oArgs.pid = 'OBJ_66'; CallMethod('nav_001_selector','JumpToSlide',oArgs); return false;" id="OBJ_66_selector" name="OBJ_66_selector" style="width:100%; text-align:; font-style:normal;font-weight:normal;font-family:Arial; font-size:11px; color:#000000; background-color: #FFFFFF;"  ><option>Slides list</option></select></div>]]>
</data>
</object>
<object id="OBJ_67" x="93" y="508" w="118" h="20" z="5" display="slide" begin="0" type="nav_002_position">
<data>
<![CDATA[<div style="width:118px;height:20px;"><table width="100%" height="100%" cellpadding="2" cellspacing="0" border="0"  ><tr><td align="right" valign="middle" width="50%" nowrap="nowrap"><span style="font-family: Tahoma; color: #2e95a7; font-weight: bold; font-style: normal; font-size: 11px;">POSITION:</span></td><td align="left" valign="middle" width="50%" nowrap="nowrap"><span id="OBJ_67_position_current" style="font-family: Tahoma; color: #2e95a7; font-weight: bold; font-style: normal; font-size: 11px;">
					1
				</span><span style="font-family: Tahoma; color: #2e95a7; font-weight: bold; font-style: normal; font-size: 11px;">/</span><span id="OBJ_67_position_total" style="font-family: Tahoma; color: #2e95a7; font-weight: bold; font-style: normal; font-size: 11px;">
					1
				</span></td></tr></table></div>]]>
</data>
</object>
<object id="OBJ_68" x="0" y="37" w="25" h="460" z="6" display="frame" begin="0" type="nav_003_contents">
<data>
<![CDATA[<div style="width:25px;height:460px;"><div style="display:none;"  ><img border="0" id="OBJ_68_icon_open" src="images/nav_003_contents/turquoise/f_open.gif" /><img border="0" id="OBJ_68_icon_closed" src="images/nav_003_contents/turquoise/f_closed.gif" /><img border="0" id="OBJ_68_icon_unvisited" src="images/nav_003_contents/turquoise/icon_unvisited.gif" /><img border="0" id="OBJ_68_icon_current" src="images/nav_003_contents/turquoise/icon_current.gif" /><img border="0" id="OBJ_68_icon_visited" src="images/nav_003_contents/turquoise/icon_visited.gif" /><img border="0" id="OBJ_68_tab_0" src="images/nav_003_contents/turquoise/tab_contents_0.gif" /><img border="0" id="OBJ_68_tab_1" src="images/nav_003_contents/turquoise/tab_contents_1.gif" /><img border="0" id="OBJ_68_tab_2" src="images/nav_003_contents/turquoise/tab_contents_2.gif" /></div><div id="OBJ_68_template_simple" style="display:none; margin: 1px; width:100%; border-top: #CCCCCC dotted 1px;"  ><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td valign="top" style="background-color: #FFFFFF; padding-top:2px; padding-bottom:2px; padding-left:2px; padding-right:2px"><img border="0" src="images/nav_003_contents/turquoise/icon_unvisited.gif" /></td><td valign="top" width="100%" style="font-family: Tahoma; font-size: 11px; background-color: #FFFFFF; padding-top:2px; padding-bottom: 2px; padding-left:0px; padding-right:4px">%%var%%</td></tr></table></div><div id="OBJ_68_template_hier" style="display:none; margin: 1px; width:100%; border-top: #CCCCCC dotted 1px;"  ><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td valign="top" style="padding-top:3px; padding-bottom: 2px; padding-left:2px; padding-right:2px"><img border="0" src="images/nav_003_contents/turquoise/f_open.gif" onclick="if(document.getElementById(this.getAttribute('childdiv')).style.display=='none') { document.getElementById(this.getAttribute('childdiv')).style.display = g_isMSIE ? 'inline' : 'block'; this.src = this.getAttribute('iconopen'); } else { document.getElementById(this.getAttribute('childdiv')).style.display = 'none'; this.src = this.getAttribute('iconclosed');} return false;" /></td><td valign="top" style="background-color: #FFFFFF; padding-top:3px; padding-bottom: 2px; padding-left:2px; padding-right:2px"><img border="0" src="images/nav_003_contents/turquoise/icon_unvisited.gif" /></td><td valign="top" width="100%" style="font-family: Tahoma; font-size: 11px; background-color: #FFFFFF; padding-top:3px; padding-bottom: 2px; padding-left:0px; padding-right:4px">%%var%%</td></tr></table></div><div id="OBJ_68_maincontainer" style="position:absolute; height: 460px; overflow: visible;"  ><div style="position: absolute; top: 0px; left: 0px; width: 475px; height: 460px;background-color:#95C8DB; "><div style="position: absolute; top: 2px; left: 2px; width: 471px; height: 456px;background-color: #FFFFFF;"><div id="OBJ_68_header" style="margin-left: 10px; margin-right:10px; margin-top:10px; width: 451px; height: 30px; overflow: hidden; font-weight:bold; text-align:center;"><P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Contents</B></SPAN></P></div><div style="&#xA;					margin-left: 10px;&#xA;					margin-right:10px;&#xA;					width: 451px;&#xA;					height: 406px;&#xA;					padding: 0px;&#xA;					overflow: auto;&#xA;					" id="OBJ_68_contents">
				...
			</div></div></div><img border="0" id="OBJ_68_tabimg" src="images/nav_003_contents/turquoise/tab_contents_0.gif" style="cursor:hand; cursor:pointer; position: absolute; top: 0px; left:475px;" onMouseOver="MM_swapImage('OBJ_68_tabimg','',document.getElementById('OBJ_68_tab_1').src,1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onMouseDown="MM_swapImage('OBJ_68_tabimg','',document.getElementById('OBJ_68_tab_2').src,1);return false;" onMouseUp="var oArgs=new Object; oArgs.pid='OBJ_68'; CallMethod('nav_003_contents','MoveTab',oArgs);return false;" alt="Contents" /><img border="0" id="OBJ_68_tabimg_disabled" src="images/nav_003_contents/turquoise/tab_contents_3.gif" style="display: none; position: absolute; top: 0px; left:475px;" alt="Access is not allowed" /></div></div>]]>
</data>
</object>
<object id="OBJ_69" x="0" y="37" w="25" h="460" z="7" display="frame" begin="0" type="nav_004_help">
<data>
<![CDATA[<div style="width:25px;height:460px;"><div style="display:none;"  ><img border="0" id="OBJ_69_tab_0" src="images/nav_004_help/turquoise/tab_help_0.gif" /><img border="0" id="OBJ_69_tab_1" src="images/nav_004_help/turquoise/tab_help_1.gif" /><img border="0" id="OBJ_69_tab_2" src="images/nav_004_help/turquoise/tab_help_2.gif" /></div><div id="OBJ_69_maincontainer" style="position:absolute; height: 460px; overflow: visible;"  ><div style="position: absolute; top: 0px; left: 0px; width: 475px; height: 460px;background-color:#95C8DB; "><div style="position: absolute; top: 2px; left: 2px; width: 471px; height: 456px;background-color: #FFFFFF;"><div id="OBJ_69_header" style="position: absolute; top: 0px; left: 0px; margin-left: 10px; margin-right:10px; margin-top:10px; width: 451px; height: 30px; overflow: hidden; font-weight: bold; text-align: center;"><P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Help</B></SPAN></P></div><div style="&#xA;					position: absolute;&#xA;					top: 30px;&#xA;					left: 0px;&#xA;					margin-left: 10px;&#xA;					margin-right:10px;&#xA;					width: 451px;&#xA;					height: 406px;&#xA;					padding: 0px;&#xA;					overflow: auto;&#xA;				" id="OBJ_69_contents"><TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=0 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD vAlign=top align=middle width=15 bgColor=#f0f0f0><IMG height=7 src="images/contents_bullet_1.gif" width=7 vspace=4 border=0> </TD>
<TD bgColor=#f0f0f0><B>eLearning Module Structure</B></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=2 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD>
<P>Learning Module is a fundamental building block of the Course hierarchy representing the set of author-structured Slides. During the learning process the learner is led from one Slide to another sequentially, which is default behavior. <BR>Slide (Interactive page) is the main building block of Learning Module. Slides are used by the author to place learning material, tests, and exercises. The order of Slide correlation is predefined by the author. </P></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=0 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD vAlign=top align=middle width=15 bgColor=#f0f0f0><IMG height=7 src="images/contents_bullet_1.gif" width=7 vspace=4 border=0> </TD>
<TD bgColor=#f0f0f0><B>Navigation</B></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=2 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD>
<P>eLearning Module navigation controls (the list may vary depending on author's design):</P>
<UL>
<LI>"Prev" and "Next" buttons enable to jump on previous and next slide correspondingly;&nbsp; 
<LI>"Replay" button enable to start current slide&nbsp;once again from the beginning (it may be useful, for example, to repeat animation on slide etc.); 
<LI>"Contents" tab or button with popup window displays the list of all slides and enables transition to any slide in the Module&nbsp;(if no&nbsp;restrictions were applied by author); 
<LI>Navigation drop-down menu displays the list of all slides and enables transition to any slide in the Module&nbsp;(if no&nbsp;restrictions were applied by author); 
<LI>"Sound On/Off" button&nbsp;toggles narration (if narration exists in the Module); 
<LI>"Close Module" button closes Module window.</LI></UL>
<P>Please note that some controls may become disabled while navigating. Usually it means that:</P>
<UL>
<LI>not all objects of&nbsp;current slide are displayed yet (depending on rules defined by author); 
<LI>not all activities required from learner on current slide&nbsp;are finished (for example, navigation controls may be disabled until question is answered etc.); 
<LI>navigation action is just impossible (for example, there's no slides previous to first one).</LI></UL>
<P>&nbsp;</P></TD></TR></TBODY></TABLE></div></div></div><img border="0" id="OBJ_69_tabimg" src="images/nav_004_help/turquoise/tab_help_0.gif" style="cursor:hand; cursor:pointer; position: absolute; top: 92px; left:475px;" onMouseOver="MM_swapImage('OBJ_69_tabimg','',document.getElementById('OBJ_69_tab_1').src,1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onMouseDown="MM_swapImage('OBJ_69_tabimg','',document.getElementById('OBJ_69_tab_2').src,1);return false;" onMouseUp="var oArgs=new Object; oArgs.pid='OBJ_69'; CallMethod('nav_004_help','MoveTab',oArgs);return false;" alt="Help" /><img border="0" id="OBJ_69_tabimg_disabled" src="images/nav_004_help/turquoise/tab_help_3.gif" style="display: none; position: absolute; top: 92px; left:475px;" alt="Access is not allowed" /></div></div>]]>
</data>
</object>
<object id="OBJ_70" x="0" y="37" w="25" h="460" z="8" display="frame" begin="0" type="nav_005_calc">
<data>
<![CDATA[<div style="width:25px;height:460px;"><div style="display:none;"  ><img border="0" id="OBJ_70_tab_0" src="images/nav_005_calc/turquoise/tab_calc_0.gif" /><img border="0" id="OBJ_70_tab_1" src="images/nav_005_calc/turquoise/tab_calc_1.gif" /><img border="0" id="OBJ_70_tab_2" src="images/nav_005_calc/turquoise/tab_calc_2.gif" /></div><div id="OBJ_70_maincontainer" style="position:absolute; height: 460px; overflow: visible;"  ><div style="position: absolute; top: 0px; left: 0px; width: 475px; height: 460px;background-color:#95C8DB; "><div style="position: absolute; top: 2px; left: 2px; width: 471px; height: 456px;background-color: #FFFFFF;"><div id="OBJ_70_header" style="position: absolute; top: 0px; left: 0px; margin-left: 10px; margin-right:10px; margin-top:10px; width: 451px; height: 30px; overflow: hidden; font-weight: bold; text-align: center;"><P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Calculator</B></SPAN></P></div><div style="&#xA;					position: absolute;&#xA;					top: 30px;&#xA;					left: 0px;&#xA;					margin-top:20px;&#xA;					margin-left: 10px;&#xA;					margin-right:10px;&#xA;					width: 451px;&#xA;					height: 406px;&#xA;					padding: 0px;&#xA;					text-align: center;&#xA;				" id="OBJ_70_CalcDiv"><table border="0" cellpadding="2" cellspacing="0" style="background-color: #AAAAAA; border:#999999 groove 8px;" align="center"><tr><td colspan="6" style="padding: 5px; border-bottom: #999999 double 3px; background-color: #CCCCCC;"><div style="width: 270px; padding-right:4px; text-align:right; font-family: arial,helvetica,geneve,sans-serif; font-size:24px; font-weight: bold; color: #FF0000; background: #000000; border-color: #999999; border: solid 2 px;" id="OBJ_70_display">
								0
							</div></td></tr><tr><td style="padding-left: 5px; padding-top: 5px;"><div style="width:50px; height:32px; font-family:verdana,tahoma,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #00CC33; background-color: #666666; border-color: #999999; border: solid 2 px; text-align:center;" id="OBJ_70_mem_ind" /></td><td colspan="3" align="right" style="padding-top: 5px;"><input value="Backspace" type="button" style="width:100px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:12px; font-weight: bold; color: #FFFFFF; background: #CC3333; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='Backspace'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-top: 5px;"><input value=" CE " type="button" style="width:40px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #CC3333; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='CE'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-right: 5px; padding-top: 5px;"><input value="  C  " type="button" style="width:40px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #CC3333; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='C'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td></tr><tr><td style="padding-left: 5px;"><input value=" MC " type="button" name="MC" style="width:50px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #009933; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='MC'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td><input value="  7  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='7'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  8  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='8'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  9  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='9'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  /  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='divide'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-right: 5px;"><input value=" ^ " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='power'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td></tr><tr><td style="padding-left: 5px;"><input value=" MR " type="button" style="width:50px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #009933; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='MR'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td><input value="  4  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='4'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  5  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='5'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  6  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='6'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  x " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='mult'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-right: 5px;"><input value=" % " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='percent'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td></tr><tr><td style="padding-left: 5px;"><input value=" M- " type="button" style="width:50px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #009933; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='MS'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td><input value="  1  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='1'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  2  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='2'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  3  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='3'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td><input value="  -  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='minus'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-right: 5px;"><input value="1/x" type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='recip'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td></tr><tr><td style="padding-left: 5px;"><input value=" M+ " type="button" style="width:50px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #009933; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='M+'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-bottom: 5px;"><input value="  0  " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='0'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td style="padding-bottom: 5px;"><input value="  .   " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:18px; font-weight: bold; color: #000000; background: #EEEEEE; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='.'; CallMethod('nav_005_calc','calcInput',oArgs);return false;" /></td><td style="padding-bottom: 5px;"><input value="+/-" type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='negate'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-bottom: 5px;"><input value=" + " type="button" style="width:40px; height:32px; font-family:verdana,arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #666666; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='plus'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td><td style="padding-right: 5px; padding-bottom: 5px;"><input value="  =  " type="button" style="width:40px; height:32px; font-family:arial,helvetica,geneve,sans-serif; font-size:14px; font-weight: bold; color: #FFFFFF; background: #0033CC; border-color: #999999; border: solid 2 px;" onclick="var oArgs=new Object; oArgs.pid='OBJ_70'; oArgs.btn='equal'; CallMethod('nav_005_calc','actionKey',oArgs);return false;" /></td></tr></table></div><div id="OBJ_70_exp" style="position: absolute; top: 315px; left: 0px; margin-left: 10px; margin-right:10px; margin-top:10px; width: 451px; height: 130px; overflow: hidden;"><SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000"></SPAN></div></div></div><img border="0" id="OBJ_70_tabimg" src="images/nav_005_calc/turquoise/tab_calc_0.gif" style="cursor:hand; cursor:pointer; position: absolute; top: 184px; left:475px;" onMouseOver="MM_swapImage('OBJ_70_tabimg','',document.getElementById('OBJ_70_tab_1').src,1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onMouseDown="MM_swapImage('OBJ_70_tabimg','',document.getElementById('OBJ_70_tab_2').src,1);return false;" onMouseUp="var oArgs=new Object; oArgs.pid='OBJ_70'; CallMethod('nav_005_calc','MoveTab',oArgs);return false;" alt="Calculator" /><img border="0" id="OBJ_70_tabimg_disabled" src="images/nav_005_calc/turquoise/tab_calc_3.gif" style="display: none; position: absolute; top: 184px; left:475px;" alt="Access is not allowed" /></div></div>]]>
</data>
</object>
<object id="OBJ_72" x="0" y="-55" w="25" h="460" z="9" display="frame" begin="0" type="nav_007_about">
<data>
<![CDATA[<div style="width:25px;height:460px;"><div style="display:none;"  ><img border="0" id="OBJ_72_tab_0" src="images/nav_007_about/turquoise/tab_about_0.gif" /><img border="0" id="OBJ_72_tab_1" src="images/nav_007_about/turquoise/tab_about_1.gif" /><img border="0" id="OBJ_72_tab_2" src="images/nav_007_about/turquoise/tab_about_2.gif" /></div><div id="OBJ_72_maincontainer" style="position:absolute; height: 460px; overflow: visible;"  ><div style="position: absolute; top: 0px; left: 0px; width: 475px; height: 460px;background-color:#95C8DB; "><div style="position: absolute; top: 2px; left: 2px; width: 471px; height: 456px;background-color: #FFFFFF;"><div id="OBJ_72_header" style="position: absolute; top: 0px; left: 0px; margin-left: 10px; margin-right:10px; margin-top:10px; width: 451px; height: 30px; overflow: hidden; font-weight: bold; text-align: center;"><P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>About</B></SPAN></P></div><div style="&#xA;					position: absolute;&#xA;					top: 30px;&#xA;					left: 0px;&#xA;					margin-left: 10px;&#xA;					margin-right:10px;&#xA;					width: 451px;&#xA;					height: 406px;&#xA;					padding: 0px;&#xA;					overflow: auto;&#xA;				" id="OBJ_72_contents"><TABLE cellSpacing=0 cellPadding=5 width=435 border=0>
<TBODY>
<TR>
<TD style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif">
<P>This eLearning Module was developed using <A href="http://www.courselab.com/" target=_blank>CourseLab® eLearning Content Editor</A>. Depending on purpose this Module can be used in any AICC- or SCORM-compatible Learning Management System, on CD etc.</P>
<P align=center><B>Hardware/Software requirements</B></P>
<P>This eLearning Module can be played on any PC that meets requirements below:</P>
<UL>
<LI>Operating System - Microsoft® Windows 98, Me, NT, 2000, XP (limited support of Windows 95)&nbsp;or Linux; 
<LI>Internet Browser - Microsoft® Internet Explorer 5.0 (Internet Explorer 5.5 or higher recommended), Mozilla FireFox 1.0 or higher, Netscape® 7.2 or higher; 
<LI>JavaScript enabled; 
<LI>XML support enabled (Microsoft® XML Parser 3.0 or higher recommended for Internet Explorer).</LI></UL>
<P>Additional requirements may be applied depending on media types used by Module author. </P></TD></TR></TBODY></TABLE></div></div></div><img border="0" id="OBJ_72_tabimg" src="images/nav_007_about/turquoise/tab_about_0.gif" style="cursor:hand; cursor:pointer; position: absolute; top: 368px; left:475px;" onMouseOver="MM_swapImage('OBJ_72_tabimg','', document.getElementById('OBJ_72_tab_1').src,1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onMouseDown="MM_swapImage('OBJ_72_tabimg','',document.getElementById('OBJ_72_tab_2').src,1);return false;" onMouseUp="var oArgs=new Object; oArgs.pid='OBJ_72'; CallMethod('nav_007_about','MoveTab',oArgs);return false;" alt="About" /><img border="0" id="OBJ_72_tabimg_disabled" src="images/nav_007_about/turquoise/tab_about_3.gif" style="display: none; position: absolute; top: 368px; left:475px;" alt="Access is not allowed" /></div></div>]]>
</data>
</object>
<object id="OBJ_73" x="672" y="504" w="75" h="25" z="10" display="frame" begin="0" type="nav_008_next">
<data>
<![CDATA[<div style="width:75px;height:25px;"><div style="display:inline; z-index:10; cursor: hand; cursor: pointer;" id="OBJ_73_NextEnabled"  ><img width="75" height="25" border="0" id="OBJ_73_NextImg" alt="Next Slide" src="images/nav_008_next/ws_next_0.gif" onMouseOver="MM_swapImage('OBJ_73_NextImg','','images/nav_008_next//ws_next_1.gif',1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onMouseDown="MM_swapImage('OBJ_73_NextImg','','images/nav_008_next//ws_next_3.gif',1);return false;" onClick="var oArgs = new Object; oArgs.pid ='OBJ_73'; CallMethod('nav_008_next', 'JumpNext', oArgs); return false;" onMouseUp="MM_swapImgRestore(); return false;" /></div><div style="display:none; z-index:11;" id="OBJ_73_NextPushed"  ><img width="75" height="25" border="0" id="OBJ_73_Next_3" src="images/nav_008_next/ws_next_3.gif" /></div><div style="display:none; z-index:11;" id="OBJ_73_NextDisabled"  ><img width="75" height="25" border="0" id="OBJ_73_Next_2" src="images/nav_008_next/ws_next_2.gif" alt="Access is not allowed" /></div><div style="display:none;" id="OBJ_73_NextHighlighted"  ><img width="75" height="25" border="0" id="OBJ_73_Next_1" src="images/nav_008_next/ws_next_1.gif" /></div><div style="display:none;" id="OBJ_73_NextNormal"  ><img width="74" height="25" border="0" id="OBJ_73_Next_0" src="images/nav_008_next/ws_next_0.gif" /></div></div>]]>
</data>
</object>
<object id="OBJ_74" x="591" y="504" w="75" h="25" z="11" display="frame" begin="0" type="nav_009_prev">
<data>
<![CDATA[<div style="width:75px;height:25px;"><div style="display:inline; z-index:10; cursor: hand; cursor: pointer;" id="OBJ_74_PrevEnabled"  ><img width="75" height="25" border="0" id="OBJ_74_PrevImg" alt="Next Slide" src="images/nav_009_prev/ws_prev_0.gif" onMouseOver="MM_swapImage('OBJ_74_PrevImg','','images/nav_009_prev/ws_prev_1.gif',1);return false;" onMouseOut="MM_swapImgRestore(); return false;" onClick="var oArgs = new Object; oArgs.pid ='OBJ_74'; CallMethod('nav_009_prev', 'JumpPrev', oArgs); return false;" onMouseDown="MM_swapImage('OBJ_74_PrevImg','','images/nav_009_prev/ws_prev_3.gif',1);return false;" onMouseUp="MM_swapImgRestore(); return false;" /></div><div id="OBJ_74_PrevPushed" style="display:none; z-index:11;"  ><img width="75" height="25" border="0" id="OBJ_74_Prev_3" src="images/nav_009_prev/ws_prev_3.gif" /></div><div id="OBJ_74_PrevDisabled" style="display:none; z-index:11;"  ><img width="75" height="25" border="0" id="OBJ_74_Prev_2" src="images/nav_009_prev/ws_prev_2.gif" alt="Access is not allowed" /></div><div style="display:none;" id="OBJ_74_PrevHighlighted"  ><img width="75" height="25" border="0" id="OBJ_74_Prev_1" src="images/nav_009_prev/ws_prev_1.gif" /></div><div style="display:none;" id="OBJ_74_PrevNormal"  ><img width="75" height="25" border="0" id="OBJ_74_Prev_0" src="images/nav_009_prev/ws_prev_0.gif" /></div></div>]]>
</data>
</object>
<object id="OBJ_75" x="722" y="7" w="20" h="20" z="12" display="frame" begin="0" type="nav_012_close">
<data>
<![CDATA[<div style="width:20px;height:20px;"><div style="display:none;" id="OBJ_75_storage"  ><img border="0" id="OBJ_75_img_0" src="images/nav_012_close/ws_close_0.gif" /><img border="0" id="OBJ_75_img_1" src="images/nav_012_close/ws_close_1.gif" /><img border="0" id="OBJ_75_img_2" src="images/nav_012_close/ws_close_2.gif" /></div><img border="0" style="display:inline; z-index:100; cursor:hand; cursor: pointer;" id="OBJ_75_CloseImg" src="images/nav_012_close/ws_close_0.gif" alt="Close module" onMouseOver="this.src=document.getElementById('OBJ_75_img_1').src;return false;" onMouseOut="this.src=document.getElementById('OBJ_75_img_0').src; return false;" onMouseDown="this.src=document.getElementById('OBJ_75_img_2').src;return false;" onMouseUp="if(confirm('Module window will be closed. Are you sure?')) { Shutdown(); window.close(); } else return false;"   /></div>]]>
</data>
</object>
<object id="OBJ_76" x="502" y="506" w="27" h="24" z="13" display="frame" begin="0" type="nav_011_sound">
<data>
<![CDATA[<div style="width:27px;height:24px;"><div style="display:none;" id="OBJ_76_storage"  ><img border="0" id="OBJ_76_img_on_0" src="images/nav_011_sound/turquoise/btn_sound_on_0.gif" /><img border="0" id="OBJ_76_img_on_1" src="images/nav_011_sound/turquoise/btn_sound_on_1.gif" /><img border="0" id="OBJ_76_img_off_0" src="images/nav_011_sound/turquoise/btn_sound_off_0.gif" /><img border="0" id="OBJ_76_img_off_1" src="images/nav_011_sound/turquoise/btn_sound_off_1.gif" /></div><div style="display:inline; z-index:100; cursor: hand; cursor: pointer;" id="OBJ_76_sound_on"  ><img border="0" id="OBJ_76_simg_on" alt="Sound is on. Turn sound off." src="images/nav_011_sound/turquoise/btn_sound_on_0.gif" onClick="var oArgs=new Object; oArgs.pid='OBJ_76'; CallMethod('nav_011_sound','toggleSound',oArgs); return false;" onMouseOver="this.src=document.getElementById('OBJ_76_img_on_1').src; return false;" onMouseOut="this.src=document.getElementById('OBJ_76_img_on_0').src; return false;" /></div><div style="display:none; z-index:101; cursor: hand; cursor: pointer;" id="OBJ_76_sound_off"  ><img border="0" id="OBJ_76_simg_off" alt="Sound is off. Turn sound on." src="images/nav_011_sound/turquoise/btn_sound_off_0.gif" onClick="var oArgs=new Object; oArgs.pid='OBJ_76'; CallMethod('nav_011_sound','toggleSound',oArgs); return false;" onMouseOver="this.src=document.getElementById('OBJ_76_img_off_1').src; return false;" onMouseOut="this.src=document.getElementById('OBJ_76_img_off_0').src; return false;" /></div></div>]]>
</data>
</object>
<object id="OBJ_77" x="534" y="505" w="27" h="25" z="14" display="frame" begin="0" type="nav_013_restart">
<data>
<![CDATA[<div style="width:27px;height:25px;"><div style="display:none;" id="OBJ_77_storage"  ><img border="0" id="OBJ_77_img_en_0" src="images/nav_013_restart/turquoise/btn_restart_0.gif" /><img border="0" id="OBJ_77_img_en_1" src="images/nav_013_restart/turquoise/btn_restart_1.gif" /><img border="0" id="OBJ_77_img_en_2" src="images/nav_013_restart/turquoise/btn_restart_2.gif" /></div><div style="display:inline; z-index:100; cursor: hand; cursor: pointer;" id="OBJ_77_restart_en"  ><img border="0" id="OBJ_77_rimg_en" alt="Replay current slide" src="images/nav_013_restart/turquoise/btn_restart_0.gif" onMouseUp="var oArgs=new Object; oArgs.pid='OBJ_77'; CallMethod('nav_013_restart','Restart',oArgs); return false;" onMouseDown="this.src=document.getElementById('OBJ_77_img_en_2').src; return false;" onMouseOver="this.src=document.getElementById('OBJ_77_img_en_1').src; return false;" onMouseOut="this.src=document.getElementById('OBJ_77_img_en_0').src; return false;" /></div><div style="display:none; z-index:101; cursor: hand; cursor: pointer;" id="OBJ_77_restart_dis"  ><img border="0" id="OBJ_77_rimg_dis" alt="Access is not allowed" src="images/nav_013_restart/turquoise/btn_restart_3.gif" /></div></div>]]>
</data>
</object>
<object id="OBJ_78" x="27" y="37" w="721" h="28" z="15" display="frame" begin="0" type="nav_010_slidename">
<data>
<![CDATA[<div style="width:721px;height:28px;"><table width="100%" cellpadding="3" cellspacing="0" border="0"  ><tr><td align="center" bgcolor="#c7e9ef"><span id="OBJ_78_SlideName" style="width:100%; font-family: Arial; font-style:normal; font-weight:bold; font-size: 18px; text-align:center; color: #2e95a7;" /></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
</masters>
<methods>
<method type="nav_001_selector" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oCurSelector = document.getElementById(argobj.pid+"_selector");
					if(oCurSelector==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bHierarchy = oParams.selectSingleNode("hierarchy").text=="yes" ? true : false;
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					var oOptions = oCurSelector.options;
					while(oOptions.length>0) oCurSelector.remove(0);
					var	oSlides = g_oSlides.selectNodes("slide");
					var oSlide,sName,sId,sIndent,oOption;
					for(var i=0; i<oSlides.length;i++) {
						oSlide = oSlides[i];
						sId = oSlide.getAttribute("id");
						sIndent = oSlide.getAttribute("indent");
						sName = "";
						if(sIndent!=null && bHierarchy) {
							var nIndent = parseInt(sIndent);
							for(var j=0; j<nIndent; j++) {
								sName += "-";
							}
							sName += " ";
						}
						sName += oSlide.getAttribute("name");
						oOption = document.createElement("option");
						//oOptions.add(oOption);
						oCurSelector.appendChild(oOption);
						oOption.text = sName;
						oOption.value = sId;
					}
					oCurObj.setAttribute("state","enabled");
					oCurObj.setAttribute("navig","0");
					if(bNavLock) {
						AddEvtHandler("EVENT_SLIDE_OPENED", "nav_001_selector", argobj.pid);
						AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_001_selector", argobj.pid);
					}
					AddEvtHandler("EVENT_NAVIGATION", "nav_001_selector", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_001_selector" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch(oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							var oCurSelector = document.getElementById(argobj.pid + "_selector");
							var oOptions = oCurSelector.options;
							for(var i=0; i<oOptions.length; i++) {
								if(oOptions[i].value == sCurrentSlideId) {
									oCurSelector.selectedIndex = i;
									oOptions[i].setAttribute("selected","1");
								} else {
									oOptions[i].removeAttribute("selected");
								}
							}
							CallMethod("nav_001_selector","DisableSelector",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("state")=="disabled" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_001_selector","EnableSelector",argobj);
							}
							return false;
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="selector" || oArg.sTargets=="all") {
								if(oArg.sAction=="on" && oCurObj.getAttribute("state")=="disabled") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_001_selector","EnableSelector",argobj);
								}
								if(oArg.sAction=="off" && oCurObj.getAttribute("state")=="enabled") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_001_selector","DisableSelector",argobj);
								}
							}
							break;
						default:
							break;
					}
				}
				]]>
</method>
<method type="nav_001_selector" name="DisableSelector">
<![CDATA[

				function DisableSelector(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(oCurObj.getAttribute("state")=="disabled") return false;
					var oCurSelector = document.getElementById(argobj.pid+"_selector");
					if(oCurSelector==null) return false;
					oCurSelector.disabled = true;
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_001_selector" name="EnableSelector">
<![CDATA[

				function EnableSelector(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(oCurObj.getAttribute("state")=="enabled") return false;
					var oCurSelector = document.getElementById(argobj.pid+"_selector");
					if(oCurSelector==null) return false;
					oCurSelector.disabled = false;
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_001_selector" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oCurSelector = document.getElementById(argobj.pid+"_selector");
					if(oCurSelector==null) return false;
					var oOptions = oCurSelector.options;
					if(oOptions==null) return true;
					switch(argobj.property.toLowerCase()) {
						case "disabled":		g_vPropertyValue = oCurSelector.disabled ? "1" : "0";			break;
						case "selectedid":		g_vPropertyValue = oOptions[oCurSelector.selectedIndex].value; 	break;
						case "selectedname":	g_vPropertyValue = oOptions[oCurSelector.selectedIndex].text; 	break;
						case "selectednumber":	g_vPropertyValue = oCurSelector.selectedIndex+1; 	break;
						case "totalentries":	g_vPropertyValue = oOptions.length; 	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_001_selector" name="JumpToSlide">
<![CDATA[

				function JumpToSlide(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurSelector = document.getElementById(argobj.pid+"_selector");
					var oOptions = oCurSelector.options;
					var sJumpto = oOptions[oCurSelector.selectedIndex].value;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var sMsg = oParams.selectSingleNode("msg").text;
					if(sMsg==null) sMsg = "You cannot jump to this slide until you visit previous slides";
					if(g_bStrictOrder) {
						var oSlide = g_oSlides.selectSingleNode("slide[@id='"+sJumpto+"']");
						if(!SCOIsSlideVisited(oSlide)) {
							var oTmp = oSlide.previousSibling;
							if(oTmp!=null) {
								if(oTmp.nodeType!=1) {
									var iLimit = g_oSlides.selectNodes("slide").length*2;
									var iCnt = 0;
									while(oTmp.nodeType!=1 && oTmp.nodeName!="slide") {
										oTmp = oTmp.previousSibling;
										if(oTmp==null) break;
										iCnt++;
										if(iCnt>iLimit) break;
									}
								}
								if(oTmp!=null) {
									if(!SCOIsSlideVisited(oTmp)) {
										var sCurrentSlideId = g_oSlide.getAttribute("id");
										var	oSlides = g_oSlides.selectNodes("slide");
										var sId;
										for(var i=0; i<oOptions.length;i++) {
											if(oOptions[i].value == sCurrentSlideId) {
												oCurSelector.selectedIndex = i;
												break;
											}
										}
										alert(sMsg);
										return false;
									}
								}
							}
						}
					}
					OpenSlideById(sJumpto);
					return true;
				}
				]]>
</method>
<method type="nav_002_position" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.setAttribute("num","");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_002_position", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_002_position" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					if(oEvtHandler.sTargetId==null) return false;
					var oCurObj = document.getElementById(oEvtHandler.sTargetId);
					if(oCurObj==null) return false;
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							var oSlides = g_oSlides.selectNodes("slide");
							var sTotal = oSlides.length.toString();
							document.getElementById(oEvtHandler.sTargetId + "_position_total").innerHTML = sTotal;
							var sCurrentSlideId = g_oSlide.getAttribute("id");
							var iCurrent = 0;
							for(var i=0; i<oSlides.length; i++)	{
								iCurrent++;
								var oSlide = oSlides[i];
								if(oSlide.getAttribute("id")==sCurrentSlideId) break;
							}
							sCurrent = iCurrent.toString();
							oCurObj.setAttribute("num",sCurrent);
							document.getElementById(oEvtHandler.sTargetId + "_position_current").innerHTML = sCurrent;
							break;
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_002_position" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "currentposition":		g_vPropertyValue = oCurObj.getAttribute("num");		break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oCurContents = document.getElementById(argobj.pid+"_contents");
					if(oCurContents==null) return false;
					var oHeader = document.getElementById(argobj.pid+"_header");
					if(oHeader==null) return false;

					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var bHierarchy = oParams.selectSingleNode("hierarchy").text=="yes" ? true : false;
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					if(oHeader.getElementsByTagName("p").length!=0) {
						//fixing Gecko-specific p rendering
						var aTmp = document.getElementById(argobj.pid+"_header").getElementsByTagName("p");
						for(var i=0;i<aTmp.length;i++) {
							aTmp[i].style.padding = "0px";
							aTmp[i].style.margin = "0px";
						}
					}
					oCurObj.style.left = bStandard ? "-475px" : "-"+oParams.selectSingleNode("tab_width").text+"px";
					oCurObj.style.zIndex = 990;
					oCurObj.setAttribute("closed","1");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					var	aSlides = g_oSlides.selectNodes("slide");
					var oSlide, sName, sId, sIndent, oTmpl, oClone, aTags, oTmp;
					oCurContents.innerHTML = "";
					if(!bHierarchy) {
						oTmpl = document.getElementById(argobj.pid+"_template_simple");
						if(oTmpl==null) return false;
						for(var i=0; i<aSlides.length;i++) {
							oSlide = aSlides[i];
							sName = oSlide.getAttribute("name");
							sId = oSlide.getAttribute("id");
							oClone = oTmpl.cloneNode(true);
							aTags = oClone.getElementsByTagName("img");
							aTags[0].setAttribute("id",argobj.pid+"_icon_"+sId);
							aTags = oClone.getElementsByTagName("td");
							aTags[1].setAttribute("id", argobj.pid+"_td_"+sId);
							aTags[1].innerHTML = sName;
							if(i==aSlides.length-1) {
								oClone.style.borderBottom = oClone.style.borderTop;
								oClone.style.paddingBottom = "1px";
							}
							oCurContents.appendChild(oClone);
							oClone.style.display = g_isMSIE ? "inline" : "block";
						}
					} else {
						oTmpl = document.getElementById(argobj.pid+"_template_hier");
						if(oTmpl==null) return false;
						var nIndent = 0;	var nNextIndent = 0;	var nPrevIndent = 0;
						var oSlide = null;	var oNextSlide = null;	var oPrevSlide = null;
						var oCurDiv = oCurContents;
						var aDivs = new Array();
						pushArray(aDivs,oCurDiv);
						for(var i=0; i<aSlides.length;i++) {
							oSlide = aSlides[i];
							sName = oSlide.getAttribute("name");
							sId = oSlide.getAttribute("id");
							nIndent = oSlide.getAttribute("indent");
							if(nIndent!=0 && i==0) nIndent = 0;
							if(nIndent>nPrevIndent) {
								oCurDiv = document.createElement("div");
								oCurDiv.setAttribute("id", argobj.pid+"_div_"+oPrevSlide.getAttribute("id"));
								pushArray(aDivs,oCurDiv);
							} else {
								while(nIndent<nPrevIndent) {
									oTmp = popArray(aDivs);
									oCurDiv = popArray(aDivs);
									oCurDiv.appendChild(oTmp);
									pushArray(aDivs,oCurDiv);
									nPrevIndent--;
								}
							}
							oNextSlide = (i==aSlides.length-1) ? null : aSlides[i+1];
							nNextIndent = (oNextSlide==null) ? 0 : oNextSlide.getAttribute("indent");
							oClone = oTmpl.cloneNode(true);
							oClone.setAttribute("id", argobj.pid+"_item_"+sId)
							aTags = oClone.getElementsByTagName("img");
							if(nNextIndent>nIndent) {
								aTags[0].style.cursor = g_isMSIE ? "hand" : "pointer";
								aTags[0].setAttribute("childdiv", argobj.pid+"_div_"+sId);
								aTags[0].setAttribute("iconopen", document.getElementById(argobj.pid+"_icon_open").src);
								aTags[0].setAttribute("iconclosed", document.getElementById(argobj.pid+"_icon_closed").src);
							} else {
								aTags[0].style.visibility = "hidden";
							}
							aTags[1].setAttribute("id",argobj.pid+"_icon_"+sId);
							aTags = oClone.getElementsByTagName("td");
							aTags[2].setAttribute("id", argobj.pid+"_td_"+sId);
							aTags[2].innerHTML = sName;
							if(nIndent!=0) {
								var oZ = aTags[0].parentNode;
								var oX = aTags[1];
								var oY = aTags[0].cloneNode(true);
								for(var j=0;j<nIndent;j++) {
									oY = aTags[0].cloneNode(true);
									oX = oZ.insertBefore(oY,oX);
								}
							}
							oClone.style.display = g_isMSIE ? "inline" : "block";
							if(i==aSlides.length-1) {
								oClone.style.borderBottom = oClone.style.borderTop;
								oClone.style.paddingBottom = "1px";
							}
							oCurDiv.appendChild(oClone);
							oPrevSlide = oSlide;
							nPrevIndent = nIndent;
						}
						if(aDivs.length>0) {
							nIndent = 0;
							while(nIndent<nPrevIndent) {
								oTmp = popArray(aDivs);
								oCurDiv = popArray(aDivs);
								oCurDiv.appendChild(oTmp);
								pushArray(aDivs,oCurDiv);
								nPrevIndent--;
							}
						}
					}
					oCurObj.setAttribute("state","enabled");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_003_contents", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_003_contents", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_003_contents", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("closed")=="0") CallMethod("nav_003_contents","MoveTab",argobj);
							if(oCurObj.getAttribute("navlock")=="1") CallMethod("nav_003_contents","DisableAccess",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("state")=="disabled" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_003_contents","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="contents" || oArg.sTargets=="all") {
								if(oArg.sAction=="on" && oCurObj.getAttribute("state")=="disabled") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_003_contents","EnableAccess",argobj);
								}
								if(oArg.sAction=="off" && oCurObj.getAttribute("state")=="enabled") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_003_contents","DisableAccess",argobj);
								}
							}
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="UpdateContents">
<![CDATA[

				function UpdateContents(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var sMsg = oParams.selectSingleNode("msg").text;
					if(sMsg==null) sMsg = "You cannot jump to this slide until you visit previous slides";
					var	aSlides = g_oSlides.selectNodes("slide");
					var oSlide, sName, sId, sIndent;
					var bPrevVisited = true;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var oIcon, oTD;
					for(var i=0; i<aSlides.length;i++) {
						oSlide = aSlides[i];
						sName = oSlide.getAttribute("name");
						sId = oSlide.getAttribute("id");
						oIcon = document.getElementById(argobj.pid+"_icon_"+sId);
						oTD = document.getElementById(argobj.pid+"_td_"+sId);
						if(sId!=sCurrentSlideId) {
							if(oIcon.src==document.getElementById(argobj.pid+"_icon_visited").src) continue;
							if(!g_bStrictOrder || (g_bStrictOrder && bPrevVisited)) {
								oTD.innerHTML = '<a href="#" onclick="var oArgs=new Object; oArgs.pid=\''+argobj.pid+'\'; oArgs.sid=\''+sId+'\'; CallMethod(\'nav_003_contents\',\'JumpToSlide\',oArgs); return false;">'+sName+'</a>';
							} else {
								oTD.innerHTML = sName;
								oTD.title = sMsg;
							}
							if(SCOIsSlideVisited(oSlide)) {
								bPrevVisited = true;
								oIcon.src = document.getElementById(argobj.pid+"_icon_visited").src;
							} else {
								bPrevVisited = false;
								oIcon.src = document.getElementById(argobj.pid+"_icon_unvisited").src;
							}
						} else {
							bPrevVisited = true;
							document.getElementById(argobj.pid+"_icon_"+sCurrentSlideId).src = document.getElementById(argobj.pid+"_icon_current").src;
							document.getElementById(argobj.pid+"_td_"+sCurrentSlideId).innerHTML = "<b>"+sName+"</b>";
						}
					}
					if(oParams.selectSingleNode("hierarchy").text=="yes") {
						var oCurDiv = document.getElementById(argobj.pid+"_item_"+sCurrentSlideId);
						var oCurContents = document.getElementById(argobj.pid+"_contents");
						var iCnt = 0;
						while(oCurDiv!=oCurContents && iCnt<100) {
							oCurDiv = oCurDiv.parentNode;
							if(oCurDiv.nodeName.toLowerCase()=="div") {
								if(oCurDiv.style.display == "none") oCurDiv.style.display = g_isMSIE ? "inline" : "block";
							}
							iCnt++;
						}
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="JumpToSlide">
<![CDATA[

				function JumpToSlide(argobj)
				{
					if(argobj.pid==null || argobj.sid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.setAttribute("closed","1");
					CallMethod("nav_003_contents","MoveTab",argobj);
					OpenSlideById(argobj.sid);
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="OpenTab">
<![CDATA[

				function OpenTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						CallMethod("nav_003_contents","UpdateContents",argobj);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="CloseTab">
<![CDATA[

				function CloseTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(!bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_003_contents", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="MoveTab">
<![CDATA[

				function MoveTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						CallMethod("nav_003_contents","UpdateContents",argobj);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					} else {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_003_contents", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="sinkTab">
<![CDATA[

				function sinkTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.style.zIndex=990;
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					if(!bOpenTab) CallMethod("nav_003_contents","MoveTab",argobj);
					document.getElementById(argobj.pid+"_tabimg").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_003_contents" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						case "open":		g_vPropertyValue = oCurObj.getAttribute("closed")=="1" ? "0" : "1";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					var oHeader = document.getElementById(argobj.pid+"_header");
					if(oHeader==null) return false;
					var aTmp = oHeader.getElementsByTagName("p");
					if(aTmp.length!=0) {
						//fixing Gecko-specific p rendering
						for(var i=0;i<aTmp.length;i++) {
							aTmp[i].style.padding = "0px";
							aTmp[i].style.margin = "0px";
						}
					}
					oCurObj.style.left = bStandard ? "-475px" : "-"+oParams.selectSingleNode("tab_width").text+"px";
					oCurObj.style.zIndex = 990;
					oCurObj.setAttribute("closed","1");
					oCurObj.setAttribute("state","enabled");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					oCurObj.setAttribute("state","enabled");
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_004_help", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_004_help", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_004_help", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("closed")=="0") CallMethod("nav_004_help","MoveTab",argobj);
							if(oCurObj.getAttribute("navlock")=="1") CallMethod("nav_004_help","DisableAccess",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("state")=="disabled" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_004_help","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="help" || oArg.sTargets=="all") {
								if(oArg.sAction=="on" && oCurObj.getAttribute("state")=="disabled") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_004_help","EnableAccess",argobj);
								}
								if(oArg.sAction=="off" && oCurObj.getAttribute("state")=="enabled") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_004_help","DisableAccess",argobj);
								}
							}
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="OpenTab">
<![CDATA[

				function OpenTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					}
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="CloseTab">
<![CDATA[

				function CloseTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(!bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_004_help", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="MoveTab">
<![CDATA[

				function MoveTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					} else {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_004_help", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="sinkTab">
<![CDATA[

				function sinkTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.style.zIndex=990;
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					if(!bOpenTab) CallMethod("nav_004_help","MoveTab",argobj);
					document.getElementById(argobj.pid+"_tabimg").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_004_help" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						case "open":		g_vPropertyValue = oCurObj.getAttribute("closed")=="1" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					var oHeader = document.getElementById(argobj.pid+"_header");
					if(oHeader==null) return false;
					var aTmp = oHeader.getElementsByTagName("p");
					if(aTmp.length!=0) {
						//fixing Gecko-specific p rendering
						for(var i=0;i<aTmp.length;i++) {
							aTmp[i].style.padding = "0px";
							aTmp[i].style.margin = "0px";
						}
					}
					oCurObj.style.left = bStandard ? "-475px" : "-"+oParams.selectSingleNode("tab_width").text+"px";
					oCurObj.style.zIndex = 990;
					oCurObj.setAttribute("closed","1");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					var oCurDisplay = document.getElementById(argobj.pid+"_display");
					if(oCurDisplay==null) return false;
					oCurDisplay.innerHTML = "0";
					var oCurMemInd = document.getElementById(argobj.pid+"_mem_ind");
					if(oCurMemInd==null) return false;
					oCurMemInd.innerHTML = "";
					oCurObj.setAttribute("operanda","na");
					oCurObj.setAttribute("operatora","na");
					oCurObj.setAttribute("operandb","na");
					oCurObj.setAttribute("lastbutton","na");
					oCurObj.setAttribute("clean","0");
					oCurObj.setAttribute("memory","na");
					oCurObj.setAttribute("state","enabled");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_005_calc", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_005_calc", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_005_calc", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("closed")=="0") CallMethod("nav_005_calc","MoveTab",argobj);
							if(oCurObj.getAttribute("navlock")=="1") CallMethod("nav_005_calc","DisableAccess",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("state")=="disabled" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_005_calc","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="calc" || oArg.sTargets=="all") {
								if(oArg.sAction=="on" && oCurObj.getAttribute("state")=="disabled") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_005_calc","EnableAccess",argobj);
								}
								if(oArg.sAction=="off" && oCurObj.getAttribute("state")=="enabled") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_005_calc","DisableAccess",argobj);
								}
							}
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="OpenTab">
<![CDATA[

				function OpenTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="CloseTab">
<![CDATA[

				function CloseTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(!bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_005_calc", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="MoveTab">
<![CDATA[

				function MoveTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					} else {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_005_calc", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="sinkTab">
<![CDATA[

				function sinkTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.style.zIndex=990;
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					if(!bOpenTab) CallMethod("nav_005_calc","MoveTab",argobj);
					document.getElementById(argobj.pid+"_tabimg").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						case "open":		g_vPropertyValue = oCurObj.getAttribute("closed")=="1" ? "1" : "0";	break;
						case "value":
							var oCurDisplay = document.getElementById(argobj.pid+"_display");
							g_vPropertyValue = oCurDisplay.innerHTML;
							break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="calcInput">
<![CDATA[

				function calcInput(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oCurDisplay = document.getElementById(argobj.pid+"_display");
					var oCurMemInd = document.getElementById(argobj.pid+"_mem_ind");
					if(oCurObj.getAttribute("equal")!=null) {
						if(oCurObj.getAttribute("equal")=="1") {
							oCurObj.setAttribute("equal","0");
							oCurObj.setAttribute("operanda","na");
							oCurObj.setAttribute("operandb","na");
							oCurObj.setAttribute("operatora","na");
						}
					}
					if(oCurObj.getAttribute("clean")=="1") {
						oCurDisplay.innerHTML = "0";
						oCurObj.setAttribute("clean","0");
						oCurObj.setAttribute("operandb","na");
					}
					var sCurString = oCurDisplay.innerHTML;
					if(sCurString=="0" && argobj.btn=="0") return false;
					if(argobj.btn=="." && sCurString.indexOf(".")!=-1) return false;
					if(sCurString.length>=17) {
						if(sCurString.indexOf("!")==-1) oCurDisplay.innerHTML = "!"+sCurString;
						return false;
					}
					if(sCurString.length==1 && sCurString=="0" && argobj.btn!=".") {
						oCurDisplay.innerHTML = argobj.btn;
						return true;
					}
					oCurDisplay.innerHTML += argobj.btn;
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="actionKey">
<![CDATA[

				function actionKey(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oCurDisplay = document.getElementById(argobj.pid+"_display");
					var oCurMemInd = document.getElementById(argobj.pid+"_mem_ind");
					var sCurString = oCurDisplay.innerHTML;
					if(sCurString.indexOf("ERROR")!=-1 && argobj.btn!="C") {
						return false;
					}
					switch(argobj.btn) {
						case "M+":
							if(sCurString.indexOf("!")!=-1) sCurString = sCurString.substr(1);
							oCurMemInd.innerHTML = "M";
							if(oCurObj.getAttribute("memory")=="na") {
								oCurObj.setAttribute("memory",sCurString);
							} else {
								var nM1 = parseFloat(oCurObj.getAttribute("memory"));
								var nM2 = parseFloat(sCurString);
								nM1 = nM1 + nM2;
								oCurObj.setAttribute("memory", nM1.toString());
							}
							return true;
						case "MS":
							if(sCurString.indexOf("!")!=-1) sCurString = sCurString.substr(1);
							oCurMemInd.innerHTML = "M";
							if(oCurObj.getAttribute("memory")=="na") {
								oCurObj.setAttribute("memory","-"+sCurString);
							} else {
								var nM1 = parseFloat(oCurObj.getAttribute("memory"));
								var nM2 = parseFloat(sCurString);
								nM1 = nM1 - nM2;
								oCurObj.setAttribute("memory", nM1.toString());
							}
							return true;
						case "MR":
							if(oCurObj.getAttribute("memory")!="na") {
								sCurString = oCurObj.getAttribute("memory");
								oCurDisplay.innerHTML = sCurString;
							}
							return true;
						case "MC":
							oCurObj.setAttribute("memory","na");
							oCurMemInd.innerHTML = "";
							return true;
						case "C":
							oCurObj.setAttribute("operanda","na");
							oCurObj.setAttribute("operatora","na");
							oCurObj.setAttribute("operandb","na");
							oCurObj.setAttribute("lastbutton","na");
							oCurObj.setAttribute("clean","0");
							oCurDisplay.innerHTML = "0";
							return true;
						case "CE":
							oCurObj.setAttribute("operandb","na");
							oCurObj.setAttribute("lastbutton","na");
							oCurObj.setAttribute("clean","0");
							oCurDisplay.innerHTML = "0";
							return true;
						case "Backspace":
							if(sCurString.length>1) sCurString = sCurString.substr(0,sCurString.length-1);
							oCurDisplay.innerHTML = sCurString;
							return true;
						case "equal":
							if(oCurObj.getAttribute("percent")!=null) {
								if(oCurObj.getAttribute("percent")=="1") {
									return false;
								}
							}
							oCurObj.setAttribute("equal","1");
							if(oCurObj.getAttribute("operanda")!="na") {
								CallMethod("nav_005_calc","calculate",argobj);
								return true;
							}
						case "power":
						case "plus":
						case "minus":
						case "mult":
						case "divide":
							if(oCurObj.getAttribute("equal")!=null) {
								if(oCurObj.getAttribute("equal")=="1") {
									oCurObj.setAttribute("equal","0");
								}
							}
							if(oCurObj.getAttribute("percent")!=null) {
								if(oCurObj.getAttribute("percent")=="1") {
									oCurObj.setAttribute("percent","0");
								}
							}
							if(sCurString.indexOf("!")!=-1) {
								sCurString = sCurString.substr(1);
								oCurDisplay.innerHTML = sCurString;
							}
							if(oCurObj.getAttribute("operanda")=="na" || oCurObj.getAttribute("clean")=="1") {
								oCurObj.setAttribute("operanda",sCurString);
								oCurObj.setAttribute("operatora",argobj.btn);
								oCurObj.setAttribute("clean","1");
							} else {
								CallMethod("nav_005_calc","calculate",argobj);
							}
							break;
						case "negate":
							if(sCurString=="0") return false;
							if(oCurObj.getAttribute("equal")!=null) {
								if(oCurObj.getAttribute("equal")=="1") {
									oCurObj.setAttribute("equal","0");
								}
							}
							if(oCurObj.getAttribute("percent")!=null) {
								if(oCurObj.getAttribute("percent")=="1") {
									oCurObj.setAttribute("percent","0");
								}
							}
							if(sCurString.indexOf("-")!=-1) {
								sCurString = sCurString.substr(1);
							} else {
								sCurString = "-"+sCurString;
							}
							oCurDisplay.innerHTML = sCurString;
							return true;
						case "recip":
							if(sCurString=="0") {
								oCurDisplay.innerHTML = "ERROR: DIV 0";
								oCurObj.setAttribute("operanda","na");
								oCurObj.setAttribute("operatora","na");
								oCurObj.setAttribute("operandb","na");
								oCurObj.setAttribute("lastbutton","na");
								oCurObj.setAttribute("clean","1");
								return false;
							}
							if(oCurObj.getAttribute("equal")!=null) {
								if(oCurObj.getAttribute("equal")=="1") {
									oCurObj.setAttribute("equal","0");
								}
							}
							if(oCurObj.getAttribute("percent")!=null) {
								if(oCurObj.getAttribute("percent")=="1") {
									oCurObj.setAttribute("percent","0");
								}
							}
							if(sCurString.indexOf("!")!=-1) sCurString = sCurString.substr(1);
							var nValue = 1/parseFloat(sCurString);
							var sValue = nValue.toString();
							if(sValue.length>=20) {
								sValue = sValue.substring(0,19);
							}
							oCurDisplay.innerHTML = sValue;
							return true;
						case "percent":
							if(oCurObj.getAttribute("operanda")=="na") return false;
							if(oCurObj.getAttribute("percent")=="1") return false;
							oCurObj.setAttribute("percent","1");
							if(oCurObj.getAttribute("equal")!=null) {
								if(oCurObj.getAttribute("equal")=="1") {
									oCurObj.setAttribute("equal","0");
								}
							}
							CallMethod("nav_005_calc","calculate",argobj);
							oCurObj.setAttribute("operandb","na");
							return true;
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_005_calc" name="calculate">
<![CDATA[

				function calculate(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oCurDisplay = document.getElementById(argobj.pid+"_display");
					var oCurMemInd = document.getElementById(argobj.pid+"_mem_ind");
					var nValue1 = parseFloat(oCurObj.getAttribute("operanda"));
					var sCurString = oCurDisplay.innerHTML;
					if(sCurString.indexOf("!")!=-1) sCurString = sCurString.substr(1);
					if(oCurObj.getAttribute("operandb")=="na") {
						oCurObj.setAttribute("operandb",sCurString);
						var nValue2 = parseFloat(sCurString);
					} else {
						var nValue2 = parseFloat(oCurObj.getAttribute("operandb"));
					}
					var vResult = 0;
					switch(oCurObj.getAttribute("operatora")) {
						case "plus":
							vResult = (nValue1*1000 + nValue2*1000)/1000;
							break;
						case "minus":
							vResult = (nValue1*1000 - nValue2*1000)/1000;
							break;
						case "mult":
							vResult = nValue1 * nValue2;
							if(argobj.btn == "percent") vResult = vResult/100;
							break;
						case "divide":
							if(nValue2==0) {
								oCurDisplay.innerHTML = "ERROR: DIV 0";
								oCurObj.setAttribute("operanda","na");
								oCurObj.setAttribute("operatora","na");
								oCurObj.setAttribute("operandb","na");
								oCurObj.setAttribute("lastbutton","na");
								oCurObj.setAttribute("clean","1");
								return false;
							}
							vResult = nValue1 / nValue2;
							break;
						case "power":
							vResult = Math.pow(nValue1,nValue2);
							break;
					}
					if(vResult>-1 && vResult<1) {
						vResult = vResult.toString();
						if(vResult.length>=20) {
							if(vResult.indexOf("e")!=-1) {
								var aParts = vResult.split("e");
								if(parseInt(aParts[1])<-20) {
									vResult = "0";
								} else {
									if(aParts[0].length>14) {
										aParts[0] = aParts[0].substr(0,13);
										if(parseFloat(aParts[0])==0) {
											vResult = "0";
										} else {
											vResult = aParts.join("e");
										}
									} else {
										vResult = aParts.join("e");
									}
								}
							} else {
								vResult = vResult.substr(0,19);
							}
						}
					} else {
						vResult = vResult.toString();
						if(vResult.length>=18) {
							if(vResult.indexOf(".")==-1) {
								oCurDisplay.innerHTML = "ERROR: OVERFLOW";
								oCurObj.setAttribute("operanda","na");
								oCurObj.setAttribute("operatora","na");
								oCurObj.setAttribute("operandb","na");
								oCurObj.setAttribute("lastbutton","na");
								oCurObj.setAttribute("clean","1");
								return false;
							} else {
								if(vResult.indexOf("e")!=-1) {
									var aParts = vResult.split("e");
									if(aParts[0].length>14) {
										aParts[0] = aParts[0].substr(0,13);
										vResult = aParts.join("e")
									}
								} else {
									vResult = vResult.substr(0,17);
								}
							}
						}
					}
					oCurDisplay.innerHTML = vResult;
					oCurObj.setAttribute("operanda",vResult);
					if(argobj.btn!="equal" && argobj.btn!="percent") {
						oCurObj.setAttribute("operatora",argobj.btn);
						oCurObj.setAttribute("lastoperator",argobj.btn);
					}
					oCurObj.setAttribute("clean","1");
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					var oHeader = document.getElementById(argobj.pid+"_header");
					if(oHeader==null) return false;
					var aTmp = oHeader.getElementsByTagName("p");
					if(aTmp.length!=0) {
						//fixing Gecko-specific p rendering
						for(var i=0;i<aTmp.length;i++) {
							aTmp[i].style.padding = "0px";
							aTmp[i].style.margin = "0px";
						}
					}
					oCurObj.style.left = bStandard ? "-475px" : "-"+oParams.selectSingleNode("tab_width").text+"px";
					oCurObj.style.zIndex = 990;
					oCurObj.setAttribute("closed","1");
					oCurObj.setAttribute("state","enabled");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					oCurObj.setAttribute("state","enabled");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_007_about", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_007_about", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_007_about", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("closed")=="0") CallMethod("nav_007_about","MoveTab",argobj);
							if(oCurObj.getAttribute("navlock")=="1") CallMethod("nav_007_about","DisableAccess",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("state")=="disabled" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_007_about","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="help" || oArg.sTargets=="all") {
								if(oArg.sAction=="on" && oCurObj.getAttribute("state")=="disabled") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_007_about","EnableAccess",argobj);
								}
								if(oArg.sAction=="off" && oCurObj.getAttribute("state")=="enabled") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_007_about","DisableAccess",argobj);
								}
							}
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="OpenTab">
<![CDATA[

				function OpenTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					}
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="CloseTab">
<![CDATA[

				function CloseTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sCurrentSlideId==sSavedSlideId) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(!bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_007_about", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="MoveTab">
<![CDATA[

				function MoveTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bStandard = oParams.selectSingleNode("standard").text=="yes" ? true : false;
					var iDockX = bStandard ? -475 : -parseInt(oParams.selectSingleNode("tab_width").text);
					var iY = oCurObj.offsetTop;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					var dtBegin = new Date();
					if(bOpenTab) {
						CreateTimeActionMove(argobj.pid, 0, 300, iDockX, iY, 0, iY);
						oCurObj.style.zIndex = 991;
						oCurObj.setAttribute("closed","0");
					} else {
						CreateTimeActionMove(argobj.pid, 0, 300, 0, iY, iDockX, iY);
						CreateTimeActionMethod("nav_007_about", "sinkTab", null, 300, argobj);
						oCurObj.setAttribute("closed","1");
					}
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="sinkTab">
<![CDATA[

				function sinkTab(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.style.zIndex=990;
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bOpenTab = oCurObj.getAttribute("closed")=="1" ? true : false;
					if(!bOpenTab) CallMethod("nav_007_about","MoveTab",argobj);
					document.getElementById(argobj.pid+"_tabimg").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					document.getElementById(argobj.pid+"_tabimg_disabled").style.display = "none";
					document.getElementById(argobj.pid+"_tabimg").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_007_about" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						case "open":		g_vPropertyValue = oCurObj.getAttribute("closed")=="1" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					oCurObj.setAttribute("state","enabled");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_008_next", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_008_next", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_008_next", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("navlock")=="1")
							{
								CallMethod("nav_008_next","DisableAccess",argobj);
							} else {
								CallMethod("nav_008_next","EnableAccess",argobj);
							}
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("navlock")=="1" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_008_next","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="next" || oArg.sTargets=="all" || oArg.sTargets=="buttons") {
								if(oArg.sAction=="on") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_008_next","EnableAccess",argobj);
								}
								if(oArg.sAction=="off") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_008_next","DisableAccess",argobj);
								}
							}
							break;
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_NextEnabled")==null || document.getElementById(argobj.pid+"_NextDisabled")==null) return false;
					document.getElementById(argobj.pid+"_NextEnabled").style.display = "none";
					document.getElementById(argobj.pid+"_NextDisabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(g_oSlide.nextSibling==null) {
						CallMethod("nav_008_next","DisableAccess",argobj);
						return false;
					}
					if(g_oSlide.nextSibling.nodeType!=1) {
						if(g_oSlide.nextSibling.nextSibling==null) {
							CallMethod("nav_008_next","DisableAccess",argobj);
							return false;
						}
					}
					if(document.getElementById(argobj.pid+"_NextEnabled")==null || document.getElementById(argobj.pid+"_NextDisabled")==null) return false;
					document.getElementById(argobj.pid+"_NextDisabled").style.display = "none";
					document.getElementById(argobj.pid+"_NextEnabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="JumpNext">
<![CDATA[

				function JumpNext(argobj)
				{
					if(argobj.pid==null) return false;
					if(g_oSlide.nextSibling==null) return false;
					if(g_oSlide.nextSibling.nodeType!=1) {
						if(g_oSlide.nextSibling.nextSibling==null) return false;
					}
					CallMethod("nav_008_next","DisableAccess",argobj);
					NextSlide();
					return true;
				}
				]]>
</method>
<method type="nav_008_next" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var bNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? true : false;
					oCurObj.setAttribute("state","enabled");
					oCurObj.setAttribute("navlock", bNavLock ? "1" : "0");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_009_prev", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_009_prev", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_009_prev", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("navlock")=="1") {
								CallMethod("nav_009_prev","DisableAccess",argobj);
							} else {
								CallMethod("nav_009_prev","EnableAccess",argobj);
							}
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("navlock")=="1" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_009_prev","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="prev" || oArg.sTargets=="all" || oArg.sTargets=="buttons") {
								if(oArg.sAction=="on") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_009_prev","EnableAccess",argobj);
								}
								if(oArg.sAction=="off") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_009_prev","DisableAccess",argobj);
								}
							}
							break;
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_PrevEnabled")==null || document.getElementById(argobj.pid+"_PrevDisabled")==null) return false;
					document.getElementById(argobj.pid+"_PrevEnabled").style.display = "none";
					document.getElementById(argobj.pid+"_PrevDisabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(g_oSlide.previousSibling==null) {
						CallMethod("nav_009_prev","DisableAccess",argobj);
						return false;
					}
					if(g_oSlide.previousSibling.nodeType!=1) {
						if(g_oSlide.previousSibling.previousSibling==null) {
							CallMethod("nav_009_prev","DisableAccess",argobj);
							return false;
						}
					}
					if(document.getElementById(argobj.pid+"_PrevEnabled")==null || document.getElementById(argobj.pid+"_PrevDisabled")==null) return false;
					document.getElementById(argobj.pid+"_PrevDisabled").style.display = "none";
					document.getElementById(argobj.pid+"_PrevEnabled").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="JumpPrev">
<![CDATA[

				function JumpPrev(argobj)
				{
					if(argobj.pid==null) return false;
					if(g_oSlide.previousSibling==null) return false;
					if(g_oSlide.previousSibling.nodeType!=1) {
						if(g_oSlide.previousSibling.previousSibling==null) return false;
					}
					CallMethod("nav_009_prev","DisableAccess",argobj);
					PreviousSlide();
					return true;
				}
				]]>
</method>
<method type="nav_009_prev" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_011_sound" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oCurOn = document.getElementById(argobj.pid+"_sound_on");
					var oCurOff = document.getElementById(argobj.pid+"_sound_off");
					if(!g_bSoundEnabled) {
						oCurOn.style.display = "none";
						oCurOff.style.display = g_isMSIE ? "inline" : "block";
						EnableSound(false);
					} else {
						oCurOff.style.display = "none";
						oCurOn.style.display = g_isMSIE ? "inline" : "block";
					}
					return true;
				}
				]]>
</method>
<method type="nav_011_sound" name="toggleSound">
<![CDATA[

				function toggleSound(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oCurOn = document.getElementById(argobj.pid+"_sound_on");
					var oCurOff = document.getElementById(argobj.pid+"_sound_off");
					if(oCurOff.style.display=="none") {
						oCurOn.style.display = "none";
						oCurOff.style.display = g_isMSIE ? "inline" : "block";
						EnableSound(false);
					} else {
						oCurOff.style.display = "none";
						oCurOn.style.display = g_isMSIE ? "inline" : "block";
						EnableSound(true);
					}
					return true;
				}
				]]>
</method>
<method type="nav_011_sound" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oCurOff = document.getElementById(argobj.pid+"_sound_off");
					switch(argobj.property.toLowerCase()) {
						case "soundon":	g_vPropertyValue = oCurOff.style.display=="none" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var sNavLock = oParams.selectSingleNode("nav_lock").text=="yes" ? "1" : "0";
					oCurObj.setAttribute("navlock", sNavLock);
					oCurObj.setAttribute("state", "enabled");
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_013_restart", argobj.pid);
					AddEvtHandler("EVENT_SLIDE_COMPLETE", "nav_013_restart", argobj.pid);
					AddEvtHandler("EVENT_NAVIGATION", "nav_013_restart", argobj.pid);
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler, oArg)
				{
					var argobj = new Object;
					argobj.pid = oEvtHandler.sTargetId;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sCurrentSlideId = g_oSlide.getAttribute("id");
					var sSavedSlideId = oCurObj.getAttribute("sid");
					if(sSavedSlideId==null) sSavedSlideId = "";
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							if(sSavedSlideId!=sCurrentSlideId) oCurObj.setAttribute("sid","");
							if(oCurObj.getAttribute("navlock")=="1") CallMethod("nav_013_restart","DisableAccess",argobj);
							break;
						case "EVENT_SLIDE_COMPLETE":
							if(oCurObj.getAttribute("navlock")=="1" && sSavedSlideId=="") {
								oCurObj.setAttribute("sid","");
								CallMethod("nav_013_restart","EnableAccess",argobj);
							}
							break;
						case "EVENT_NAVIGATION":
							if(oArg==null) return false;
							if(oArg.sTargets=="restart" || oArg.sTargets=="all") {
								if(oArg.sAction=="on") {
									oCurObj.setAttribute("sid","");
									CallMethod("nav_013_restart","EnableAccess",argobj);
								}
								if(oArg.sAction=="off") {
									oCurObj.setAttribute("sid",sCurrentSlideId);
									CallMethod("nav_013_restart","DisableAccess",argobj);
								}
							}
							break;
						default:
							break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="DisableAccess">
<![CDATA[

				function DisableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bEnabled = oCurObj.getAttribute("state")=="enabled" ? true : false;
					if(!bEnabled) return false;
					document.getElementById(argobj.pid+"_restart_en").style.display = "none";
					document.getElementById(argobj.pid+"_restart_dis").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","disabled");
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="EnableAccess">
<![CDATA[

				function EnableAccess(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var bEnabled = oCurObj.getAttribute("state")=="enabled" ? true : false;
					if(bEnabled) return false;
					document.getElementById(argobj.pid+"_restart_dis").style.display = "none";
					document.getElementById(argobj.pid+"_restart_en").style.display = g_isMSIE ? "inline" : "block";
					oCurObj.setAttribute("state","enabled");
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="Restart">
<![CDATA[

				function Restart(argobj)
				{
					if(argobj.pid==null) return false;
					if(g_oSlide==null) return false;
					OpenSlideById(g_oSlide.getAttribute("id"));
					return true;
				}
				]]>
</method>
<method type="nav_013_restart" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "disabled":	g_vPropertyValue = oCurObj.getAttribute("state")=="disabled" ? "1" : "0";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="nav_010_slidename" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					var sTargetId = argobj.pid;
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_010_slidename", sTargetId);
					return true;
				}
				]]>
</method>
<method type="nav_010_slidename" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					if(document.getElementById(oEvtHandler.sTargetId)==null) return false;
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							document.getElementById(oEvtHandler.sTargetId + "_SlideName").innerHTML = g_oSlide!=null ? g_oSlide.getAttribute("name") : "";
							break;
						default: break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_010_slidename" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "slidename":	g_vPropertyValue = g_oSlide!=null ? g_oSlide.getAttribute("name") : "";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="002_textbox" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oObj = GetObjectById(argobj.pid);
					if(oObj==null) return null;
					var sScroll = oParams.selectSingleNode("overflow").text;
					var sW = oObj.getAttribute("w");
					var sH = oObj.getAttribute("h");
					var sPadding = oParams.selectSingleNode("textbox_margin").text;
					var iHeight = parseInt(sH,10) - parseInt(sPadding,10)*2 - 26;
					var iWidth = parseInt(sW,10) - parseInt(sPadding,10)*2 - 26;
					oCurObj.style.width = sW + "px";
					oCurObj.style.width = sH + "px";
					oCurObj.setAttribute("w",sW);
					oCurObj.setAttribute("h",sH);

					var oDiv = document.getElementById(argobj.pid+"_div");
					oDiv.style.height = iHeight.toString()+"px";
					oDiv.style.width = iWidth.toString()+"px";
					if(sScroll=="scroll-y" || sScroll=="scroll-x") {
						if(g_isMSIE) {
							oDiv.style.overflow = "";
							oDiv.style.overflowX = sScroll=="scroll-y" ? "hidden" : "scroll";
							oDiv.style.overflowY = sScroll=="scroll-y" ? "scroll" : "hidden";
						} else {
							if(g_isOpera) oDiv.style.overflow = "auto";
						}
					}
					var sStr = oDiv.innerHTML;
					var sRes = ReplaceMacrosInStr(sStr);
					if(sRes!=sStr)	oDiv.innerHTML = sRes;

					var bTW = oParams.selectSingleNode("typewriter").text=="yes" ? true : false;
					oCurObj.setAttribute("ready", bTW ? "0" : "1");
					if(!bTW) return true;
					CallMethod("002_textbox", "StartTypeWriter", argobj);
					return true;
				}
				]]>
</method>
<method type="002_textbox" name="StartTypeWriter">
<![CDATA[

                function StartTypeWriter(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oDiv = document.getElementById(argobj.pid+"_div");
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					oCurObj.setAttribute("ready","0");
					var sSpeed = oParams.selectSingleNode("typewriter_speed").text;
					var iSpeed = parseInt(sSpeed,10);
					if(isNaN(iSpeed)) iSpeed = 8;
					iSpeed = Math.round(1000/iSpeed);
					oCurObj.setAttribute("speed", iSpeed.toString());
					var sTxt = oDiv.innerHTML;
					var sNTxt = "";
					var bTagFlag = false;
					var bEntityFlag = false;
					var iCnt = 0;
					for(var i=0;i<sTxt.length;i++) {
						if(bTagFlag && sTxt.charAt(i)!=">") {
							sNTxt += sTxt.charAt(i);
							continue;
						}
						if(bEntityFlag && sTxt.charAt(i)!=";") {
							sNTxt += sTxt.charAt(i);
							continue;
						}
						switch(sTxt.charAt(i)) {
							case "<":
								sNTxt += "<";
								bTagFlag = true;
								break;
							case ">":
								sNTxt += ">";
								bTagFlag = false;
								break;
							case "&":
								sNTxt += "<span id='"+argobj.pid+"_i"+iCnt.toString()+"' style='visibility:hidden'>&";
								iCnt++;
								bEntityFlag = true;
								break;
							case ";":
								if(bEntityFlag) {
									bEntityFlag = false;
									sNTxt += ";</span>";
									break;
								}
							default:
								sNTxt += "<span id='"+argobj.pid+"_i"+iCnt.toString()+"' style='visibility:hidden'>"+sTxt.charAt(i)+"</span>";
								iCnt++;
						}
					}
					oDiv.innerHTML = sNTxt;
					oCurObj.setAttribute("cid","0");
					oCurObj.setAttribute("lid",iCnt.toString());
					CallMethod("002_textbox", "TypeChar", argobj);

 					return true;
				}
				]]>
</method>
<method type="002_textbox" name="ResizeObject">
<![CDATA[

                function ResizeObject(argobj)
                {
                    if(argobj.pid==null || argobj.newh==null || argobj.neww==null) return false;
					if(argobj.newh=="" || argobj.neww=="") return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var sW = oCurObj.getAttribute("w");
					var sH = oCurObj.getAttribute("h");
					var sPadding = oParams.selectSingleNode("textbox_margin").text;

					var sNewW = argobj.neww;
					sNewW = ReplacePropertiesInStr(sNewW);
					sNewW = ReplaceVariablesInStr(sNewW);
					sNewW = eval(sNewW);
					var sNewH = argobj.newh;
					sNewH = ReplacePropertiesInStr(sNewH);
					sNewH = ReplaceVariablesInStr(sNewH);
					sNewH = eval(sNewH);
					var iNewH = parseInt(sNewH,10);
					var iNewW = parseInt(sNewW,10);
					if(isNaN(iNewH) || isNaN(iNewW)) return false;
					if(iNewW<=0 || iNewH<=0) return false;
					if(argobj.how=="instant") {
						var iHeight = parseInt(sNewH,10) - parseInt(sPadding,10)*2 - 26;
						var iWidth = parseInt(sNewW,10) - parseInt(sPadding,10)*2 - 26;
						oCurObj.style.width = sNewW + "px";
						oCurObj.style.width = sNewH + "px";
						oCurObj.setAttribute("w",sNewW);
						oCurObj.setAttribute("h",sNewH);
						var oTable = document.getElementById(argobj.pid+"_tbl");
						oTable.style.width = sNewW + "px";
						oTable.style.width = sNewH + "px";
						var oDiv = document.getElementById(argobj.pid+"_div");
						oDiv.style.height = iHeight.toString()+"px";
						oDiv.style.width = iWidth.toString()+"px";
						FireEvent(argobj.pid,"onResizeObject");
						return true;
					} else {
						var sNum = argobj.num;
						sNum = ReplacePropertiesInStr(sNum);
						sNum = ReplaceVariablesInStr(sNum);
						sNum = eval(sNum);
						var iNum = parseInt(sNum,10);
						if(isNaN(iNum)) iNum = 10;
						var sDelay = argobj.delay;
						sDelay = ReplacePropertiesInStr(sDelay);
						sDelay = ReplaceVariablesInStr(sDelay);
						sDelay = eval(sDelay);
						var iDelay = parseInt(sDelay,10);
						if(isNaN(iDelay)) iDelay = 50;
						var iDifX = iNewW - parseInt(sW,10);
						var iDifY = iNewH - parseInt(sH,10);
						var iStepX = Math.round(iDifX/iNum);
						var iStepY = Math.round(iDifY/iNum);
						oCurObj.setAttribute("nw",iNewW.toString());
						oCurObj.setAttribute("nh",iNewH.toString());
						oCurObj.setAttribute("stepx",iStepX.toString());
						oCurObj.setAttribute("stepy",iStepY.toString());
						oCurObj.setAttribute("delay",iDelay.toString());
						oCurObj.setAttribute("stepnum",iNum.toString());
						oCurObj.setAttribute("curstep","1");
						oCurObj.setAttribute("pad",sPadding);
						oCurObj.setAttribute("brd",sBorder);
						CreateTimeActionMethod("002_textbox", "NewSize", null, iDelay, argobj);
					}
 					return true;
				}
				]]>
</method>
<method type="002_textbox" name="NewSize">
<![CDATA[

                function NewSize(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var iNW = parseInt(oCurObj.getAttribute("nw"),10);
					var iNH = parseInt(oCurObj.getAttribute("nh"),10);
					var iStepX = parseInt(oCurObj.getAttribute("stepx"),10);
					var iStepY = parseInt(oCurObj.getAttribute("stepy"),10);
					var iNum = parseInt(oCurObj.getAttribute("stepnum"),10);
					var iCurStep = parseInt(oCurObj.getAttribute("curstep"),10);
					var iDelay = parseInt(oCurObj.getAttribute("delay"),10);
					var iPadding = parseInt(oCurObj.getAttribute("pad"),10);
					var iCW = parseInt(oCurObj.getAttribute("w"),10);
					var iCH = parseInt(oCurObj.getAttribute("h"),10);
					iCurStep++;
					var iNewW = iCW + iStepX;
					var iNewH = iCH + iStepY;
					if((iNewH>iNH && iStepY>0) || (iNewH<iNH && iStepY<0) || iCurStep==iNum) iNewH = iNH;
					if((iNewW>iNW && iStepX>0) || (iNewW<iNW && iStepX<0) || iCurStep==iNum) iNewW = iNW;
					var sNewW = iNewW.toString();
					var sNewH = iNewH.toString();
					var iHeight = iNewH - iPadding*2 - 26;
					var iWidth = iNewW - iPadding*2 - 26;
					oCurObj.style.width = sNewW + "px";
					oCurObj.style.width = sNewH + "px";
					oCurObj.setAttribute("w",sNewW);
					oCurObj.setAttribute("h",sNewH);
					var oTable = document.getElementById(argobj.pid+"_tbl");
					oTable.style.width = sNewW + "px";
					oTable.style.width = sNewH + "px";
					var oDiv = document.getElementById(argobj.pid+"_div");
					oDiv.style.height = iHeight.toString()+"px";
					oDiv.style.width = iWidth.toString()+"px";
					if(iCurStep>=iNum) {
						FireEvent(argobj.pid,"onResizeObject");
						return true;
					} else {
						oCurObj.setAttribute("curstep", iCurStep.toString());
						CreateTimeActionMethod("002_textbox", "NewSize", null, iDelay, argobj);
					}
					return true;
				}
				]]>
</method>
<method type="002_textbox" name="CloseObject">
<![CDATA[

                function CloseObject(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					CloseObject(argobj.pid);
					FireEvent(argobj.pid,"onCloseObject");
 					return true;
				}
				]]>
</method>
<method type="002_textbox" name="RefreshText">
<![CDATA[

                function RefreshText(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(oCurObj.getAttribute("ready")=="0") return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oDiv = document.getElementById(argobj.pid+"_div");
					if(oDiv==null) return false;
					var sStr = oParams.selectSingleNode("textbox_text").text;
					var sRes = ReplaceMacrosInStr(sStr);
					if(sRes!=sStr)	oDiv.innerHTML = sRes;
					var bTW = oParams.selectSingleNode("typewriter").text=="yes" ? true : false;
					FireEvent(argobj.pid,"onRefresh");
					if(oCurObj==null) return false;
					oCurObj.setAttribute("ready", bTW ? "0" : "1");
					if(!bTW) return true;
					CallMethod("002_textbox", "StartTypeWriter", argobj);
 					return true;
				}
				]]>
</method>
<method type="002_textbox" name="TypeChar">
<![CDATA[

                function TypeChar(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null || oCurObj.style.display=="none") return false;
					var sCnt = oCurObj.getAttribute("cid");
					if(document.getElementById(argobj.pid+"_i"+sCnt)!=null) document.getElementById(argobj.pid+"_i"+sCnt).style.visibility = "visible";
					var iCnt = parseInt(sCnt,10);
					iCnt++;
					sCnt = iCnt.toString();
					if(oCurObj.getAttribute("lid")!=sCnt) {
						var iDelay = parseInt(oCurObj.getAttribute("speed"),10);
						oCurObj.setAttribute("cid",sCnt);
						CreateTimeActionMethod("002_textbox", "TypeChar", null, iDelay, argobj);
					} else {
						oCurObj.setAttribute("ready","1");
						FireEvent(argobj.pid,"onTypeWriterEnd");
					}
 					return true;
				}
				]]>
</method>
<method type="002_textbox" name="AddText">
<![CDATA[

                function AddText(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(oCurObj.getAttribute("ready")=="0") return false;
					var oDiv = document.getElementById(argobj.pid+"_div");
					if(oDiv==null) return false;
					var iLeft = 0;
					var iRight = 0;
					var sValue = argobj.value;
					sValue = ReplaceMacrosInStr(sValue);
					sValue = ReplacePropertiesInStr(sValue);
					sValue = ReplaceVariablesInStr(sValue);

					if(argobj.how=="p") {
						var aP = oCurObj.getElementsByTagName("p");
						if(aP.length==0) argobj.how = "break";
					}

					switch(argobj.how) {
						case "break":
						case "space":
							var sText = oDiv.innerHTML;
							var sDivider = argobj.how=="space" ? " " : "<br/>";
							var sBuffer = sText;
							iRight = sBuffer.length;
							if(argobj.where=="start") {
								while(sBuffer.charAt(0)=="<") {
									iLeft += sBuffer.indexOf(">")+1;
									sBuffer = sBuffer.substr(iLeft);
									if(sBuffer.length==0) return false;
								}
								var sLeft = sText.substring(0,iLeft);
								var sRight = sText.substr(iLeft);
								oDiv.innerHTML = sLeft + sValue + sDivider + sRight;
							} else {
								while(sBuffer.charAt(sBuffer.length-1)==">") {
									iRight = sBuffer.lastIndexOf("<");
									sBuffer = sBuffer.substring(0,iRight);
									if(sBuffer.length==0) return false;
								}
								var sLeft = sText.substring(0,iRight);
								var sRight = sText.substr(iRight);
								oDiv.innerHTML = sLeft + sDivider + sValue + sRight;
							}
							break;
						case "p":
							var oP = argobj.where=="end" ? aP[aP.length-1] : aP[0];
							var oClone = oP.cloneNode(true);
							var sText = oClone.innerHTML;
							var sBuffer = sText;
							while(sBuffer.charAt(0)=="<") {
								iLeft += sBuffer.indexOf(">")+1;
								sBuffer = sBuffer.substr(iLeft);
								if(sBuffer.length==0) return false;
							}
							iRight = sBuffer.length;
							while(sBuffer.charAt(sBuffer.length-1)==">") {
								iRight = sBuffer.lastIndexOf("<");
								sBuffer = sBuffer.substring(0,iRight);
								if(sBuffer.length==0) return false;
							}
							var sLeft = sText.substring(0,iLeft);
							var sRight = sText.substr(iLeft+sBuffer.length);
							oClone.innerHTML = sLeft + sValue + sRight;
							if(argobj.where=="end") {
								oDiv.appendChild(oClone);
							} else {
								oDiv.insertBefore(oClone, oP);
							}
							break;
						default: break;
					}
					FireEvent(argobj.pid,"onAddText");
 					return true;
				}
				]]>
</method>
<method type="media_003_video" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					oCurObj.setAttribute("destructor","Destructor");
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bAutoStart = oParams.selectSingleNode("video_autostart").text=="yes" ? true : false;
					var bURL = oParams.selectSingleNode("vURL").text=="yes" ? true : false;
					var sPlayer = oParams.selectSingleNode("player").text;
					var sPath = bURL ? oParams.selectSingleNode("video_url").text : oParams.selectSingleNode("video_uri").text;
					if(sPlayer=="auto") {
						if(sPath.indexOf(".mov")!=-1 || sPath.indexOf(".3gp")!=-1) {
							sPlayer = "qtp";
						} else {
							if(sPath.indexOf(".rm")!=-1 || sPath.indexOf(".ram")!=-1 || sPath.indexOf(".rpm")!=-1) {
								sPlayer = "rp";
							} else {
								sPlayer = "wmp";
							}
						}
					}
					var sUIMode = oParams.selectSingleNode("video_controls").text;
					if(sUIMode=="no") sUIMode = "none";
					var sURL = document.location.href;
					var iPtr = sURL.indexOf("?");
					if(iPtr!=-1) sURL = sURL.substr(0,iPtr);
					iPtr = sURL.lastIndexOf("/");
					sURL = sURL.substr(0,iPtr+1);
					var bEmbed = false;
					var bFF = false;
					var oPlayer;
					switch(sPlayer) {
						case "rp":
							var sPlayerID = g_isMSIE ? argobj.pid + "_rp" : argobj.pid + "_rpembed";
							oCurObj.setAttribute("control", g_isMSIE ? "rp" : "rpembed");
							oCurObj.setAttribute("pid", sPlayerID);
							oCurObj.setAttribute("plr", "rp");
							oCurObj.setAttribute("url", sURL+sPath);
							oCurObj.setAttribute("state", "playing");
							break;
						case "qtp":
							oPlayer = g_isMSIE ? document.getElementById(argobj.pid+"_qtp") : document.getElementById(argobj.pid+"_qtpembed");
							oPlayer.width = oCurObj.clientWidth;
							oPlayer.height = oCurObj.clientHeight;
							if(g_isMSIE) oPlayer.SetControllerVisible(sUIMode=="none" ? false : true);
							oCurObj.setAttribute("control", g_isMSIE ? "qtp" : "qtpembed");
							var sPlayerID = g_isMSIE ? argobj.pid + "_qtp" : argobj.pid + "_qtpembed";
							oCurObj.setAttribute("pid", sPlayerID);
							oCurObj.setAttribute("plr", "qt");
							oCurObj.setAttribute("url", sURL+sPath);
							oCurObj.setAttribute("state", bAutoStart ? "playing" : "stopped");
							if(bAutoStart) {
								FireEvent(argobj.pid,"onPlayStart");
								if(oCurObj==null) return false;
								FireEvent(argobj.pid,"onPlayBegin");
								if(oCurObj==null) return false;
							}
							oCurObj.setAttribute("pos", "0");
							var oArgs = new Object;
							oArgs.pid = argobj.pid;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 100, oArgs);
							break;
						case "wmp":
							if(navigator.userAgent.toLowerCase().indexOf("firefox")!=-1) {
								document.getElementById(argobj.pid+"_ffactivex").style.display = "block";
								oCurObj.setAttribute("control","wmpff");
								bFF = true;
							} else {
								document.getElementById(argobj.pid+"_activex").style.display = "block";
								if(!g_isMSIE && navigator.userAgent.toLowerCase().indexOf("netscape/7")==-1) {
									bEmbed = true;
									oCurObj.setAttribute("control","wmpembed");
								} else {
									oCurObj.setAttribute("control","wmpie");
								}
							}
							var sPlayerID = bFF ? argobj.pid+"_wmpff" : argobj.pid+"_wmpie";
							oCurObj.setAttribute("pid", sPlayerID);
							oCurObj.setAttribute("plr", "wm");
							if(!bEmbed) {
								var sText = "<script language='JavaScript' for='"+sPlayerID+"' event='playStateChange(sState)'>";
								sText += "var oArgs = new Object; oArgs.pid='"+argobj.pid+"'; oArgs.etype='PlayStateChange'; oArgs.eid=sState; CallMethod('media_003_video','EventDispatcher', oArgs);";
								sText += "</script>";
								oCurObj.innerHTML += sText;
								sText = "<script language='JavaScript' for='"+sPlayerID+"' event='mediaError(pMediaObject)'>";
								sText += "var oArgs = new Object; oArgs.pid='"+argobj.pid+"'; oArgs.etype='MediaError'; CallMethod('media_003_video','EventDispatcher', oArgs);";
								sText += "</script>";
								oCurObj.innerHTML += sText;
								sText = "<script language='JavaScript' for='"+sPlayerID+"' event='mediaChange(sItem)'>";
								sText += "var oArgs = new Object; oArgs.pid='"+argobj.pid+"'; oArgs.etype='MediaChange'; CallMethod('media_003_video','EventDispatcher', oArgs);";
								sText += "</script>";
								oCurObj.innerHTML += sText;
								sText = "<script language='JavaScript' for='"+sPlayerID+"' event='positionChange(sOldPos,sNewPos)'>";
								sText += "var oArgs = new Object; oArgs.pid='"+argobj.pid+"'; oArgs.etype='PositionChange'; CallMethod('media_003_video','EventDispatcher', oArgs);";
								sText += "</script>";
								oCurObj.innerHTML += sText;
							}
							var oArgs = new Object;
							oArgs.pid = argobj.pid;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 100, oArgs);
							return true;
						case "rp":
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="ReplaceMedia">
<![CDATA[

                function ReplaceMedia(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sPlayerID = oCurObj.getAttribute("pid");
					if(sPlayerID==null) return false;
					var oPlayer = document.getElementById(sPlayerID);
					if(oPlayer==null) return false;
					oPlayer.URL = argobj.URL;
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="TickTimer">
<![CDATA[

                function TickTimer(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sPlayerID = oCurObj.getAttribute("pid");
					if(sPlayerID==null) return false;
					var oPlayer = document.getElementById(sPlayerID);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "qt":
							var sStatus = oPlayer.GetPluginStatus();
							if(sStatus.toLowerCase()!="complete") {
								CreateTimeActionMethod("media_003_video", "TickTimer", null, 100, argobj);
								return true;
							}
							var iDuration = oPlayer.GetDuration();
							var sPos = oCurObj.getAttribute("pos");
							var sState = oCurObj.getAttribute("state");
							if(sState=="playing") 	FireEvent(argobj.pid,"onTickTimer");
							if(oCurObj==null) return false;
							var iTime = oPlayer.GetTime();
							var sTime = iTime.toString();
							oCurObj.setAttribute("pos", sTime);
							if(iTime==iDuration && sState!="stopped") {
								oCurObj.setAttribute("state","stopped");
								FireEvent(argobj.pid,"onChangePlayState");
								if(oCurObj==null) return false;
								FireEvent(argobj.pid,"onMediaEnded");
								if(oCurObj==null) return false;
								FireEvent(argobj.pid,"onPlayStop");
								return true;
							}
							if(sState=="playing") CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
							break;
						case "wm":
							var sState = oPlayer.playState;
							if(sState.toString()=="3") {
								CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
								FireEvent(argobj.pid,"onTickTimer");
							}
							break;
						default: break;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="SetProperty">
<![CDATA[

                function SetProperty(argobj)
                {
                    if(argobj.pid==null) return false;
					if(argobj.property==null || argobj.value==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sPlayerID = oCurObj.getAttribute("pid");
					if(sPlayerID==null) return false;
					var oPlayer = document.getElementById(sPlayerID);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "qt":
							switch(argobj.property) {
								case "mute": 	oPlayer.SetMute(!argobj.value=="false" ? true : false); 	break;
								case "volume":
									var iVolume = parseInt(argobj.value,10);
									if(isNaN(iVolume)) return false;
									iVolume = Math.round(iVolume*2.55);
									if(iVolume<=0) iVolume = 0;
									if(iVolume>255) iVolume = 255;
									oPlayer.SetVolume(iVolume);
									break;
								case "currentposition":
									var iPos = parseFloat(argobj.value);
									if(isNaN(iPos)) return false;
									var iDuration = oPlayer.GetDuration();
									var iScale = oPlayer.GetTimeScale();
									iPos = Math.floor(iPos*iScale);
									if(iPos>=iDuration) iPos = iDuration;
									if(iPos<=0) iPos = 0;
									oPlayer.SetTime(iPos);
									FireEvent(argobj.pid,"onPositionChange");
									break;
								default: break;
							}
							break;
						case "wm":
							var oControls = oPlayer.controls;
							var oMedia = oPlayer.currentMedia;
							var oSettings = oPlayer.settings;
							switch(argobj.property) {
								case "mute":	oControls.mute = !argobj.value=="false";	break;
								case "volume":
									var iVolume = parseInt(argobj.value,10);
									if(isNaN(iVolume)) return false;
									if(iVolume<0) iVolume = 0;
									if(iVolume>100) iVolume = 100;
									oControls.volume = iVolume;
									break;
								case "currentposition":
									var iCurPos = parseFloat(argobj.value);
									if(isNaN(iCurPos)) return false;
									oControls.currentPosition = iCurPos;
									break;
								default: break;
							}
							break;
						default: break;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="GetProperty">
<![CDATA[

                function GetProperty(argobj)
                {
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sPlayerID = oCurObj.getAttribute("pid");
					if(sPlayerID==null) return false;
					var oPlayer = document.getElementById(sPlayerID);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "qt":
							try {
								switch(argobj.property.toLowerCase()) {
									case "autostart":
										var bAS = oPlayer.GetAutoPlay();
										g_vPropertyValue = bAS ? "1" : "0";
										break;
									case "mute":
										var bMute = oPlayer.GetMute();
										g_vPropertyValue = bMute ? "1" : "0";
										break;
									case "volume":
										var iVolume = oPlayer.GetVolume();
										iVolume = Math.round(iVolume/255);
										g_vPropertyValue = iVolume;
										break;
									case "currentmedia":	g_vPropertyValue = oPlayer.GetMovieName(); 				break;
									case "duration":
										var iDuration = oPlayer.GetDuration();
										var iScale = oPlayer.GetTimeScale();
										g_vPropertyValue = Math.round(iDuration/iScale*10)/10;
										break;
									case "currentposition":
										var iTime = oPlayer.GetTime();
										var iScale = oPlayer.GetTimeScale();
										g_vPropertyValue = Math.round(iTime/iScale*10)/10;
										break;
									case "currentstate":
										var sState = oCurObj.getAttribute("state");
										if(sState!=null) {
											g_vPropertyValue = sState;
											return true;
										}
										g_vPropertyValue = oPlayer.GetPluginStatus();
										break;
									case "url":
										var sURL = oPlayer.GetURL();
										var reSlash = new RegExp(/\//g);
										sURL = sURL.replace(reSlash,"\\/");
										g_vPropertyValue = sURL;
										break;
									default: return true;
								}
							} catch(e) {}
							break;
						case "wm":
							var oControls = oPlayer.controls;
							var oMedia = oPlayer.currentMedia;
							var oSettings = oPlayer.settings;
							g_vPropertyValue = null;
							try {
								switch(argobj.property.toLowerCase()) {
									case "autostart":
										var bAS = oSettings.autoStart;
										g_vPropertyValue = bAS ? "1" : "0";
										break;
									case "mute":
										var bMute = oSettings.mute;
										g_vPropertyValue = bMute ? "1" : "0";
										break;
									case "volume": 			g_vPropertyValue = oSettings.volume; 					break;
									case "currentmedia": 	g_vPropertyValue = oMedia.name; 						break;
									case "duration":		g_vPropertyValue = oMedia.duration;						break;
									case "currentposition":
										var sPos = oControls.currentPosition;
										var iPos = parseFloat(sPos);
										var iPos = Math.round(iPos);
										g_vPropertyValue = iPos.toString();
										break;
									case "currentstate":
										var aPlayStates = new Array("undefined","stopped","paused","playing","forward","backward","buffering","waiting","ended","preparing","ready","reconnect");
										var sState = oPlayer.playState;
										if(sState==null) return false;
										var iState = parseInt(sState, 10);
										if(isNaN(iState)) return false;
										g_vPropertyValue = aPlayStates[iState];
										break;
									case "isonline":
										var bOnline = oPlayer.isOnline;
										g_vPropertyValue = bOnline ? "1" : "0";
										break;
									case "url":
										var sURL = oPlayer.URL;
										var reSlash = new RegExp(/\//g);
										sURL = sURL.replace(reSlash,"\\/");
										g_vPropertyValue = sURL;
										break;
									default: return true;
								}
							} catch(e) {}
							break;
						default: break;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="EventDispatcher">
<![CDATA[

                function EventDispatcher(argobj)
                {
					if(argobj.pid==null || argobj.etype==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.etype) {
						case "MediaChange":		FireEvent(argobj.pid,"onMediaChange"); return true;
						case "MediaError":		FireEvent(argobj.pid,"onMediaError"); return true;
						case "PositionChange":	FireEvent(argobj.pid,"onPositionChange"); return true;
						case "PlayStateChange":
							if(argobj.eid==null) return false;
							var sPrevState = oCurObj.getAttribute("playstate");
							oCurObj.setAttribute("playstate", argobj.eid.toString());
							FireEvent(argobj.pid,"onChangePlayState");
							switch(argobj.eid.toString()) {
								case "1":	FireEvent(argobj.pid,"onPlayStop");			break;
								case "2":	FireEvent(argobj.pid,"onPlayPause");		break;
								case "3":	FireEvent(argobj.pid,"onPlayStart");
											var oArgs = new Object;
											oArgs.pid = argobj.pid;
											CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, oArgs);
											if(sPrevState=="2") {
												FireEvent(argobj.pid,"onPlayResume");	break;
											} else {
												FireEvent(argobj.pid,"onPlayBegin");	break;
											}
								case "4":	FireEvent(argobj.pid,"onScanForward");		break;
								case "5":	FireEvent(argobj.pid,"onScanBackward");		break;
								case "6":	FireEvent(argobj.pid,"onStartBuffering");	break;
								case "7":	FireEvent(argobj.pid,"onWaitServer");		break;
								case "8":	FireEvent(argobj.pid,"onMediaEnded");		break;
								case "9":	FireEvent(argobj.pid,"onStartPreparing");	break;
								case "10":	FireEvent(argobj.pid,"onReadyToStart");		break;
								case "11":	FireEvent(argobj.pid,"onStartReconnect");	break;
								default: return true;
							}
							return true;
						default:	return true;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="PLAY">
<![CDATA[

                function Play(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sControl = oCurObj.getAttribute("control");
					if(sControl.indexOf("embed")!=-1) return false;
					var oPlayer = document.getElementById(argobj.pid+"_"+sControl);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "rp":
							if(oPlayer.CanPlay()) oPlayer.DoPlay();
							return true;
						case "qt":
							oPlayer.play();
							var sState = oCurObj.getAttribute("state");
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
							oCurObj.setAttribute("state","playing");
							FireEvent(argobj.pid,"onPlayStart");
							if(oCurObj==null) return false;
							FireEvent(argobj.pid, sState=="paused" ? "onPlayResume" : "onPlayBegin");
							return true;
						case "wm": 	oPlayer.controls.play(); 	return true;
						default: 	return true;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="STOP">
<![CDATA[

                function Stop(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sControl = oCurObj.getAttribute("control");
					if(sControl.indexOf("embed")!=-1) return false;
					var oPlayer = document.getElementById(argobj.pid+"_"+sControl);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "rp":
							if(oPlayer.CanStop()) oPlayer.DoStop();
							return true;
						case "qt":
							oPlayer.stop();
							oPlayer.SetTime(0);
							oCurObj.setAttribute("state","stopped");
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
							FireEvent(argobj.pid,"onPlayStop");
							return true;
						case "wm": 	oPlayer.controls.stop(); 	return true;
						default: 	return true;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="PAUSE">
<![CDATA[

                function Pause(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sControl = oCurObj.getAttribute("control");
					if(sControl.indexOf("embed")!=-1) return false;
					var oPlayer = document.getElementById(argobj.pid+"_"+sControl);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "rp":
							if(oPlayer.CanPause()) oPlayer.DoPause();
							return true;
						case "qt":
							oPlayer.stop();
							oCurObj.setAttribute("state","paused");
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
							FireEvent(argobj.pid,"onPlayPause");
							return true;
						case "wm": 	oPlayer.controls.pause(); 		return true;
						default: 	return true;
					}
					return true;
				}
				]]>
</method>
<method type="media_003_video" name="Destructor">
<![CDATA[

                function Destructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sControl = oCurObj.getAttribute("control");
					//if(sControl.indexOf("embed")!=-1) return false;
					var oPlayer = document.getElementById(argobj.pid+"_"+sControl);
					if(oPlayer==null) return false;
					var sType = oCurObj.getAttribute("plr");
					if(sType==null) return false;
					switch(sType) {
						case "rp":
							if(oPlayer.CanStop()) oPlayer.DoStop();
							return true;
						case "qt":
							oPlayer.stop();
							oPlayer.SetTime(0);
							oCurObj.setAttribute("state","stopped");
							FireEvent(argobj.pid,"onChangePlayState");
							if(oCurObj==null) return false;
							CreateTimeActionMethod("media_003_video", "TickTimer", null, 999, argobj);
							FireEvent(argobj.pid,"onPlayStop");
							return true;
						case "wm": 	oPlayer.controls.stop(); 	return true;
						default: 	return true;
					}
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_q_workarea")==null || document.getElementById(argobj.pid+"_q_choiceitem")==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aoVars = oParams.selectNodes("q_variants/item");
					var bRecur = oParams.selectSingleNode("q_secondrun").text=="yes" ? true : false;
					var bCredit = oParams.selectSingleNode("q_scored").text=="yes" ? true : false;
					var bTimer = oParams.selectSingleNode("q_timer_switch").text=="yes" ? true : false;
					var bShuffle = oParams.selectSingleNode("q_shuffle").text=="yes" ? true : false;
					var bAutoAttempts = oParams.selectSingleNode("q_att_auto").text=="yes" ? true : false;
					var sAttempts = oParams.selectSingleNode("q_attempts").text;
					var iAttempts = parseInt(sAttempts,10);
					if(bAutoAttempts) {
						if(aoVars.length>1) {
							iAttempts = aoVars.length - 1;
						} else {
							iAttempts = 1;
						}
						sAttempts = iAttempts.toString();
					}
					var sAttLeft = sAttempts;
					var sMode = "init";
					var oArgs = new Object;	oArgs.pid = argobj.pid;
					var sTmp = "";
					var sOrder = "";

					// Detecting current question mode from interaction
					var oInteraction = GetInteraction(argobj.pid);
					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sDate = iDate.toString();
					if(oInteraction!=null) {
						var sIntLatency = GetInteractionParam(argobj.pid, "latency");
						var sIntTimestamp = GetInteractionParam(argobj.pid, "timestamp");
						if(sIntTimestamp!=null && sIntLatency==null) sMode = "continue";
						if(sIntTimestamp!=null && sIntLatency!=null) sMode = "browse";
						if(sMode=="browse" && bRecur) {
							if(confirm(oParams.selectSingleNode("q_secondrun_confirm").text)) {
								sMode = "init";
								var aObjectives = oParams.selectNodes("q_scoreboards/item/qboard");
								for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", "0");
							}
						} else {
							if(sMode=="browse") alert(oParams.selectSingleNode("q_browse_alert").text);
							if(sMode=="continue") alert(oParams.selectSingleNode("q_continue_alert").text);
						}
					}

					// Obtaining parameters
					if(sMode!="init") {
						var sDate = ConvertDateFromISO8601(sIntTimestamp);
						var sDesc = GetInteractionParam(argobj.pid, "description");
						var aDesc = sDesc.split("[,]");
						var aAtt = aDesc[0].split("/");
						sAttLeft = aAtt[0];
						sOrder = aDesc[1];
					}

					// Set basic params
					if(sMode=="init") {
						oInteraction = ReturnInteraction(argobj.pid,true);
						oCurObj.setAttribute("begin", sDate);
						SetInteractionParam(argobj.pid, "type", "multiple_choice");
					}

					// Set runtime params
					oCurObj.setAttribute("q_scored", bCredit ? "1" : "0");
					oCurObj.setAttribute("q_begin", sDate);
					oCurObj.setAttribute("q_state", "na");
					oCurObj.setAttribute("q_reason","na");
					oCurObj.setAttribute("q_result","na");
					oCurObj.setAttribute("q_maxattempts", sAttempts);
					oCurObj.setAttribute("q_attemptslast", sAttLeft);
					oCurObj.setAttribute("q_varlength", aoVars.length);
					oCurObj.setAttribute("q_varselected", "");
					oCurObj.setAttribute("mode", sMode=="browse" ? "review" : "normal");

					// View
					if(oParams.selectSingleNode("q_credit_msg")!=null) {
						// Compatibility check for previous versions parameters
						var sCreditMsg = bCredit ? oParams.selectSingleNode("q_credit_msg").text : oParams.selectSingleNode("q_nocredit_msg").text
						document.getElementById(argobj.pid+"_q_creditcontainer").innerHTML = sCreditMsg;
					}
					document.getElementById(argobj.pid+"_q_text").innerHTML = oParams.selectSingleNode("q_question").text;
					document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAttLeft;
					if(bShuffle) {
						if(sMode=="init") {
							var aShuffled = new Array();
							for(var i=0;i<aoVars.length;i++) aShuffled[i] = ThrowDice(aoVars.length, false, aShuffled, 100);
						} else {
							var aShuffled = sOrder.split("~");
						}
					}
					var oNode;
					var aCorrects = new Array();
					var bResponse = false;
					if(sMode!="init") {
						var sResponse = GetInteractionParam(argobj.pid, "learner_response");
						if(sResponse!=null) {
							bResponse = true;
							var iResponse = parseInt(sResponse,10);
						}
					}
					var aOrder = new Array();
					oArgs.enabled = true;
					oArgs.checked = false;
					oArgs.qtype = "choice";
					for(var i=0;i<aoVars.length;i++) {
						oArgs.inum = bShuffle ? aShuffled[i] : i;
						aOrder.push(oArgs.inum);
						oNode = aoVars[oArgs.inum].selectSingleNode("q_right");
						if(oNode.text=="yes") aCorrects.push(oArgs.inum);
						CallMethod("q_001_choice", "AppendItem", oArgs);
					}
					sOrder = aOrder.join("~");
					if(sMode!="init") {
						oArgs.btn = "skip";
						CallMethod("q_001_choice", "HideButton", oArgs);
						if(bResponse) {
							oArgs.inum = iResponse;
							CallMethod("q_001_choice", "CheckItem", oArgs);
						}
						if(sMode=="browse") {
							CallMethod("q_001_choice", "DisableItems", oArgs);
							oArgs.msg = "_last";
							CallMethod("q_001_choice", "DisplayMessage", oArgs);
						}
					} else {
						if(aCorrects.length>0) SetInteractionArrayItem(argobj.pid, "correct_responses", aCorrects.join("[,]"));
					}

					// Set timer
					if(bTimer) {
						var sTimerValue = oParams.selectSingleNode("q_timer").text;
						if(sTimerValue==null || isNaN(parseInt(sTimerValue,10))) {
							bTimer = false;
						} else {
							if(sMode=="init") {
								SetInteractionParam(argobj.pid, "description", sAttLeft+"/"+sAttempts+"[,]"+sOrder+"[,]"+sTimerValue+"/"+sTimerValue);
								oCurObj.setAttribute("q_timer", sTimerValue);
								oCurObj.setAttribute("q_timer_total", sTimerValue);
								oCurObj.setAttribute("q_timer_active", "1");
								CreateTimeActionMethod("q_001_choice", "TickTimer", null, 1000, oArgs);
							} else {
								var aTimer = aDesc[2].split("/");
								var sTimerRestore = aTimer[0];
								if(sTimerRestore==null) sTimerRestore = sTimerValue;
								oCurObj.setAttribute("q_timer_active", "1");
								oCurObj.setAttribute("q_timer", sTimerRestore);
								oCurObj.setAttribute("q_timer_total", sTimerValue);

								oArgs.restore = "1";
								CallMethod("q_001_choice", "TickTimer", oArgs);
								oArgs.restore = null;
								if(sMode!="browse") {
									if(sTimerRestore!="0")	CreateTimeActionMethod("q_001_choice", "TickTimer", null, 1000, oArgs);
								}
							}
						}
					} else {
						SetInteractionParam(argobj.pid, "description", sAttLeft+"/"+sAttempts+"[,]"+sOrder);
					}

					FireEvent(argobj.pid,"onQuestionDisplay");
					if(document.getElementById(argobj.pid)==null) return false;

					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="DisplayMessage">
<![CDATA[

				function DisplayMessage(argobj)
				{
					if(argobj.pid==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oMsgElem = document.getElementById(argobj.pid+"_q_objective");
					if(oMsgElem==null) return false;
					var sPath = argobj.msg==null ? "" : argobj.msg;
					var oNode = oParams.selectSingleNode("q_goal"+sPath);
					if(oNode==null) return false;
					var sMsg = oNode.text;
					oMsgElem.innerHTML = sMsg;
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="DisplayButton">
<![CDATA[

				function DisplayButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = g_isMSIE ? "inline" : "block";
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="HideButton">
<![CDATA[

				function HideButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = "none";
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="CheckItem">
<![CDATA[

				function CheckItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oSpot = document.getElementById(argobj.pid+"_spot_"+argobj.inum);
					var oCheck = document.getElementById(argobj.pid+"_check_"+argobj.inum);
					if(oSpot.getAttribute("state")=="1") return false;
					oSpot.style.display = "none";
					oSpot.setAttribute("state","1");
					oSpot.setAttribute("q_varselected", argobj.inum);
					oCheck.style.display = g_isMSIE ? "inline" : "block";
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="UncheckItem">
<![CDATA[

				function UncheckItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oSpot = document.getElementById(argobj.pid+"_spot_"+argobj.inum);
					var oCheck = document.getElementById(argobj.pid+"_check_"+argobj.inum);
					if(oSpot.getAttribute("state")!="1") return false;
					oCheck.style.display = "none";
					oSpot.style.display = g_isMSIE ? "inline" : "block";
					oSpot.setAttribute("state","0");
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="AppendItem">
<![CDATA[

				function AppendItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null) return false;
					var oMain = document.getElementById(argobj.pid+"_q_workarea");
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var aoVars = oParams.selectNodes("q_variants/item");
					var sType = "choice";
					var oTmpl = document.getElementById(argobj.pid+"_q_"+sType+"item");
					var oClone = oTmpl.cloneNode(true);
						oClone.style.display = g_isMSIE ? "inline" : "block";
					var aTags = oClone.getElementsByTagName("td");
						aTags[1].innerHTML = aoVars[argobj.inum].selectSingleNode("q_variant").text;
					aTags = oClone.getElementsByTagName("img");
					var oSpot = aTags[0];
						if(argobj.checked) {
							oSpot.setAttribute("state", "1");
							oSpot.style.display = "none";
						} else {
							oSpot.style.display = g_isMSIE ? "inline" : "block";
							oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
							oSpot.setAttribute("state", argobj.checked ? "1" : "0");
						}
						oSpot.setAttribute("enabled", argobj.enabled ? "1" : "0");
						oSpot.setAttribute("idle", argobj.pid+"_q_"+sType+"spot_0");
						oSpot.setAttribute("alter", argobj.pid+"_q_"+sType+"spot_2");
						oSpot.setAttribute("id", argobj.pid+"_spot_"+argobj.inum.toString());
						oSpot.setAttribute("spotid", argobj.inum.toString());
					oSpot = aTags[1];
						oSpot.setAttribute("id", argobj.pid+"_check_"+argobj.inum.toString());
						oSpot.setAttribute("spotid", argobj.inum.toString());
						if(argobj.checked) 	{
							oSpot.style.display = g_isMSIE ? "inline" : "block";
						} else {
							oSpot.style.display = "none";
						}
					oMain.appendChild(oClone);
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="DisableItems">
<![CDATA[

				function DisableItems(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sVarLength = oCurObj.getAttribute("q_varlength");
					var iVarLength = parseInt(sVarLength,10);
					var oSpot;
					for(var i=0;i<iVarLength;i++) {
						oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
						oSpot.style.cursor = "default";
						oSpot.setAttribute("enabled","0");
					}
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="EnableItems">
<![CDATA[

				function EnableItems(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sVarLength = oCurObj.getAttribute("q_varlength");
					var iVarLength = parseInt(sVarLength,10);
					var oSpot;
					for(var i=0;i<iVarLength;i++) {
						oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
						oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
						oSpot.setAttribute("enabled","1");
					}
					return true;
                }
                ]]>
</method>
<method type="q_001_choice" name="HandleClick">
<![CDATA[

				function HandleClick(argobj)
				{
                    if(argobj.pid==null || argobj.oid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oSpot = document.getElementById(argobj.oid);
					if(oSpot.getAttribute("enabled")=="0" || oSpot.getAttribute("state")=="1") return false;
					if(oSpot.getAttribute("state")==null || oSpot.getAttribute("alter")==null || oSpot.getAttribute("idle")==null) return false;
					if(document.getElementById(oSpot.getAttribute("alter"))==null || document.getElementById(oSpot.getAttribute("idle"))==null) return false;
					var iVars = parseInt(oCurObj.getAttribute("q_varlength"));
					if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
					var oVar, oCheck;
					for(var i=0;i<iVars;i++) {
						oVar = document.getElementById(argobj.pid+"_spot_"+i.toString());
						oCheck = document.getElementById(argobj.pid+"_check_"+i.toString());
						if(oVar!=oSpot) {
							oVar.style.display = g_isMSIE ? "inline" : "block";
							oCheck.style.display = "none";
							oVar.setAttribute("state","0");
						} else {
							oCheck.style.display = g_isMSIE ? "inline" : "block";
							oVar.style.display = "none";
							oVar.setAttribute("state","1");
							oCurObj.setAttribute("q_varselected", i.toString());
						}
					}
					if(argobj.nobtn!="1") {
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						oArgs.btn = "check";
						CallMethod("q_001_choice", "DisplayButton", oArgs);
					}
					FireEvent(argobj.pid,"onChangeChoice");
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="CountAttempts">
<![CDATA[

				function CountAttempts(argobj)
				{
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid+"_q_attempts_count")==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var iAtt = parseInt(sAtt,10);
					if(iAtt>0) {
						iAtt--;
						sAtt = iAtt.toString();
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAtt;
						oCurObj.setAttribute("q_attemptslast", sAtt);
					} else {
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = "0";
						oCurObj.setAttribute("q_attemptslast", "0");
					}
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="EvalAnswer">
<![CDATA[

				function EvalAnswer(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var sReason = argobj.reason;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					var bEval = true;
					var bCorrect = false;

					if(sReason=="skip") {
						CallMethod("q_001_choice", "DisableItems", oArgs);
						oCurObj.setAttribute("q_timer_active", "0");
						CallMethod("q_001_choice", "TickTimer", oArgs);
						document.getElementById(argobj.pid+"_q_workarea").style.visibility = "hidden";
						oArgs.msg = "_skip";
						CallMethod("q_001_choice", "DisplayMessage", oArgs);
						FireEvent(argobj.pid,"onSkipQuestion");
						if(document.getElementById(argobj.pid)==null) return false;
						return true;
					}
					if(sReason=="fail") {
						CallMethod("q_001_choice", "DisableItems", oArgs);
						oArgs.msg = "_failed";
						CallMethod("q_001_choice", "DisplayMessage", oArgs);
						bCorrect = false;
						bEval = false;
					}
					if(bEval) {
						var oNode = oParams.selectSingleNode("q_fb_switch");
						var bFB = oNode.text=="yes" ? true : false;
						oNode = oParams.selectSingleNode("q_showright");
						var bShowRight = oNode.text=="yes" ? true : false;
						var sVarLength = oCurObj.getAttribute("q_varlength");
						var iVarLength = parseInt(sVarLength,10);
						var oSpot;
						var bResponse = false;
						var aResponses = new Array();
						oArgs.btn = "check";
						CallMethod("q_001_choice", "HideButton", oArgs);

						for(var i=0;i<iVarLength;i++) {
							oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
							if(oSpot.getAttribute("state")=="1") {
								bResponse = true;
								aResponses.push(i.toString());
							}
						}

						if(sReason!="timeout" && !bResponse) return false;
						var aCorrects = GetInteractionArray(argobj.pid, "correct_responses");
						if(aCorrects==null) return false;
						if(aCorrects.length==0) return false;
						bCorrect = false;
						if(bResponse) {
							var sResponse = aResponses.join("[,]");
							SetInteractionParam(argobj.pid, "learner_response", sResponse);
							for(var i=0;i<aCorrects.length;i++) {
								if(aCorrects[i]==sResponse) {
									bCorrect = true;
									break;
								}
							}
						}

						CallMethod("q_001_choice", "CountAttempts", argobj);

						FireEvent(argobj.pid,"onAttempt");
						if(document.getElementById(argobj.pid)==null) return false;
					}
					var bCredit = oCurObj.getAttribute("q_scored")=="0" ? false : true;
					var sAttMax = oCurObj.getAttribute("q_maxattempts");
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var iAtt = parseInt(sAtt,10);
					var aObjectives = oParams.selectNodes("q_scoreboards/item/q_board");

					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sBegin = oCurObj.getAttribute("q_begin");
					var iBegin = parseInt(sBegin,10);

					if(bCorrect) {

						if(sReason=="timeout") FireEvent(argobj.pid,"onTimeout");
						if(document.getElementById(argobj.pid)==null) return false;
						FireEvent(argobj.pid,"onSuccess");
						if(document.getElementById(argobj.pid)==null) return false;

						if(sReason!="timeout") {
							oCurObj.setAttribute("q_timer_active", "0");
							CallMethod("q_001_choice", "TickTimer", oArgs);
						}

						CallMethod("q_001_choice", "DisableItems", oArgs);
						if(bFB) {
							oArgs.fbtype = "right";
							CallMethod("q_001_choice", "DisplayFeedback", oArgs);
						}
						if(bCredit) {
							var sWeight = oParams.selectSingleNode("q_weight").text;
							var bRegress = oParams.selectSingleNode("q_pointset_auto").text=="yes" ? true : false;
							var iScore = 0;
							var sScore = "";
							if(bRegress) {
								var iWeight = parseFloat(sWeight);
								iWeight = iWeight*(iAtt+1);
								sScore = FormatReal_10_7(iWeight);
							} else {
								sScore = FormatReal_10_7(sWeight);
							}
							for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", sScore);
							SetInteractionParam(argobj.pid, "weighting", sScore);
						}
						SetInteractionParam(argobj.pid, "result", "correct");
						var iLatency = iDate - iBegin;
						var sLatency = ConvertPeriodToISO8601(iLatency);
						SetInteractionParam(argobj.pid, "latency", sLatency);
						var sTmp = GetInteractionParam(argobj.pid, "description");
						var aDesc = sTmp.split("[,]");
						var aAtt = aDesc[0].split("/");
						aAtt[0] = sAtt;
						aDesc[0] = aAtt.join("/");
						SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));

						FireEvent(argobj.pid,"onQuestionEnd");
						if(document.getElementById(argobj.pid)==null) return false;

					} else {

						var sTmp = GetInteractionParam(argobj.pid, "description");
						var aDesc = sTmp.split("[,]");
						var aAtt = aDesc[0].split("/");
						aAtt[0] = sAtt;
						aDesc[0] = aAtt.join("/");
						SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));

						if(iAtt>0 && sReason!="timeout" && bEval) {

							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;
							if(bFB) {
								oArgs.fbtype = "wrong";
								CallMethod("q_001_choice", "DisplayFeedback", oArgs);
							}

						} else {

							FireEvent(argobj.pid, sReason=="timeout" ? "onTimeout" : "onAttemptsLimit");
							if(document.getElementById(argobj.pid)==null) return false;
							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;

							if(sReason!="timeout") {
								oCurObj.setAttribute("q_timer_active", "0");
								CallMethod("q_001_choice", "TickTimer", oArgs);
							}

							if(bShowRight) {
								var sRight = aCorrects[0];
								for(var i=0;i<iVarLength;i++) {
									if(i.toString()==sRight) {
										oArgs.oid = argobj.pid+"_spot_"+i.toString();
										oArgs.nobtn = "1";
										CallMethod("q_001_choice", "HandleClick", oArgs);
										break;
									}
								}
								oArgs.msg = "_right";
								CallMethod("q_001_choice", "DisplayMessage", oArgs);
							}

							CallMethod("q_001_choice", "DisableItems", oArgs);
							if(bFB && sReason!="fail") {
								oArgs.fbtype = sReason=="timeout" ? "timeout" : "exhausted";
								CallMethod("q_001_choice", "DisplayFeedback", oArgs);
							}

							if(bCredit) {
								for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", "0");
								SetInteractionParam(argobj.pid, "weighting", "0");
							}
							SetInteractionParam(argobj.pid, "result", "incorrect");

							var iLatency = iDate - iBegin;
							var sLatency = ConvertPeriodToISO8601(iLatency);
							SetInteractionParam(argobj.pid, "latency", sLatency);

							FireEvent(argobj.pid,"onQuestionEnd");
							if(document.getElementById(argobj.pid)==null) return false;

						}
					}

					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="DisplayFeedback">
<![CDATA[

				function DisplayFeedback(argobj)
				{
                    if(argobj.pid==null || argobj.fbtype==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oNode = oParams.selectSingleNode("q_fb_switch");
					if(oNode.text!="yes") return false;
					oNode = oParams.selectSingleNode("q_feedback"+argobj.fbtype);
					if(oNode==null) return false;
					var sText = oNode.text;
					document.getElementById(argobj.pid+"_q_fb_text").innerHTML = sText;
					document.getElementById(argobj.pid+"_q_fb_template").style.backgroundColor = argobj.fbtype=="right" ? "#E0FFE0" : "#FFE0E0";
					document.getElementById(argobj.pid+"_q_fb_template").style.borderColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_closebutton").style.backgroundColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_template").style.display = g_isMSIE ? "inline" : "block";
					if(oParams.selectSingleNode("q_fb_timerswitch").text=="yes") {
						var sFBTimer = oParams.selectSingleNode("q_fb_timer").text;
						var iFBTimer = parseFloat(sFBTimer);
						if(isNaN(iFBTimer)) return true;
						if(iFBTimer<1) iFBTimer = 1;
						iFBTimer = Math.floor(iFBTimer * 1000);
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						CreateTimeActionMethod("q_001_choice", "HideFeedback", null, iFBTimer, oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="HideFeedback">
<![CDATA[

				function HideFeedback(argobj)
				{
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
					document.getElementById(argobj.pid+"_q_fb_template").style.display = "none";
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="SkipQuestion">
<![CDATA[

				function SkipQuestion(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
					var oNode = oParams.selectSingleNode("q_skip");
					if(oNode==null) return false;
					if(oNode.text!="yes") return false;
					var bFail = false;
					oNode = oParams.selectSingleNode("q_skipper2");
					if(oNode!=null) bFail = oNode.text=="yes" ? true : false;
					if(bFail) {
						oNode = oParams.selectSingleNode("q_skip_confirm");
						if(confirm(oNode.text)) {
							oArgs.btn = "skip";
							CallMethod("q_001_choice", "HideButton", oArgs);
							oArgs.reason = "fail";
							CallMethod("q_001_choice","EvalAnswer",oArgs);
						} else return false;
					} else {
						oArgs.btn = "skip";
						CallMethod("q_001_choice", "HideButton", oArgs);
						oArgs.reason = "skip";
						CallMethod("q_001_choice","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="TickTimer">
<![CDATA[

				function TickTimer(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_q_timer_progress")==null || document.getElementById(argobj.pid+"_q_timer_value")==null || document.getElementById(argobj.pid+"_q_timer_bg")==null) return false;
					var sActive = oCurObj.getAttribute("q_timer_active");
					if(sActive=="0") return false;

					var sTick = oCurObj.getAttribute("q_timer");
					if(sTick==null) return false;
					var iTick = parseInt(sTick,10);
					if(isNaN(iTick)) return false;
					var sTotal = oCurObj.getAttribute("q_timer_total");
					if(sTotal==null) return false;
					var iTotal = parseInt(sTotal,10);
					if(isNaN(iTotal)) return false;
					if(iTick>iTotal) return false;
					if(argobj.restore==null) iTick--;
					sTick = iTick.toString();
					document.getElementById(argobj.pid+"_q_timer_value").innerHTML = sTick+" sec";
					oCurObj.setAttribute("q_timer",sTick);
					var iCurT = Math.round(iTick/iTotal*100);
					var sColor = "#00CC66";
					if(iCurT<30) {
						if(iCurT<15) {
							sColor = "#FF0000";
						} else {
							sColor = "#FFCC66";
						}
					}
					var iW = Math.round((100-iCurT)*2);
					if(iW<=0) iW = 1;
					if(iW>0) {
						document.getElementById(argobj.pid+"_q_timer_progress").style.width = iW.toString()+"px";
						document.getElementById(argobj.pid+"_q_timer_bg").style.backgroundColor = sColor;
					}
					if(argobj.restore!=null) return true;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;

					var sTmp = GetInteractionParam(argobj.pid, "description");
					var aDesc = sTmp.split("[,]");
					var aTimer = aDesc[2].split("/");
					aTimer[0] = sTick;
					aDesc[2] = aTimer.join("/");
					SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));

					if(iTick>0) {
						CreateTimeActionMethod("q_001_choice", "TickTimer", null, 1000, oArgs);
					} else {
						oArgs.reason = "timeout";
						oCurObj.setAttribute("q_timer_active","0");
						CallMethod("q_001_choice","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_001_choice" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "questionmode":			g_vPropertyValue = oCurObj.getAttribute("mode")=="review" ? "review" : "normal";			break;
						case "questiontype":			g_vPropertyValue = "choice"; 	break;
						case "questionduration":		g_vPropertyValue = oCurObj.getAttribute("q_timer_total")!=null ? oCurObj.getAttribute("q_timer_total") : ""; 	break;
						case "questiontimer":			g_vPropertyValue = oCurObj.getAttribute("q_timer")!=null ? oCurObj.getAttribute("q_timer") : ""; 	break;
						case "itemquantity":			g_vPropertyValue = oCurObj.getAttribute("q_varlength")!=null ? oCurObj.getAttribute("q_varlength") : ""; 	break;
						case "questionvalue":
							var iQty = parseInt(oCurObj.getAttribute("q_varlength"),10);
							var aResult = new Array();
							var oSpot;
							for(var i=0;i<iQty;i++) {
								oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
								aResult.push(oSpot.getAttribute("state"));
							}
							g_vPropertyValue = aResult.join("~");
							break;
						case "attemptslast":			g_vPropertyValue = oCurObj.getAttribute("q_attemptslast")!=null ? oCurObj.getAttribute("q_attemptslast") : ""; 	break;
						case "attemptstotal":			g_vPropertyValue = oCurObj.getAttribute("q_maxattempts")!=null ? oCurObj.getAttribute("q_maxattempts") : ""; 	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_q_workarea")==null || document.getElementById(argobj.pid+"_q_textitem")==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aoVars = oParams.selectNodes("q_variants/item");
					var bMulti = aoVars.length>1 ? true : false;
					var bRecur = oParams.selectSingleNode("q_secondrun").text=="yes" ? true : false;
					var bCredit = oParams.selectSingleNode("q_scored").text=="yes" ? true : false;
					var bTimer = oParams.selectSingleNode("q_timer_switch").text=="yes" ? true : false;
					var bShuffle = false;
					var sAttempts = oParams.selectSingleNode("q_attempts").text;
					var iAttempts = parseInt(sAttempts,10);
					var sAttLeft = sAttempts;
					var sMode = "init";
					var oArgs = new Object;	oArgs.pid = argobj.pid;
					var sTmp = "";
					var sOrder = "";

					// Detecting current question mode from interaction
					var oInteraction = GetInteraction(argobj.pid);
					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sDate = iDate.toString();
					if(oInteraction!=null) {
						var sIntLatency = GetInteractionParam(argobj.pid, "latency");
						var sIntTimestamp = GetInteractionParam(argobj.pid, "timestamp");
						if(sIntTimestamp!=null && sIntLatency==null) sMode = "continue";
						if(sIntTimestamp!=null && sIntLatency!=null) sMode = "browse";
						if(sMode=="browse" && bRecur) {
							if(confirm(oParams.selectSingleNode("q_secondrun_confirm").text)) {
								sMode = "init";
								var aObjectives = oParams.selectNodes("q_scoreboards/item/qboard");
								for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", "0");
							}
						} else {
							if(sMode=="browse") alert(oParams.selectSingleNode("q_browse_alert").text);
							if(sMode=="continue") alert(oParams.selectSingleNode("q_continue_alert").text);
						}
					}

					// Obtaining parameters

					if(sMode!="init") {
						var sDate = ConvertDateFromISO8601(sIntTimestamp);
						var sDesc = GetInteractionParam(argobj.pid, "description");
						var aDesc = sDesc.split("[,]");
						var aAtt = aDesc[0].split("/");
						sAttLeft = aAtt[0];
						sOrder = aDesc[1];

						var aResponses = new Array();
						if(bMulti) {
							for(var i=0;i<aoVars.length;i++) {
								aResponses[i] = GetInteractionParam(argobj.pid+"_"+i.toString(), "learner_response");
								if(aResponses[i]==null) aResponses[i] = "";
							}
						} else {
							aResponses[0] = GetInteractionParam(argobj.pid, "learner_response");
						}
						bResponse = true;
					}

					// Set basic params
					if(sMode=="init") {
						oInteraction = ReturnInteraction(argobj.pid,true);
						oCurObj.setAttribute("begin", sDate);
						SetInteractionParam(argobj.pid, "type", "fill_in");
						if(bMulti) {
							for(var i=0;i<aoVars.length;i++) {
								oInteraction = ReturnInteraction(argobj.pid+"_"+i.toString(),true);
								SetInteractionParam(argobj.pid, "type", "fill_in");
							}
						}
						CallMethod("q_005_text", "RecordCorrectAnswers", oArgs);
					}

					// Set runtime params
					oCurObj.setAttribute("q_scored", bCredit ? "1" : "0");
					oCurObj.setAttribute("q_begin", sDate);
					oCurObj.setAttribute("q_state", "na");
					oCurObj.setAttribute("q_reason","na");
					oCurObj.setAttribute("q_result","na");
					oCurObj.setAttribute("q_maxattempts", sAttempts);
					oCurObj.setAttribute("q_attemptslast", sAttLeft);
					oCurObj.setAttribute("q_varlength", aoVars.length);
					oCurObj.setAttribute("q_varselected", "");
					oCurObj.setAttribute("mode", sMode=="browse" ? "review" : "normal");

					// View
					if(oParams.selectSingleNode("q_credit_msg")!=null) {
						// Compatibility check for previous versions parameters
						var sCreditMsg = bCredit ? oParams.selectSingleNode("q_credit_msg").text : oParams.selectSingleNode("q_nocredit_msg").text
						document.getElementById(argobj.pid+"_q_creditcontainer").innerHTML = sCreditMsg;
					}
					document.getElementById(argobj.pid+"_q_text").innerHTML = oParams.selectSingleNode("q_question").text;
					document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAttLeft;
					var aOrder = new Array();
					for(var i=0;i<aoVars.length;i++) {
						oArgs.inum = i;
						aOrder.push(i.toString());
						oArgs.qtype = "text";
						CallMethod("q_005_text", "AppendItem", oArgs);
					}
					sOrder = aOrder.join("~");
					if(sMode!="init") {
						oArgs.btn = "skip";
						CallMethod("q_005_text", "HideButton", oArgs);
						if(bResponse) {
							for(var i=0;i<aResponses.length;i++) {
								document.getElementById(argobj.pid+"_input_"+i.toString()).value = aResponses[i];
							}
						}
						if(sMode=="browse") {
							CallMethod("q_005_text", "DisableItems", oArgs);
							oArgs.msg = "_last";
							CallMethod("q_005_text", "DisplayMessage", oArgs);
						}
					}

					// Set timer
					if(bTimer) {
						var sTimerValue = oParams.selectSingleNode("q_timer").text;
						if(sTimerValue==null || isNaN(parseInt(sTimerValue,10))) {
							bTimer = false;
						} else {
							if(sMode=="init") {
								SetInteractionParam(argobj.pid, "description", sAttLeft+"/"+sAttempts+"[,]"+sOrder+"[,]"+sTimerValue+"/"+sTimerValue);
								oCurObj.setAttribute("q_timer", sTimerValue);
								oCurObj.setAttribute("q_timer_total", sTimerValue);
								oCurObj.setAttribute("q_timer_active", "1");
								CreateTimeActionMethod("q_005_text", "TickTimer", null, 1000, oArgs);
							} else {
								var aTimer = aDesc[2].split("/");
								var sTimerRestore = aTimer[0];
								if(sTimerRestore==null) sTimerRestore = sTimerValue;
								oCurObj.setAttribute("q_timer_active", "1");
								oCurObj.setAttribute("q_timer", sTimerRestore);
								oCurObj.setAttribute("q_timer_total", sTimerValue);

								oArgs.restore = "1";
								CallMethod("q_005_text", "TickTimer", oArgs);
								oArgs.restore = null;
								if(sMode!="browse") {
									if(sTimerRestore!="0")	CreateTimeActionMethod("q_005_text", "TickTimer", null, 1000, oArgs);
								}
							}
						}
					} else {
						SetInteractionParam(argobj.pid, "description", sAttLeft+"/"+sAttempts+"[,]"+sOrder);
					}

					FireEvent(argobj.pid,"onQuestionDisplay");
					if(document.getElementById(argobj.pid)==null) return false;

					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="IfValue">
<![CDATA[

				function IfValue(argobj)
				{
					if(argobj.pid==null || argobj.iid==null) return false;
					var oObj = document.getElementById(argobj.iid);
					if(oObj.getAttribute("allow")=="0") return false;
					var sValue = oObj.value;
					if(sValue.length>0) {
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						oArgs.btn = "check";
						CallMethod("q_005_text", "DisplayButton", oArgs);
						oArgs.btn = "skip";
						CallMethod("q_005_text", "HideButton", oArgs);
					}
					FireEvent(argobj.pid,"onChangeValue");
				}
				]]>
</method>
<method type="q_005_text" name="RecordCorrectAnswers">
<![CDATA[

				function RecordCorrectAnswers(argobj)
				{
					if(argobj.pid==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aoVars = oParams.selectNodes("q_variants/item");
					var aCond;
					var sOp;
					var rValue;
					var sValue;
					var sPattern;
					var sPattern2;
					var bMulti = aoVars.length>1 ? true : false;
					var aCorrects = new Array();
					var sValue;
					var bCase = false;
					for(var i=0;i<aoVars.length;i++) {
						aCond = aoVars[i].selectNodes("q_conditions/item");
						for(var j=0;j<aCond.length;j++) {
							sOp = aCond[j].selectSingleNode("q_condition").text;
							sValue = aCond[j].selectSingleNode("q_variant").text;
							bCase = aCond[j].selectSingleNode("q_case").text=="yes" ? true : false;
							sPattern = bCase ? "{case_matters=true}" : "{case_matters=false}";
							if(sOp=="eq") {
								aCorrects.push(sPattern + sValue);
								continue;
							}
							if(sOp=="bw") {
								aCorrects.push(sPattern + "*" + sValue);
								continue;
							}
							if(sOp=="ew") {
								aCorrects.push(sPattern + sValue + "*");
								continue;
							}
							if(sOp=="cn") {
								aCorrects.push(sPattern + "*" + sValue + "*");
								continue;
							}
						}
						if(bMulti) {
							SetInteractionArrayItem(argobj.pid+"_"+i.toString(), "correct_responses", aCorrects.join("[,]"));
						} else {
							SetInteractionArrayItem(argobj.pid, "correct_responses", aCorrects.join("[,]"));
						}
					}
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="DisplayMessage">
<![CDATA[

				function DisplayMessage(argobj)
				{
					if(argobj.pid==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oMsgElem = document.getElementById(argobj.pid+"_q_objective");
					if(oMsgElem==null) return false;
					var sPath = argobj.msg==null ? "" : argobj.msg;
					var oNode = oParams.selectSingleNode("q_goal"+sPath);
					if(oNode==null) return false;
					var sMsg = oNode.text;
					oMsgElem.innerHTML = sMsg;
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="DisplayButton">
<![CDATA[

				function DisplayButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = g_isMSIE ? "inline" : "block";
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="HideButton">
<![CDATA[

				function HideButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = "none";
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="AppendItem">
<![CDATA[

				function AppendItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null || argobj.qtype==null) return false;
					var oMain = document.getElementById(argobj.pid+"_q_workarea");
					var oMatrix = document.getElementById(argobj.pid+"_q_"+argobj.qtype+"item");
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var aoVars = oParams.selectNodes("q_variants/item");
					var oCols = aoVars[argobj.inum].selectSingleNode("q_width");
					var oInputFontSize = oParams.selectSingleNode("input_font_size");
					var oClone = oMatrix.cloneNode(true);
					oClone.style.display = g_isMSIE ? "inline" : "block";
					var aTags = oClone.getElementsByTagName("td");
					aTags[0].setAttribute("id",argobj.pid+"_vtext_"+argobj.inum.toString());
					aTags[0].innerHTML = aoVars[argobj.inum].selectSingleNode("q_explanation").text;
					aTags = oClone.getElementsByTagName("input");
					var oSpot = aTags[0];
					oSpot.setAttribute("id",argobj.pid+"_input_"+argobj.inum);
					oSpot.setAttribute("allow","1");
					if(oCols!=null && oInputFontSize!=null)
					{
						var iCols = parseInt(oCols.text,10);
						var iSize = parseInt(oInputFontSize.text,10);
						if(!isNaN(iCols) && !isNaN(iSize))
						{
							iCols = iCols*iSize;
							oSpot.style.width = iCols.toString() + "px";
							iSize = Math.round(iSize*1.8);
							oSpot.style.height = iSize.toString() + "px";
						}
					}
					oMain.appendChild(oClone);
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="DisableItems">
<![CDATA[

				function DisableItems(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var aInputs = oCurObj.getElementsByTagName("input");
					for(var i=0;i<aInputs.length;i++) {
						aInputs[i].disabled = true;
						aInputs[i].setAttribute("allow","0");
					}
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="EnableItems">
<![CDATA[

				function EnableItems(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var aInputs = oCurObj.getElementsByTagName("input");
					for(var i=0;i<aInputs.length;i++) {
						aInputs[i].disabled = false;
						aInputs[i].setAttribute("allow","1");
					}
					return true;
                }
                ]]>
</method>
<method type="q_005_text" name="CountAttempts">
<![CDATA[

				function CountAttempts(argobj)
				{
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid+"_q_attempts_count")==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var iAtt = parseInt(sAtt,10);
					if(iAtt>0) {
						iAtt--;
						sAtt = iAtt.toString();
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAtt;
						oCurObj.setAttribute("q_attemptslast", sAtt);
					} else {
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = "0";
						oCurObj.setAttribute("q_attemptslast", "0");
					}
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="EvalAnswer">
<![CDATA[

				function EvalAnswer(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aoVars = oParams.selectNodes("q_variants/item");
					var aCond;
					var sOp;
					var sReason = argobj.reason;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					var bEval = true;
					var bCorrect = false;

					if(sReason=="skip") {
						CallMethod("q_005_text", "DisableItems", oArgs);
						oCurObj.setAttribute("q_timer_active", "0");
						CallMethod("q_005_text", "TickTimer", oArgs);
						document.getElementById(argobj.pid+"_q_workarea").style.visibility = "hidden";
						oArgs.msg = "_skip";
						CallMethod("q_005_text", "DisplayMessage", oArgs);
						FireEvent(argobj.pid,"onSkipQuestion");
						if(document.getElementById(argobj.pid)==null) return false;
						return true;
					}
					if(sReason=="fail") {
						CallMethod("q_005_text", "DisableItems", oArgs);
						oArgs.msg = "_failed";
						CallMethod("q_005_text", "DisplayMessage", oArgs);
						bCorrect = false;
						bEval = false;
					}
					var oNode = oParams.selectSingleNode("q_fb_switch");
					var bFB = oNode.text=="yes" ? true : false;
					oNode = oParams.selectSingleNode("q_showright");
					var bShowRight = oNode.text=="yes" ? true : false;
					var sVarLength = oCurObj.getAttribute("q_varlength");
					var iVarLength = parseInt(sVarLength,10);
					var bMulti = iVarLength>1 ? true : false;
					if(bEval) {
						var oSpot;
						var bResponse = true;
						var aResponses = new Array();
						oArgs.btn = "check";
						CallMethod("q_005_text", "HideButton", oArgs);

						for(var i=0;i<iVarLength;i++) {
							oSpot = document.getElementById(argobj.pid+"_input_"+i.toString());
							aResponses[i] = oSpot.value;
							if(aResponses[i]=="")	bResponse = false;
						}

						if(sReason!="timeout" && !bResponse) return false;

						bCorrect = true;
						var bICorrect = true;
						var sCValue;
						var sUValue;
						var bCase = false;
						for(var i=0;i<iVarLength;i++) {
							bICorrect = true;
							aCond = aoVars[i].selectNodes("q_conditions/item");
							for(var j=0;j<aCond.length;j++) {
								sUValue = aResponses[i];
								sOp = aCond[j].selectSingleNode("q_condition").text;
								sCValue = aCond[j].selectSingleNode("q_variant").text;
								bCase = aCond[j].selectSingleNode("q_case").text=="yes" ? true : false;
								if(!bCase) {
									sCValue = sCValue.toLowerCase();
									sUValue = sUValue.toLowerCase();
								}
								switch(sOp) {
									case "eq":
										if(sUValue!=sCValue) bICorrect = false;
										break;
									case "bw":
										for(var k=0;k<sCValue.length;k++) {
											if(sUValue.charAt(k)!=sCValue.charAt(k)) {
												bICorrect = false;
												break;
											}
										}
										break;
									case "ew":
										var iTmp = sUValue.length;
										for(var k=sCValue.length-1;k>=0;k--) {
											iTmp--;
											if(sUValue.charAt(iTmp)!=sCValue.charAt(k)) {
												bICorrect = false;
												break;
											}
										}
										break;
									case "cn":
										if(sUValue.indexOf(sCValue)==-1) bICorrect = false;
										break;
									default:
										bICorrect = false;
										break;
								}
							}
							if(bCorrect) {
								if(!bICorrect) bCorrect = false;
							}
							SetInteractionParam(bMulti ? argobj.pid+"_"+i.toString() : argobj.pid, "learner_response", aResponses[i]);
						}
						CallMethod("q_005_text", "CountAttempts", argobj);

						FireEvent(argobj.pid,"onAttempt");
						if(document.getElementById(argobj.pid)==null) return false;
					}
					var bCredit = oCurObj.getAttribute("q_scored")=="0" ? false : true;
					var sAttMax = oCurObj.getAttribute("q_maxattempts");
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var iAtt = parseInt(sAtt,10);
					var aObjectives = oParams.selectNodes("q_scoreboards/item/q_board");

					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sBegin = oCurObj.getAttribute("q_begin");
					var iBegin = parseInt(sBegin,10);

					if(bCorrect) {

						if(sReason=="timeout") FireEvent(argobj.pid,"onTimeout");
						if(document.getElementById(argobj.pid)==null) return false;
						FireEvent(argobj.pid,"onSuccess");
						if(document.getElementById(argobj.pid)==null) return false;

						if(sReason!="timeout") {
							oCurObj.setAttribute("q_timer_active", "0");
							CallMethod("q_005_text", "TickTimer", oArgs);
						}

						CallMethod("q_005_text", "DisableItems", oArgs);
						if(bFB) {
							oArgs.fbtype = "right";
							CallMethod("q_005_text", "DisplayFeedback", oArgs);
						}
						if(bCredit) {
							var sWeight = oParams.selectSingleNode("q_weight").text;
							var bRegress = oParams.selectSingleNode("q_pointset_auto").text=="yes" ? true : false;
							var iScore = 0;
							var sScore = "";
							if(bRegress) {
								var iWeight = parseFloat(sWeight);
								iWeight = iWeight*(iAtt+1);
								sScore = FormatReal_10_7(iWeight);
							} else {
								sScore = FormatReal_10_7(sWeight);
							}
							for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", sScore);
							SetInteractionParam(argobj.pid, "weighting", sScore);
						}
						SetInteractionParam(argobj.pid, "result", "correct");
						var iLatency = iDate - iBegin;
						var sLatency = ConvertPeriodToISO8601(iLatency);
						SetInteractionParam(argobj.pid, "latency", sLatency);
						var sTmp = GetInteractionParam(argobj.pid, "description");
						var aDesc = sTmp.split("[,]");
						var aAtt = aDesc[0].split("/");
						aAtt[0] = sAtt;
						aDesc[0] = aAtt.join("/");
						SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));

						FireEvent(argobj.pid,"onQuestionEnd");
						if(document.getElementById(argobj.pid)==null) return false;

					} else {
						var sTmp = GetInteractionParam(argobj.pid, "description");
						var aDesc = sTmp.split("[,]");
						var aAtt = aDesc[0].split("/");
						aAtt[0] = sAtt;
						aDesc[0] = aAtt.join("/");
						SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));
						if(iAtt>0 && sReason!="timeout" && bEval) {

							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;
							if(bFB) {
								oArgs.fbtype = "wrong";
								CallMethod("q_005_text", "DisplayFeedback", oArgs);
							}

						} else {

							FireEvent(argobj.pid, sReason=="timeout" ? "onTimeout" : "onAttemptsLimit");
							if(document.getElementById(argobj.pid)==null) return false;
							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;

							if(sReason!="timeout") {
								oCurObj.setAttribute("q_timer_active", "0");
								CallMethod("q_005_text", "TickTimer", oArgs);
							}

							if(bShowRight) {
								var sString = "";
								var sValue = "";
								for(var i=0;i<iVarLength;i++) {
									aCond = aoVars[i].selectNodes("q_conditions/item");
									sValue = "";
									sString = "";
									for(var j=0;j<aCond.length;j++) {
										sOp = aCond[j].selectSingleNode("q_condition").text;
										sValue = aCond[j].selectSingleNode("q_variant").text;
										switch(sOp) {
											case "eq":
												sString += sValue + " ";
												break;
											case "bw":
												sString += sValue + "* ";
												break;
											case "ew":
												sString += "*" + sValue + " ";
												break;
											case "cn":
												sString += "*" + sValue + "* ";
												break;
											default:
												break;
										}
									}
									document.getElementById(argobj.pid+"_input_"+i.toString()).value = sString;
								}
								oArgs.msg = "_right";
								CallMethod("q_005_text", "DisplayMessage", oArgs);
							}

							CallMethod("q_005_text", "DisableItems", oArgs);
							if(bFB && sReason!="fail") {
								oArgs.fbtype = sReason=="timeout" ? "timeout" : "exhausted";
								CallMethod("q_005_text", "DisplayFeedback", oArgs);
							}

							if(bCredit) {
								for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, argobj.pid, "replace", "0");
								SetInteractionParam(argobj.pid, "weighting", "0");
							}
							SetInteractionParam(argobj.pid, "result", "incorrect");

							var iLatency = iDate - iBegin;
							var sLatency = ConvertPeriodToISO8601(iLatency);
							SetInteractionParam(argobj.pid, "latency", sLatency);

							FireEvent(argobj.pid,"onQuestionEnd");
							if(document.getElementById(argobj.pid)==null) return false;
						}
					}

					return true;
				}
				]]>
</method>
<method type="q_005_text" name="DisplayFeedback">
<![CDATA[

				function DisplayFeedback(argobj)
				{
                    if(argobj.pid==null || argobj.fbtype==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oNode = oParams.selectSingleNode("q_fb_switch");
					if(oNode.text!="yes") return false;
					oNode = oParams.selectSingleNode("q_feedback"+argobj.fbtype);
					if(oNode==null) return false;
					var sText = oNode.text;
					document.getElementById(argobj.pid+"_q_fb_text").innerHTML = sText;
					document.getElementById(argobj.pid+"_q_fb_template").style.backgroundColor = argobj.fbtype=="right" ? "#E0FFE0" : "#FFE0E0";
					document.getElementById(argobj.pid+"_q_fb_template").style.borderColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_closebutton").style.backgroundColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_template").style.display = g_isMSIE ? "inline" : "block";
					if(oParams.selectSingleNode("q_fb_timerswitch").text=="yes") {
						var sFBTimer = oParams.selectSingleNode("q_fb_timer").text;
						var iFBTimer = parseFloat(sFBTimer);
						if(isNaN(iFBTimer)) return true;
						if(iFBTimer<1) iFBTimer = 1;
						iFBTimer = Math.floor(iFBTimer * 1000);
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						CreateTimeActionMethod("q_005_text", "HideFeedback", null, iFBTimer, oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="HideFeedback">
<![CDATA[

				function HideFeedback(argobj)
				{
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
					document.getElementById(argobj.pid+"_q_fb_template").style.display = "none";
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="SkipQuestion">
<![CDATA[

				function SkipQuestion(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
					var oNode = oParams.selectSingleNode("q_skip");
					if(oNode==null) return false;
					if(oNode.text!="yes") return false;
					var bFail = false;
					oNode = oParams.selectSingleNode("q_skipper2");
					if(oNode!=null) bFail = oNode.text=="yes" ? true : false;
					if(bFail) {
						oNode = oParams.selectSingleNode("q_skip_confirm");
						if(confirm(oNode.text)) {
							oArgs.btn = "skip";
							CallMethod("q_005_text", "HideButton", oArgs);
							oArgs.reason = "fail";
							CallMethod("q_005_text","EvalAnswer",oArgs);
						} else return false;
					} else {
						oArgs.btn = "skip";
						CallMethod("q_005_text", "HideButton", oArgs);
						oArgs.reason = "skip";
						CallMethod("q_005_text","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="TickTimer">
<![CDATA[

				function TickTimer(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_q_timer_progress")==null || document.getElementById(argobj.pid+"_q_timer_value")==null || document.getElementById(argobj.pid+"_q_timer_bg")==null) return false;
					var sActive = oCurObj.getAttribute("q_timer_active");
					if(sActive=="0") return false;

					var sTick = oCurObj.getAttribute("q_timer");
					if(sTick==null) return false;
					var iTick = parseInt(sTick,10);
					if(isNaN(iTick)) return false;
					var sTotal = oCurObj.getAttribute("q_timer_total");
					if(sTotal==null) return false;
					var iTotal = parseInt(sTotal,10);
					if(isNaN(iTotal)) return false;
					if(iTick>iTotal) return false;
					if(argobj.restore==null) iTick--;
					sTick = iTick.toString();
					document.getElementById(argobj.pid+"_q_timer_value").innerHTML = sTick+" sec";
					oCurObj.setAttribute("q_timer",sTick);
					var iCurT = Math.round(iTick/iTotal*100);
					var sColor = "#00CC66";
					if(iCurT<30) {
						if(iCurT<15) {
							sColor = "#FF0000";
						} else {
							sColor = "#FFCC66";
						}
					}
					var iW = Math.round((100-iCurT)*2);
					if(iW<=0) iW = 1;
					if(iW>0) {
						document.getElementById(argobj.pid+"_q_timer_progress").style.width = iW.toString()+"px";
						document.getElementById(argobj.pid+"_q_timer_bg").style.backgroundColor = sColor;
					}
					if(argobj.restore!=null) return true;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					var sTmp = GetInteractionParam(argobj.pid, "description");
					var aDesc = sTmp.split("[,]");
					var aTimer = aDesc[2].split("/");
					aTimer[0] = sTick;
					aDesc[2] = aTimer.join("/");
					SetInteractionParam(argobj.pid, "description", aDesc.join("[,]"));
					if(iTick>0) {
						CreateTimeActionMethod("q_005_text", "TickTimer", null, 1000, oArgs);
					} else {
						oArgs.reason = "timeout";
						oCurObj.setAttribute("q_timer_active","0");
						CallMethod("q_005_text","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_005_text" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "questionmode":			g_vPropertyValue = oCurObj.getAttribute("mode")=="review" ? "review" : "normal";			break;
						case "questiontype":			g_vPropertyValue = "text"; 	break;
						case "questionduration":		g_vPropertyValue = oCurObj.getAttribute("q_timer_total")!=null ? oCurObj.getAttribute("q_timer_total") : ""; 	break;
						case "questiontimer":			g_vPropertyValue = oCurObj.getAttribute("q_timer")!=null ? oCurObj.getAttribute("q_timer") : ""; 	break;
						case "itemquantity":			g_vPropertyValue = oCurObj.getAttribute("q_varlength")!=null ? oCurObj.getAttribute("q_varlength") : ""; 	break;
						case "questionvalue":
							var iVarLength = parseInt(oCurObj.getAttribute("q_varlength"),10);
							var aResponses = new Array();
							var oSpot;
							for(var i=0;i<iVarLength;i++) {
								oSpot = document.getElementById(argobj.pid+"_input_"+i.toString());
								aResponses.push(oSpot.value);
							}
							g_vPropertyValue = aResponses.join("~");
							break;
						case "attemptslast":			g_vPropertyValue = oCurObj.getAttribute("q_attemptslast")!=null ? oCurObj.getAttribute("q_attemptslast") : ""; 	break;
						case "attemptstotal":			g_vPropertyValue = oCurObj.getAttribute("q_maxattempts")!=null ? oCurObj.getAttribute("q_maxattempts") : ""; 	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
</methods>
<params>
<param objectid="OBJ_79">
<standard>yes</standard>
<wait_img></wait_img>
<go_img></go_img>
</param>
<param objectid="OBJ_66">
<input_bg_color>#FFFFFF</input_bg_color>
<input_font>Arial</input_font>
<input_font_size>11</input_font_size>
<input_font_weight>normal</input_font_weight>
<input_font_style>normal</input_font_style>
<input_font_color>#000000</input_font_color>
<hierarchy>yes</hierarchy>
<nav_lock>no</nav_lock>
<msg>You cannot jump to this slide until you visit previous slides</msg>
</param>
<param objectid="OBJ_67">
<position_text>POSITION:</position_text>
<position_divider>/</position_divider>
<position_font>Tahoma</position_font>
<position_font_size>11</position_font_size>
<position_font_weight>bold</position_font_weight>
<position_font_style>normal</position_font_style>
<position_font_color>#2e95a7</position_font_color>
</param>
<param objectid="OBJ_68">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor_user>#000000</tabcolor_user>
<tab_width>500</tab_width>
<tab_height>460</tab_height>
<tabcolor>turquoise</tabcolor>
<tab_offset>0</tab_offset>
<alt_enabled>Contents</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<tabheader><![CDATA[<P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Contents</B></SPAN></P>]]></tabheader>
<icon_default>yes</icon_default>
<i1_img></i1_img>
<i2_img></i2_img>
<i3_img></i3_img>
<hierarchy>yes</hierarchy>
<hier_default>yes</hier_default>
<h1_img></h1_img>
<h2_img></h2_img>
<nav_lock>yes</nav_lock>
<msg>You cannot jump to this slide until you visit previous slides</msg>
</param>
<param objectid="OBJ_69">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor_user>#000000</tabcolor_user>
<tab_width>500</tab_width>
<tab_height>460</tab_height>
<tabcolor>turquoise</tabcolor>
<tab_offset>92</tab_offset>
<alt_enabled>Help</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<tabheader><![CDATA[<P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Help</B></SPAN></P>]]></tabheader>
<tabtext><![CDATA[<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=0 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD vAlign=top align=middle width=15 bgColor=#f0f0f0><IMG height=7 src="images/contents_bullet_1.gif" width=7 vspace=4 border=0> </TD>
<TD bgColor=#f0f0f0><B>eLearning Module Structure</B></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=2 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD>
<P>Learning Module is a fundamental building block of the Course hierarchy representing the set of author-structured Slides. During the learning process the learner is led from one Slide to another sequentially, which is default behavior. <BR>Slide (Interactive page) is the main building block of Learning Module. Slides are used by the author to place learning material, tests, and exercises. The order of Slide correlation is predefined by the author. </P></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=0 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD vAlign=top align=middle width=15 bgColor=#f0f0f0><IMG height=7 src="images/contents_bullet_1.gif" width=7 vspace=4 border=0> </TD>
<TD bgColor=#f0f0f0><B>Navigation</B></TD></TR></TBODY></TABLE>
<TABLE style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" cellSpacing=2 cellPadding=4 width="100%" border=0>
<TBODY>
<TR>
<TD>
<P>eLearning Module navigation controls (the list may vary depending on author's design):</P>
<UL>
<LI>"Prev" and "Next" buttons enable to jump on previous and next slide correspondingly;&nbsp; 
<LI>"Replay" button enable to start current slide&nbsp;once again from the beginning (it may be useful, for example, to repeat animation on slide etc.); 
<LI>"Contents" tab or button with popup window displays the list of all slides and enables transition to any slide in the Module&nbsp;(if no&nbsp;restrictions were applied by author); 
<LI>Navigation drop-down menu displays the list of all slides and enables transition to any slide in the Module&nbsp;(if no&nbsp;restrictions were applied by author); 
<LI>"Sound On/Off" button&nbsp;toggles narration (if narration exists in the Module); 
<LI>"Close Module" button closes Module window.</LI></UL>
<P>Please note that some controls may become disabled while navigating. Usually it means that:</P>
<UL>
<LI>not all objects of&nbsp;current slide are displayed yet (depending on rules defined by author); 
<LI>not all activities required from learner on current slide&nbsp;are finished (for example, navigation controls may be disabled until question is answered etc.); 
<LI>navigation action is just impossible (for example, there's no slides previous to first one).</LI></UL>
<P>&nbsp;</P></TD></TR></TBODY></TABLE>]]></tabtext>
<nav_lock>no</nav_lock>
</param>
<param objectid="OBJ_70">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor_user>#000000</tabcolor_user>
<tab_width>500</tab_width>
<tab_height>460</tab_height>
<tabcolor>turquoise</tabcolor>
<tab_offset>184</tab_offset>
<alt_enabled>Calculator</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<tabheader><![CDATA[<P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>Calculator</B></SPAN></P>]]></tabheader>
<tabtext><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000"></SPAN>]]></tabtext>
<nav_lock>no</nav_lock>
</param>
<param objectid="OBJ_72">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor_user>#000000</tabcolor_user>
<tab_width>500</tab_width>
<tab_height>460</tab_height>
<tabcolor>turquoise</tabcolor>
<tab_offset>368</tab_offset>
<alt_enabled>About</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<tabheader><![CDATA[<P align=center><SPAN style="FONT-SIZE: 12px; COLOR: #000000; FONT-FAMILY: Arial"><B>About</B></SPAN></P>]]></tabheader>
<tabtext><![CDATA[<TABLE cellSpacing=0 cellPadding=5 width=435 border=0>
<TBODY>
<TR>
<TD style="FONT-SIZE: 11px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif">
<P>This eLearning Module was developed using <A href="http://www.courselab.com/" target=_blank>CourseLab® eLearning Content Editor</A>. Depending on purpose this Module can be used in any AICC- or SCORM-compatible Learning Management System, on CD etc.</P>
<P align=center><B>Hardware/Software requirements</B></P>
<P>This eLearning Module can be played on any PC that meets requirements below:</P>
<UL>
<LI>Operating System - Microsoft® Windows 98, Me, NT, 2000, XP (limited support of Windows 95)&nbsp;or Linux; 
<LI>Internet Browser - Microsoft® Internet Explorer 5.0 (Internet Explorer 5.5 or higher recommended), Mozilla FireFox 1.0 or higher, Netscape® 7.2 or higher; 
<LI>JavaScript enabled; 
<LI>XML support enabled (Microsoft® XML Parser 3.0 or higher recommended for Internet Explorer).</LI></UL>
<P>Additional requirements may be applied depending on media types used by Module author. </P></TD></TR></TBODY></TABLE>]]></tabtext>
<nav_lock>no</nav_lock>
</param>
<param objectid="OBJ_73">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<alt_enabled>Next Slide</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<nav_lock>yes</nav_lock>
</param>
<param objectid="OBJ_74">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<alt_enabled>Next Slide</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<nav_lock>yes</nav_lock>
</param>
<param objectid="OBJ_75">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<alt_enabled>Close module</alt_enabled>
<confirm>Module window will be closed. Are you sure?</confirm>
</param>
<param objectid="OBJ_76">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor>turquoise</tabcolor>
<alt_on>Sound is on. Turn sound off.</alt_on>
<alt_off>Sound is off. Turn sound on.</alt_off>
</param>
<param objectid="OBJ_77">
<standard>yes</standard>
<n1_img></n1_img>
<n2_img></n2_img>
<n3_img></n3_img>
<n4_img></n4_img>
<tabcolor>turquoise</tabcolor>
<alt_enabled>Replay current slide</alt_enabled>
<alt_disabled>Access is not allowed</alt_disabled>
<nav_lock>yes</nav_lock>
</param>
<param objectid="OBJ_78">
<sn_backcolor>#c7e9ef</sn_backcolor>
<sn_textcolor>#2e95a7</sn_textcolor>
<sn_font>Arial</sn_font>
<sn_font_size>18</sn_font_size>
<sn_font_weight>bold</sn_font_weight>
<sn_font_style>normal</sn_font_style>
<sn_textalign>center</sn_textalign>
</param>
<param objectid="OBJ_15">
<textbox_profile>violet</textbox_profile>
<textbox_text><![CDATA[<SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000"><FONT color=#ffffff size=7><FONT color=#ffffff size=7><SPAN style="COLOR: #000000"><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman><FONT size=1 face=Galliard-Roman>
<P align=left><B><SPAN style="FONT-SIZE: 24px">The immune system in a broad sense is a mechanism that allows a living organism to discriminate between</SPAN></B><B><SPAN style="FONT-SIZE: 24px">“self” and “non-self.”</SPAN></B></P>
<P align=left><B><SPAN style="FONT-SIZE: 24px"></SPAN></B>&nbsp;</P>
<P align=left><B><SPAN style="FONT-SIZE: 24px">&nbsp;Examples of immune systems occur in multicellular organisms as simple and ancient as sea sponges. </SPAN></B></P>
<P align=left><B><SPAN style="FONT-SIZE: 24px">&nbsp;</P>
<P align=left>In fact, complex multicellular life would be impossible without the ability to exclude external life from the internal environment.</SPAN></B></FONT></FONT></FONT></FONT></FONT></FONT><FONT color=#ffffff size=7><FONT color=#ffffff size=7></SPAN></P></FONT></FONT></SPAN>]]></textbox_text>
<textbox_margin>5</textbox_margin>
<overflow>auto</overflow>
<onclick_hide>no</onclick_hide>
<typewriter>no</typewriter>
<typewriter_speed>50</typewriter_speed>
</param>
<param objectid="OBJ_16">
<textbox_profile>violet</textbox_profile>
<textbox_text><![CDATA[<SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000">
<P align=left></P><B><I><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6>
<P><SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 20px">Innate immunity:</SPAN></FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">always present (ready to attack); many pathogenic microbes have evolved to resist innate immunity</SPAN></SPAN></P></B></I></FONT></FONT></SPAN>]]></textbox_text>
<textbox_margin>5</textbox_margin>
<overflow>auto</overflow>
<onclick_hide>no</onclick_hide>
<typewriter>no</typewriter>
<typewriter_speed>8</typewriter_speed>
</param>
<param objectid="OBJ_17">
<textbox_profile>violet</textbox_profile>
<textbox_text><![CDATA[<SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000">
<P align=left></P><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6><SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 24px">
<P align=left></P><B><I><FONT color=#ff0503 size=6><FONT color=#ff0503 size=6>
<P><SPAN style="FONT-SIZE: 20px">Adaptive immunity:</FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">stimulated by exposure </FONT></FONT><FONT color=#2c2c89 size=6><FONT color=#2c2c89 size=6><SPAN style="FONT-SIZE: 20px">to </FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">microbe; more potent</SPAN></SPAN></SPAN></SPAN></P></B></I></FONT></FONT></SPAN></FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6></SPAN></FONT></FONT></SPAN>]]></textbox_text>
<textbox_margin>5</textbox_margin>
<overflow>auto</overflow>
<onclick_hide>no</onclick_hide>
<typewriter>no</typewriter>
<typewriter_speed>8</typewriter_speed>
</param>
<param objectid="OBJ_18">
<vfile>yes</vfile>
<vURL>no</vURL>
<video_uri>images/Clonal Selection Antibody-Producing Cells.mp4</video_uri>
<video_url></video_url>
<player>auto</player>
<video_controls>mini</video_controls>
<video_autostart>yes</video_autostart>
<video_windowless>no</video_windowless>
<video_invisible>no</video_invisible>
</param>
<param objectid="OBJ_19">
<q_question><![CDATA[<SPAN style="FONT-SIZE: 16px"><SPAN style="FONT-SIZE: 20px">Innate immunity is</SPAN></SPAN>]]></q_question>
<q_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000"><SPAN style="FONT-SIZE: 20px"><FONT color=#000065><SPAN style="FONT-SIZE: 20px">stimulated by exposure <FONT color=#2c2c89 size=6><FONT color=#2c2c89 size=6><SPAN style="FONT-SIZE: 20px">to </FONT></FONT><FONT color=#000065 size=6><FONT color=#000065 size=6><SPAN style="FONT-SIZE: 20px">microbe; more potent</SPAN></SPAN></SPAN></FONT></FONT></FONT></SPAN></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-SIZE: 20px"><FONT color=#000065>always present (ready to attack); many pathogenic microbes have evolved to resist innate immunity</FONT></SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_variants>
<q_shuffle>yes</q_shuffle>
<q_att_auto>yes</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>no</q_timer_switch>
<q_timer>10</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_secondrun>no</q_secondrun>
<q_scored>yes</q_scored>
<q_weight>2.5</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_showright>no</q_showright>
<q_fb_switch>no</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackright_preview>no</q_feedbackright_preview>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackwrong_preview>no</q_feedbackwrong_preview>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">No more attempts left</SPAN>]]></q_feedbackexhausted>
<q_feedbackexhausted_preview>no</q_feedbackexhausted_preview>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out</SPAN>]]></q_feedbacktimeout>
<q_feedbacktimeout_preview>no</q_feedbacktimeout_preview>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
<q_fb_timerswitch>no</q_fb_timerswitch>
<q_fb_timer>3</q_fb_timer>
<q_realskin>curve</q_realskin>
<q_skin>violet</q_skin>
<q_button>var1</q_button>
<q_custombutton>no</q_custombutton>
<q_abtn_0></q_abtn_0>
<q_abtn_1></q_abtn_1>
<q_sbtn_0></q_sbtn_0>
<q_sbtn_1></q_sbtn_1>
<q_customspot>no</q_customspot>
<q_spot_0></q_spot_0>
<q_spot_1></q_spot_1>
<q_a_tooltip>Submit answer</q_a_tooltip>
<q_s_tooltip>Skip question</q_s_tooltip>
<q_credit_msg>Credited question</q_credit_msg>
<q_nocredit_msg>Not credited question</q_nocredit_msg>
<q_attempts_msg>Attempts:</q_attempts_msg>
<q_timer_msg>Time limit:</q_timer_msg>
<q_goal>Select correct variant</q_goal>
<q_goal_right>CORRECT ANSWER</q_goal_right>
<q_goal_last>LAST QUESTION STATE</q_goal_last>
<q_goal_skip>QUESTION IS SKIPPED</q_goal_skip>
<q_goal_failed>QUESTION IS SKIPPED AND FAILED</q_goal_failed>
<q_continue_alert>Continued approach. Number of attempts may be decreased.</q_continue_alert>
<q_browse_alert>This question is already answered. Recurring approach is not allowed.</q_browse_alert>
<q_secondrun_confirm>This question is already answered. Press OK to clear stored results and start new approach. Press Cancel otherwise. </q_secondrun_confirm>
<q_skip_confirm>Skipped question will be evaluated as failed. Are you sure?</q_skip_confirm>
</param>
<param objectid="OBJ_20">
<q_question><![CDATA[<SPAN style="FONT-SIZE: 12px; FONT-FAMILY: Arial; COLOR: #000000"><SPAN style="FONT-SIZE: 16px; FONT-FAMILY: hurme_no2-webfont, -apple-system, BlinkMacSystemFont, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: 400; COLOR: rgb(48,53,69); FONT-STYLE: normal; TEXT-ALIGN: center; ORPHANS: 2; WIDOWS: 2; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">A macromolecule that elicits an immune response by lymphocytes.</SPAN></SPAN>]]></q_question>
<q_variants>
<item>
<q_explanation><![CDATA[<P><SPAN style="FONT-SIZE: 16px; FONT-FAMILY: hurme_no2-webfont, -apple-system, BlinkMacSystemFont, sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; FONT-WEIGHT: 400; COLOR: rgb(48,53,69); FONT-STYLE: normal; TEXT-ALIGN: center; ORPHANS: 2; WIDOWS: 2; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">is called</SPAN></P>]]></q_explanation>
<q_conditions>
<item>
<q_condition>cn</q_condition>
<q_variant>antigen</q_variant>
<q_case>no</q_case>
</item>
</q_conditions>
<q_width>10</q_width>
</item>
</q_variants>
<q_attempts>1</q_attempts>
<q_timer_switch>no</q_timer_switch>
<q_timer>10</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_secondrun>no</q_secondrun>
<q_scored>yes</q_scored>
<q_weight>2.5</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_showright>yes</q_showright>
<q_fb_switch>no</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackright_preview>no</q_feedbackright_preview>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackwrong_preview>no</q_feedbackwrong_preview>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">No more attempts left</SPAN>]]></q_feedbackexhausted>
<q_feedbackexhausted_preview>no</q_feedbackexhausted_preview>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out</SPAN>]]></q_feedbacktimeout>
<q_feedbacktimeout_preview>no</q_feedbacktimeout_preview>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
<q_fb_timerswitch>no</q_fb_timerswitch>
<q_fb_timer>3</q_fb_timer>
<q_realskin>curve</q_realskin>
<q_skin>violet</q_skin>
<input_border_style>solid</input_border_style>
<input_border_width>2</input_border_width>
<input_bg_color>#FFFFFF</input_bg_color>
<input_font>Arial</input_font>
<input_font_size>12</input_font_size>
<input_font_color>#000000</input_font_color>
<q_custombutton>no</q_custombutton>
<q_abtn_0></q_abtn_0>
<q_abtn_1></q_abtn_1>
<q_sbtn_0></q_sbtn_0>
<q_sbtn_1></q_sbtn_1>
<q_a_tooltip>Submit answer</q_a_tooltip>
<q_s_tooltip>Skip question</q_s_tooltip>
<q_credit_msg>Credited question</q_credit_msg>
<q_nocredit_msg>Not credited question</q_nocredit_msg>
<q_attempts_msg>Attempts:</q_attempts_msg>
<q_timer_msg>Time limit:</q_timer_msg>
<q_goal>Enter text string</q_goal>
<q_goal_right>CORRECT ANSWER</q_goal_right>
<q_goal_last>LAST QUESTION STATE</q_goal_last>
<q_goal_skip>QUESTION IS SKIPPED</q_goal_skip>
<q_goal_failed>QUESTION IS SKIPPED AND FAILED</q_goal_failed>
<q_continue_alert>Continued approach. Number of attempts may be decreased.</q_continue_alert>
<q_browse_alert>This question is already answered. Recurring approach is not allowed.</q_browse_alert>
<q_secondrun_confirm>This question is already answered. Press OK to clear stored results and start new approach. Press Cancel otherwise. </q_secondrun_confirm>
<q_skip_confirm>Skipped question will be evaluated as failed. Are you sure?</q_skip_confirm>
</param>
</params>
<objectives>
<objective module="yes" id="total" name="This is automatically created module objective." cs="i" ss="u" scoremax="100" scoremin="0"/>
</objectives>
<runtimechecks>
</runtimechecks>
</module>
